[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "run {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "task textUiText(type: Exec) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    description \u003d \u0027Runs text UI tests\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    group \u003d \u0027verification\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    shouldRunAfter test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    workingDir \"$projectDir/text-ui-test\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    commandLine \u0027bash\u0027, \u0027-c\u0027, \u0027./runtest.sh\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "check.dependsOn textUiText"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "gary-lgy": 37
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private Duke() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ui \u003d new Ui(System.in, System.out);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            tasks \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (DukeStorageException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showWarning(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                if (input \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    input \u003d \"bye\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showMessage(\"\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "gary-lgy": 53
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASKS_COUNT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_ADD_FAILURE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_ADD_SUCCESS;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_MISSING_DESCRIPTION;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public AddCommand(final String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(final TaskList tasks) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (this.description.isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(TASK_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void addTask(final Task task, TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (tasks.addTask(task)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showMessage(TASK_ADD_SUCCESS);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showIndented(task.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showMessage(String.format(TASKS_COUNT, tasks.size()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                storage.writeTasks(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            } catch (DukeStorageException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showWarning(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new RuntimeException(TASK_ADD_FAILURE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 43
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommandWithTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public abstract class AddCommandWithTime extends AddCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public AddCommandWithTime(final String description, final LocalDateTime time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 12
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.BYE_MESSAGE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ui.showMessage(BYE_MESSAGE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 23
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Returns true if the command signals exit."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return true if the command signals exit"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected abstract void check(final TaskList tasks) throws DukeInvalidCommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Executes this command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param tasks   the existing tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param ui      the current Ui"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param storage the data file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @throws DukeExecutionException if the command cannot be executed"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 30
    }
  },
  {
    "path": "src/main/java/duke/command/CommandWithNumber.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.MISSING_TASK_NUMBER;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public abstract class CommandWithNumber extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected Integer taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public CommandWithNumber(final Integer taskNumber) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(final TaskList tasks) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (this.taskNumber \u003d\u003d null) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(MISSING_TASK_NUMBER);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (this.taskNumber \u003c 1 || this.taskNumber \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(TASK_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.DEADLINE_MISSING_TIME;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DeadlineCommand extends AddCommandWithTime {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DeadlineCommand(final String description, final LocalDateTime time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(final TaskList tasks) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super.check(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (this.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(DEADLINE_MISSING_TIME);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addTask(new Deadline(this.description, this.time), tasks, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASKS_COUNT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_DELETED;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DeleteCommand extends CommandWithNumber {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DeleteCommand(final Integer taskNumber) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(taskNumber);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Task task \u003d tasks.deleteTask(this.taskNumber);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ui.showMessage(TASK_DELETED);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ui.showIndented(task.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ui.showMessage(String.format(TASKS_COUNT, tasks.size()));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            storage.writeTasks(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (DukeStorageException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showWarning(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_ALREADY_DONE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_MARKED_AS_DONE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DoneCommand extends CommandWithNumber {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DoneCommand(final Integer taskNumber) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(taskNumber);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Task task \u003d tasks.getTask(this.taskNumber);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showMessage(TASK_ALREADY_DONE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showMessage(TASK_MARKED_AS_DONE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showIndented(task.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                storage.writeTasks(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            } catch (DukeStorageException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showWarning(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 35
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.EVENT_MISSING_TIME;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class EventCommand extends AddCommandWithTime {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public EventCommand(final String description, final LocalDateTime time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(final TaskList tasks) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super.check(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (this.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(EVENT_MISSING_TIME);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addTask(new Event(this.description, this.time), tasks, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 32
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.FIND_MISSING_QUERY;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.FIND_NO_TASKS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.FIND_TASKS;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private String[] queries;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public FindCommand(final String... queries) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.queries \u003d queries;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(TaskList tasks) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (queries \u003d\u003d null || queries.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(FIND_MISSING_QUERY);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        TaskList matches \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            for (final String query : this.queries) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                if (task.getDescription().contains(query)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    matches.addTask(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (matches.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showMessage(FIND_NO_TASKS);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showMessage(FIND_TASKS);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showIndented(matches.toString().split(\"\\\\n\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 48
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.LIST_NO_TASKS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.LIST_TASKS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showMessage(LIST_NO_TASKS);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showMessage(LIST_TASKS);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showIndented(tasks.toString().split(\"\\\\n\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 25
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public TodoCommand(final String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addTask(new Todo(this.description), tasks, ui, storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 19
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        throw new DukeExecutionException(UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 20
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DukeException(final String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeExecutionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DukeExecutionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DukeExecutionException(final String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DukeInvalidCommandException extends DukeExecutionException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DukeInvalidCommandException(final String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DukeParseException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DukeParseException(final String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeStorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DukeStorageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DukeStorageException(final String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.task.Task.DATE_TIME_FORMATTER;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // Parser is for static use only"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private Parser() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static LocalDateTime parseDateTime(final String dateTime) throws DukeParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            return LocalDateTime.parse(dateTime, DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeParseException(\"Failed to parse date time: \" + e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static Integer parseTaskNumber(final String taskNumber) throws DukeParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            return Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeParseException(\"Failed to parse task number: \" + e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Parses input to construct a Command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param input the input String to parse"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return the constructed Command"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @throws DukeParseException if an parsing error occurs"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static Command parse(final String input) throws DukeParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String[] tokens \u003d input.trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String command \u003d tokens[0].toLowerCase();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        // If tokens.length \u003d\u003d 1, there are no arguments"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String arguments \u003d (tokens.length \u003d\u003d 1) ? \"\" : tokens[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new TodoCommand(arguments);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String[] toks \u003d arguments.split(\"\\\\s*/at\\\\s*\", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new EventCommand(toks[0], toks.length \u003d\u003d 1 ? null : parseDateTime(toks[1]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String[] toks \u003d arguments.split(\"\\\\s*/by\\\\s*\", 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new DeadlineCommand(toks[0], toks.length \u003d\u003d 1 ? null : parseDateTime(toks[1]));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new DoneCommand(arguments.isBlank() ? null : parseTaskNumber(arguments));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new DeleteCommand(arguments.isBlank() ? null : parseTaskNumber(arguments));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new FindCommand(arguments.isBlank() ? null : arguments.split(\"\\\\s+\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new UnknownCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 78
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.task.Task.DATE_TIME_FORMATTER;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.LOAD_TASK_FILE_CORRUPTED;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.WRITE_TASK_FAILED;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Constructs a Storage object to save tasks to a data file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param fileName the filename of the date file to save tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Storage(final String fileName) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Path dataDir \u003d getDataDir();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.file \u003d dataDir.resolve(fileName).toFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (!dataDir.toFile().exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            dataDir.toFile().mkdirs();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Loads tasks from the data file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return tasks loaded from the date file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @throws DukeStorageException if an parsing error occurs"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public TaskList loadTasks() throws DukeStorageException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Scanner scanner;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        DukeStorageException fileCorruptedException \u003d new DukeStorageException(LOAD_TASK_FILE_CORRUPTED);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String[] tokens \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String type \u003d tokens[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                boolean isDone \u003d !tokens[1].equals(\"0\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String description \u003d tokens[2];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    case \"T\": {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        task \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    case \"D\": {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        LocalDateTime by \u003d LocalDateTime.parse(tokens[3], DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        task \u003d new Deadline(description, by, isDone);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    case \"E\": {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        LocalDateTime at \u003d LocalDateTime.parse(tokens[3], DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        task \u003d new Event(description, at, isDone);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        throw fileCorruptedException;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (IndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw fileCorruptedException;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Write tasks to data file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param tasks The tasks to write to the data file"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @throws DukeStorageException if the data file cannot be written"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void writeTasks(final TaskList tasks) throws DukeStorageException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            FileWriter writer \u003d new FileWriter(this.file, false);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            writer.write(tasks.toStorageString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeStorageException(WRITE_TASK_FAILED + e.getMessage());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private Path getDataDir() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String os \u003d System.getProperty(\"os.name\").toUpperCase();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String path;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (os.contains(\"WIN\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            path \u003d System.getenv(\"APPDATA\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else if (os.contains(\"MAC\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            path \u003d System.getProperty(\"user.home\")"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                + \"/Library/Application Support\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else { // Assume *nix"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            String xdgDataHome \u003d System.getenv(\"XDG_DATA_HOME\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            path \u003d xdgDataHome \u003d\u003d null"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ? System.getProperty(\"user.home\") + \"/.local/share\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                : xdgDataHome;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return Path.of(path + \"/Duke\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 122
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Deadline(final String description, final LocalDateTime by, final boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Deadline(final String description, final LocalDateTime by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this(description, by, false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private String getByString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return DATE_TIME_FORMATTER.format(this.by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getByString() + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String[] tokens \u003d new String[]{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"D\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.getDescription(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.getByString()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return String.join(Todo.STORAGE_STRING_SEPARATOR, tokens);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Event(final String description, final LocalDateTime at, final boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Event(final String description, final LocalDateTime at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this(description, at, false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private String getAtString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return DATE_TIME_FORMATTER.format(this.at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getAtString() + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String[] tokens \u003d new String[]{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"E\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.getDescription(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.getAtString()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return String.join(Todo.STORAGE_STRING_SEPARATOR, tokens);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    static final String STORAGE_STRING_SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    Task(final String description, final boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Returns this Task\u0027s description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return this Task\u0027s description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Returns tick or cross depending on whether this Task is done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return tick if this Task is done, cross otherwise"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or cross symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Returns true if this Task is done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return true if this Task is done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public abstract String toStorageString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 56
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public boolean addTask(final Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return tasks.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Task getTask(final int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param index index of the task to be deleted"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return the deleted task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Task deleteTask(final int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        StringBuilder ret \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ret.append(i + 1)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                .append(\".\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                .append(tasks.get(i).toString())"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                .append(\"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return ret.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Converts this TaskList into a String suitable for storage in the data file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return the converted String"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        StringBuilder ret \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ret.append(task.toStorageString())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                .append(\"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return ret.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Todo(final String description, final boolean isDone) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Todo(final String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String[] tokens \u003d new String[]{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"T\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.getDescription()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return String.join(Todo.STORAGE_STRING_SEPARATOR, tokens);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 26
    }
  },
  {
    "path": "src/main/java/duke/ui/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // Add task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_ADD_SUCCESS \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_ADD_FAILURE \u003d \"Fatal: Unable to add task\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_MISSING_DESCRIPTION \u003d \"The description of a task cannot be empty\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String DEADLINE_MISSING_TIME \u003d \"Deadline cannot be empty\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String EVENT_MISSING_TIME \u003d \"Event time cannot be empty\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // Mark as done/delete"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_MARKED_AS_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_ALREADY_DONE \u003d \"This task is already done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_DELETED \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String MISSING_TASK_NUMBER \u003d \"Task number cannot be empty\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_DOES_NOT_EXIST \u003d \"Task does not exist\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // Storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String LOAD_TASK_FILE_CORRUPTED \u003d \"Failed to load tasks from disk. Data file is corrupted.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String WRITE_TASK_FAILED \u003d \"Failed to update task list on disk. \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // List/find tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String LIST_TASKS \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String LIST_NO_TASKS \u003d \"There are currently no tasks in your list\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String FIND_TASKS \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String FIND_NO_TASKS \u003d \"There are no matching tasks in your list\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String FIND_MISSING_QUERY \u003d \"Find query cannot be empty\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // Misc"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASKS_COUNT \u003d \"Now you have %d tasks in the list\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"Bye!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String UNKNOWN_COMMAND \u003d \"Unknown command\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // This class is for static use only"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private Messages() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 37
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static final String SEPARATOR \u003d \"-\".repeat(60);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static final String INDENTATION \u003d \"  \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private Scanner input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private PrintStream output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Ui(final InputStream input, final PrintStream output) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.input \u003d new Scanner(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.output \u003d output;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private void show(final String message) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.output.println(message.stripTrailing());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showSeparator() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        show(SEPARATOR);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Shows each message on a new line."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param messages the messages to show"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showMessage(final String... messages) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        for (final String message : messages) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            show(message);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Shows each warning on a new line."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param warnings the warnings to show"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showWarning(final String... warnings) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        for (final String warning : warnings) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            show(\"Warning: \" + warning);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Shows each error on a new line."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param errors the errors to show"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showError(final String... errors) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        for (final String error : errors) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            show(\"Error: \" + error);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Shows each line, preceded by a preset level of indentation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param lines the lines to show"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showIndented(final String... lines) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        for (final String line : lines) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            show(INDENTATION + line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Shows a welcome message."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showSeparator();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(\"Hello from\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showIndented(LOGO.split(\"\\\\n\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showSeparator();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(\"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Reads a command from the user, terminated by a newline."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return the String input from the user"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (!input.hasNextLine()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 96
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        assertEquals(\"[T][✘] write code\", new Todo(\"write code\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void markAsDone_regularTask_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Todo todo \u003d new Todo(\"play\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        assertTrue(todo.isDone());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 20
    }
  },
  {
    "path": "text-ui-test/expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "   ____        _"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  |  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "There are currently no tasks in your list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  [T][✘] borrow book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Now you have 1 tasks in the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  [D][✘] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  [E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  1.[T][✘] borrow book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  2.[D][✘] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  3.[E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: The description of a task cannot be empty"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: The description of a task cannot be empty"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: The description of a task cannot be empty"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  1.[T][✘] borrow book"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  2.[D][✘] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  3.[E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Event time cannot be empty"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Deadline cannot be empty"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  1.[T][✘] borrow book"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  2.[D][✘] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  3.[E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Failed to parse date time: Text \u00271234567\u0027 could not be parsed at index 7"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Failed to parse date time: Text \u00271234567\u0027 could not be parsed at index 7"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  1.[T][✘] borrow book"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  2.[D][✘] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  3.[E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Deadline cannot be empty"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Event time cannot be empty"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  1.[T][✘] borrow book"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  2.[D][✘] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  3.[E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Deadline cannot be empty"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Event time cannot be empty"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  1.[T][✘] borrow book"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  2.[D][✘] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  3.[E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  [D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Task does not exist"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Failed to parse task number: For input string: \"*(\u0026*%^jh\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  1.[T][✘] borrow book"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  2.[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  3.[E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Task does not exist"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Task does not exist"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Failed to parse task number: For input string: \"qweiur\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  1.[T][✘] borrow book"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  2.[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  3.[E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Unknown command"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Unknown command"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Unknown command"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  1.[T][✘] borrow book"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  2.[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  3.[E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  1.[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  2.[E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  1.[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  2.[E][✘] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Find query cannot be empty"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "There are no matching tasks in your list"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Bye!"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 200
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline CS2103 assignment /by 5/8/2019 1800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event CS2102 exam /at 25/11/2019 0900"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event career fair"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline individual project"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline CS2103 assignment /by 1234567"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event CS2102 exam /at 1234567"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline CS2103 assignment /at 25/11/2019 0900"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event CS2102 exam /by 5/8/2019 1800"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline CS2103 assignment /ok 25/11/2019 0900"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event CS2102 exam /wow 5/8/2019 1800"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "done 10000"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "done *(\u0026*%^jh"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "delete 20000"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "delete qweiur"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "greatCommand"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "nice command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "THIS IS /at A NICE /by COMMAND"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "find CS"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "find assignment exam"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "find"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "find fluffy mod"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 38
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "#!/bin/bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# Backup existing data file"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "data_dir\u003d\"$HOME/.local/share/Duke\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "if [ -f \"$data_dir/duke.txt\" ]; then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  mv \"$data_dir/duke.txt\" \"$data_dir/duke.bak\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# Delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "if [ -e \"./actual.txt\" ]; then"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    rm actual.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the actual.txt"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "java -classpath ../build/classes/java/main duke.Duke \u003c input.txt \u003e actual.txt"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "diff actual.txt expected.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "result\u003d\"$?\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# Move the old data file back"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "if [ -f \"$data_dir/duke.bak\" ]; then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  mv \"$data_dir/duke.bak\" \"$data_dir/duke.txt\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "exit \"$result\""
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 26
    }
  }
]
