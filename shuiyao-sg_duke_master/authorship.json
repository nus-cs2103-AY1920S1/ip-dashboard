[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    mainClassName \u003d \"com.duke.gui.Launcher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    archiveVersion \u003d \"2.0\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                \u0027Main-Class\u0027: \u0027com.duke.gui.Launcher\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        )"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 48,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "[D][N] Duke by: 02 September 2019 09:00"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "[1. Introduction](#1-introduction)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[1.1 Overview](#11-overview)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[1.2 Command format](#12-command-format)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[1.3 Important note](#13-important-note)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "[2. Features](#2-features)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[2.1 Adding a general task](#21-adding-a-general-task-todo)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[2.2 Adding a task with deadline](#22-adding-a-task-with-deadline-deadline)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[2.3 Adding an event](#23-adding-an-event-event)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[2.4 Listing all tasks](#24-listing-all-tasks-list)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[2.5 Marking done](#25-marking-done-done)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[2.6 Removing a task](#26-removing-a-task-delete)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[2.7 Finding a text](#27-finding-a-text-find)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[2.8 Undoing last command](#28-undoing-last-command-undo)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003e[2.9 Exiting](#29-exiting-bye)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 1.1 Overview"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Duke is a personal assistant chatbot that helps a person to keep track of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "It is optimized for those who prefer to work with a Command Line Interface (CLI) while still having the benefits of a"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 1.2 Command format"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    \u003c a \u003e means a can be replaced by user input. \u003c \u003e should be removed from user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    [ a ] means a can be replaced by user input but with exactly the same format. [ ] should be removed from user input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    ( a ) means a is optional. ( ) should be removed from user input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    a ^ b means user input can be either a or b but not both."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 1.3 Important note"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Unexpected text format in duke.txt may cause exceptions and hence failure to start the application. To ensure normal"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "functioning of Duke, please delete your `duke.txt` file (if any) before you launch Duke for the first time. You do not"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "need to delete `duke.txt` from next launching onwards. To prevent unexpected encoding, please do not modify `duke.txt`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "with any external editor. You can only modify `duke.txt` within the application. "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "## 2. Features"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 2.1 Adding a general task: `todo`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Adds a general task to the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Format: `todo \u003ctask\u003e`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`todo read book 1`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`[T][N] read book 1`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Now you have 1 tasks in the list.`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 2.2 Adding a task with deadline: *deadline*"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Adds a task with deadline to the task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Format: `deadline \u003ctask\u003e /by [dd/MM/yyyy] ([HHmm])`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`deadline return book 1 /by 20/09/2019 1500`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`[D][N] return book 1 by: 20 September 2019 15:00`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 2.3 Adding an event: *event*"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Adds an event happening at particular time (or time period) to the task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Format: `event \u003ctask\u003e /at [dd/MM/yyyy] ([HHmm] ^ [HHmm HHmm])`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`event project meeting /at 21/09/2019 1500 1600`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`[E][N] project meeting at: 21 September 2019 15:00 to 16:00`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 2.4 Listing all tasks: *list*"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Lists all tasks, sorted according to the sequence of being added, with the first added task shown first."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Here are the tasks in your list:`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`1.[T][N] read book 1`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`2.[D][N] return book 1 by: 20 September 2019 15:00`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`3.[E][N] project meeting at: 21 September 2019 15:00 to 16:00`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 2.5 Marking done: *done*"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Marks a task as done."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Format: `done \u003cindex\u003e`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Nice! I\u0027ve marked this task as done:`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`[T][Y] read book 1`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 2.6 Removing a task: *delete*"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Removes a task from the task list."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Format: `delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Noted! I\u0027ve removed this task:`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`[E][N] project meeting at: 21 September 2019 15:00 to 16:00`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 2.7 Finding a text: *find*"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Searches for a text in the task list. Returns all tasks with the specified text."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Format: `find \u003ctext\u003e`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`find return`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Here are the matching tasks in your list:`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`1.[D][N] return book 1 by: 20 September 2019 15:00`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 2.8 Undoing last command: *undo*"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Revokes last command."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Format: `undo`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "After mark task 2 as done, type:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`undo`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "`Undo last command: done 2`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "And status of task 2 should be [ N ]"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "### 2.9 Exiting: *bye*"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "Format: `bye`"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 173,
      "-": 18
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/com/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents a Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    static RecycleBin recycleBin;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a Duke object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        TaskList list \u003d storage.genTaskListFromFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        parser \u003d new Parser(list);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        recycleBin \u003d new RecycleBin();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Gets Duke\u0027s response to user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param text User input text."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Response by Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static String getResponse(String text) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Command command \u003d parser.parseCommand(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (!command.isUndoCommand()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                recycleBin.addCommandString(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                if (command.isDeleteCommand()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    recycleBin.addDeletedTasks(command.getDeletedTask());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return command.execute();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (DukeException | IOException | AssertionError e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Gets remaining tasks from the file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return String representation of remaining tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String getRemainingTasks() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return storage.getFileContent();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 54,
      "-": 2
    }
  },
  {
    "path": "src/main/java/com/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.command.UndoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.exception.DukeArrayIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a parser to deal with making sense of the user command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a Parser object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list Task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    Parser(TaskList list) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Parses user\u0027s command to instructions for the bot to execute."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param input Command from user input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Command The command to be executed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    Command parseCommand(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (input.isBlank()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Empty user input is not allowed\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new ListCommand(this.list);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (input.equals(\"undo\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new UndoCommand(this.list, Duke.recycleBin);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] inputArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (inputArray[0].equals(\"done\") || inputArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return getCommand(inputArray[0], inputArray[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeArrayIndexOutOfBoundsException(\"Please enter an integer after \" + \"\u0027\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        + inputArray[0] + \"\u0027\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String description \u003d reformString(inputArray, 1, inputArray.length - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        switch (inputArray[0]) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new ToDoCommand(this.list, description);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new DeadlineCommand(this.list, description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new EventCommand(this.list, description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new FindCommand(this.list, description);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(getExceptionMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private String getExceptionMessage() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return \"Invalid user input.\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                + \"Permissible commands: todo, deadline, event, list, done, delete, find, undo, bye\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Command getCommand(String command, String position) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int index \u003d Integer.parseInt(position) - 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new DoneCommand(this.list, index);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new DeleteCommand(this.list, index);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(\"Please enter either \u0027done\u0027 or \u0027delete\u0027\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Input is not an integer. \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \"Please enter an integer after \" + \"\u0027\" + command + \"\u0027\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (list.isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeArrayIndexOutOfBoundsException(\"The task list empty. You cannot perform \" + command"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        + \" on it.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(\"Please input a number between 1 and \""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        + list.size() + \" (inclusive)\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static String reformString(String[] arr, int start, int end) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        for (int i \u003d start; i \u003c\u003d end; i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            output +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return output.trim();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 110
    }
  },
  {
    "path": "src/main/java/com/duke/RecycleBin.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class RecycleBin {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Stack\u003cString\u003e commandStrings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Stack\u003cTask\u003e deletedTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    RecycleBin() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.commandStrings \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.deletedTasks \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Gets the last command in String."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return String representation of command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return commandStrings.pop();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Gets the last deleted task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return The last deleted task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Task getDeletedTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return deletedTasks.pop();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    void addCommandString(String command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        commandStrings.push(command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    void addDeletedTasks(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        deletedTasks.push(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 41
    }
  },
  {
    "path": "src/main/java/com/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.exception.DukeFileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a file I/O class to deal with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a Storage object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param filePath File path."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Appends text to the back of a file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param input Text to append."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws DukeFileNotFoundException If file not found."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException               If failed to read or write to file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void appendText(String input) throws DukeFileNotFoundException, IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            writeToFile(input + System.lineSeparator(), true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeFileNotFoundException(\"File \" + filePath + \" not found by Duke\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Inserts text to specified position in file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param position The position where the text is inserted."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param text     The text to be inserted."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException If failed to read or write to file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void insertText(int position, String text) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            writeToFile(validateTextOutput(position, text), false);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeFileNotFoundException(\"File \" + filePath + \" not found by Duke\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Replaces chosen text in the file with a new String."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param oldString Text to be overwritten."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param newString New text."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException If failed to read or write to file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void overwriteText(String oldString, String newString) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String output \u003d validateTextOutput(oldString, newString, true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            writeToFile(output, false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeFileNotFoundException(\"File \" + filePath + \" not found by Duke\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Deletes the chosen text from the file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param toDelete Text to delete."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException If failed to read or write to file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void deleteText(String toDelete) throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String output \u003d validateTextOutput(toDelete, \"\", false);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            writeToFile(output, false);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeFileNotFoundException(\"File \" + filePath + \" not found by Duke\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private void writeToFile(String input, boolean isAppendable) throws IOException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, isAppendable);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        fw.write(input);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private String validateTextOutput(String oldString, String newString, boolean isOverwrite) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        List\u003cString\u003e inputList \u003d Files.readAllLines(Paths.get(filePath));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        for (String s : inputList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (!s.equals(oldString)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                output +\u003d s + System.lineSeparator();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } else if (isOverwrite) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                output +\u003d newString + System.lineSeparator();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private String validateTextOutput(int index, String text) throws IOException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        List\u003cString\u003e inputList \u003d Files.readAllLines(Paths.get(filePath));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return IntStream.rangeClosed(0, inputList.size())"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                .mapToObj(i -\u003e i \u003e index"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        ? inputList.get(i - 1) + System.lineSeparator()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        : i \u003c index"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        ? inputList.get(i) + System.lineSeparator()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        : text + System.lineSeparator())"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                .reduce(\"\", (x, y) -\u003e x + y);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Generates a TaskList from file input."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return TaskList with tasks remaining in the file."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    TaskList genTaskListFromFile() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                String nextLineOfFile \u003d fileScanner.nextLine().trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                Task task \u003d Task.genTaskFromFileString(nextLineOfFile);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Gets file content."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return String representation of file content."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    String getFileContent() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            StringBuilder output \u003d new StringBuilder(\"You have these remaining tasks:\\n\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                output.append(fileScanner.nextLine().trim()).append(\"\\n\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return String.valueOf(output);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            File dir \u003d new File(file.getParent());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (!dir.exists()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                dir.mkdirs();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return \"Task record \" + filePath + \" not found by Duke. New task list generated.\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 166
    }
  },
  {
    "path": "src/main/java/com/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a list of the tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final int INDENT_LEVEL \u003d 5;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private List\u003cTask\u003e listBody;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a TaskList object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.listBody \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.listBody \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Adds task to the TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param task Task to be added to task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.listBody.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void addTask(int index, Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.listBody.add(index, task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Deletes task from the TaskList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param index Index from user input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.listBody.remove(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Retrieves task from the TaskList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param index Index from user input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Task to find."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return this.listBody.get(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Returns size of the task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Size of the task list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return this.listBody.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Returns if the task list is empty."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return True if empty, false otherwise."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return this.listBody.isEmpty();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Generates a task list with each task containing specified text."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param text Text to search."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Task list with tasks containing input text."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public TaskList query(String text) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        assert !this.listBody.isEmpty() : \"The task list is empty. Find command cannot be applied to empty list\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        List\u003cTask\u003e tasks \u003d this.listBody.stream()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                .filter(task -\u003e task.toString().contains(text))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return new TaskList(tasks);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return IntStream.range(0, this.listBody.size())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                .mapToObj(i -\u003e (i + 1) + \".\" + listBody.get(i).toString() + \"\\n\")"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                .reduce(\"\", (x, y) -\u003e x + y);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 99
    }
  },
  {
    "path": "src/main/java/com/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String TASK_ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    AddCommand(TaskList list) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Response of Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException If file is not found or cannot be read."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String execute() throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.list.addTask(super.task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage.appendText(super.task.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return stringifyTask(super.list, super.task, TASK_ADDED_MESSAGE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 30
    }
  },
  {
    "path": "src/main/java/com/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a bye command for exiting the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return BYE_MESSAGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 19
    }
  },
  {
    "path": "src/main/java/com/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents command to be executed by Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected TaskList list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a Command object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param taskList Input task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Command(TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.list \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a Command object with default constructor."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Response of Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException If file is not found or cannot be read."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public abstract String execute() throws IOException;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    String stringifyTask(TaskList list, Task task, String firstLine) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String lastLine \u003d \"Now you have\" + \" \" + list.size() + \" \" + \"tasks in the list.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return firstLine + \"\\n\" + task.toString() + \"\\n\" + lastLine;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Checks whether the Command is a ByeCommand."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return True if it is a ByeCommand, false otherwise."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Checks whether the Command is a DeleteCommand."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return True if it is a DeleteCommand, false otherwise."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public boolean isDeleteCommand() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Checks whether the Command is a UndoCommand."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return True if it is a UndoCommand, false otherwise."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public boolean isUndoCommand() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Gets deleted task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Deleted task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Task getDeletedTask() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return new Task(\"\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 79
    }
  },
  {
    "path": "src/main/java/com/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a deadline command to create a deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a DeadlineCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list  Input task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param input Task description and date specified by user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DeadlineCommand(TaskList list, String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d Deadline.genDeadline(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 21
    }
  },
  {
    "path": "src/main/java/com/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a delete command to delete task from task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String TASK_DELETED_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a DeleteCommand object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list  Input task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param index Index from user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DeleteCommand(TaskList list, int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d this.list.getTask(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Output shown to user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException If file is not found or cannot be read."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String execute() throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.list.deleteTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        storage.deleteText(super.task.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return stringifyTask(super.list, super.task, TASK_DELETED_MESSAGE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Task getDeletedTask() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return super.list.getTask(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public boolean isDeleteCommand() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 53
    }
  },
  {
    "path": "src/main/java/com/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a done command to indicate that a task is done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String TASK_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a DoneCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list  Input task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param index Index from user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DoneCommand(TaskList list, int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d this.list.getTask(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Output shown to user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException If file not found or cannot be read."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String execute() throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String initialTask \u003d super.task.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        storage.overwriteText(initialTask, super.task.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return TASK_DONE_MESSAGE + \"\\n\" + task.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 40
    }
  },
  {
    "path": "src/main/java/com/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates an event command to create an event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs an EventCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list  Input task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param input Command from user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public EventCommand(TaskList list, String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d Event.genEvent(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 21
    }
  },
  {
    "path": "src/main/java/com/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a find command to search for a keyword."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String FIND_MESSAGE \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String FAIL_MESSAGE \u003d \"Sorry. I cannot find any matching results in the task list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private String text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a FindCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list Input task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param text Text to find specified by user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public FindCommand(TaskList list, String text) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Output shown to user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        TaskList taskList \u003d this.list.query(this.text);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return taskList.isEmpty() ? FAIL_MESSAGE : FIND_MESSAGE + \"\\n\" + taskList.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 34
    }
  },
  {
    "path": "src/main/java/com/duke/command/InsertCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates an insert command to insert task to a specific position."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class InsertCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String TASK_ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int position;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    InsertCommand(int position, TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.position \u003d position;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Output shown to user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException If file is not found or cannot be read."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String execute() throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.list.addTask(position, super.task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage.insertText(position, super.task.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return stringifyTask(super.list, super.task, TASK_ADDED_MESSAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 35
    }
  },
  {
    "path": "src/main/java/com/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a list command to list out all the tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String EMPTY_LIST_MESSAGE \u003d \"The task list is empty. Try adding some tasks.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a ListCommand object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list Input task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public ListCommand(TaskList list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Output shown to user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return list.isEmpty() ? EMPTY_LIST_MESSAGE + \"\\n\" : LIST_MESSAGE + \"\\n\" + list.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 29
    }
  },
  {
    "path": "src/main/java/com/duke/command/ReverseDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a command which is the \u0027flip\u0027 version of DoneCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class ReverseDoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String TASK_NOT_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as not done:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a ReverseDoneCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list  Input task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param index Index from user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public ReverseDoneCommand(TaskList list, int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d this.list.getTask(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Output shown to user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException If file is not found or cannot be read."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String execute() throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String initialTask \u003d super.task.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task.markAsNotDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        storage.overwriteText(initialTask, super.task.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return TASK_NOT_DONE_MESSAGE + \"\\n\" + task.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 40
    }
  },
  {
    "path": "src/main/java/com/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a ToDo command to create a ToDo task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class ToDoCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a ToDoCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list Task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param des  Task description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public ToDoCommand(TaskList list, String des) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d new ToDo(des);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 21
    }
  },
  {
    "path": "src/main/java/com/duke/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.RecycleBin;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates an undo command to undo previous command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private RecycleBin recycleBin;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs an UndoCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param taskList   The task list to be modified."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param recycleBin The recycle bin which record historical commands and deleted tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public UndoCommand(TaskList taskList, RecycleBin recycleBin) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.recycleBin \u003d recycleBin;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String execute() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return undoLastCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private String undoLastCommand() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String commandString \u003d recycleBin.getCommandString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] tempArray \u003d commandString.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String command \u003d tempArray[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (command.equals(\"todo\") || command.equals(\"deadeline\") || command.equals(\"event\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Command deleteCommand \u003d new DeleteCommand(super.list, super.list.size() - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            deleteCommand.execute();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Task deletedTask \u003d recycleBin.getDeletedTask();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int index \u003d Integer.parseInt(tempArray[1]) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Command insertCommand \u003d new InsertCommand(index, super.list, deletedTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            insertCommand.execute();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int index \u003d Integer.parseInt(tempArray[1]) - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Command reverseDoneCommand \u003d new ReverseDoneCommand(super.list, index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            reverseDoneCommand.execute();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return \"Undo last command: \" + commandString;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public boolean isUndoCommand() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 57
    }
  },
  {
    "path": "src/main/java/com/duke/exception/DukeArrayIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents ArrayIndexOutOfBoundsException for Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeArrayIndexOutOfBoundsException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Contructs a DukeArrayIndexOutOfBoundsException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param message Exception message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DukeArrayIndexOutOfBoundsException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 16
    }
  },
  {
    "path": "src/main/java/com/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents DukeException in general."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a DukeException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param message Exception message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 16
    }
  },
  {
    "path": "src/main/java/com/duke/exception/DukeFileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents FileNotFoundException for Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeFileNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a DukeFileNotFoundException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param message Exception message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DukeFileNotFoundException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 16
    }
  },
  {
    "path": "src/main/java/com/duke/exception/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents IllegalArgumentException for Duke. Thrown when encountered invalid user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a DukeIllegalArgumentException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param message Exception message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DukeIllegalArgumentException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 16
    }
  },
  {
    "path": "src/main/java/com/duke/exception/RedundantOperationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents RedundantOperationException. Thrown when there is redundant operation."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class RedundantOperationException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a RedundantOperationException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param message Exception message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public RedundantOperationException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 16
    }
  },
  {
    "path": "src/main/java/com/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * An example of a custom control using FXML. This control represents a dialog box consisting of an ImageView to"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * represent the speaker\u0027s face and a label containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Circle avatar;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        db.dialog.setStyle(\"-fx-background-color: #91ED61; -fx-background-radius: 10;\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        db.avatar.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        db.dialog.setStyle(\"-fx-background-color: white; -fx-background-radius: 10;\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        db.avatar.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 67
    }
  },
  {
    "path": "src/main/java/com/duke/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Launches the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param args Input arguments."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 15
    }
  },
  {
    "path": "src/main/java/com/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//package cs2103t.duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//public class Main extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    private Scene scene;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/a.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/b.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        launch();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    public void start(Stage stage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        stage.setScene(scene);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        stage.show();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        stage.setResizable(false);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//            userInput.clear();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//            userInput.clear();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//            handleUserInput();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//            handleUserInput();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        // more code to be added here later"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//     * Iteration 1: Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//     * @param text String containing text to add"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        return textToAdd;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//     * Iteration 2: Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//     * appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    private void handleUserInput() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        Label dukeText \u003d new Label(Duke.getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        userInput.clear();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.gui;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.Duke;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            stage.setTitle(\"Nezha\u0027s Best Friend\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().greet();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().printRemainingTasks();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 177
    }
  },
  {
    "path": "src/main/java/com/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/assistant.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    void printRemainingTasks() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String remainingTasks \u003d duke.getRemainingTasks();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(remainingTasks, dukeImage));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    void greet() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String greet \u003d \"Hi I\u0027m Bing Bing! Nice to meet you!\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greet, dukeImage));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 65
    }
  },
  {
    "path": "src/main/java/com/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final DateTimeFormatter FORMAT_USER_INPUT_DATE \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final DateTimeFormatter FORMAT_FILE_DATE_STRING \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String INVALID_INPUT_ERROR_MESSAGE \u003d \"Invalid input for deadline.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"You may key in one of the following with valid values:\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"deadline \u003ctask\u003e /by [dd/MM/yyyy]\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"deadline \u003ctask\u003e /by [dd/MM/yyyy HHmm]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a Deadline object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param date        Deadline date."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    Deadline(String description, String date) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.date \u003d LocalDate.parse(date, FORMAT_USER_INPUT_DATE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    Deadline(String description, String date, boolean isFromFile) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (isFromFile) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            this.date \u003d LocalDate.parse(date, FORMAT_FILE_DATE_STRING);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"The input string is not from file\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Generates a Deadline task from input String."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param s Deadline date and time represented by String."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Deadline task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static Deadline genDeadline(String s) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] newInputArray \u003d s.split(\"/by\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String des \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String by \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            des \u003d newInputArray[0].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            by \u003d newInputArray[1].trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String[] dateTimeArray \u003d by.split(\" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (dateTimeArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new Deadline(des, by);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } else if (dateTimeArray.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new DeadlineWithTime(des, dateTimeArray[0], dateTimeArray[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(INVALID_INPUT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(INVALID_INPUT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (e.getMessage().contains(\"Invalid value\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(INVALID_INPUT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    static Deadline genDeadlineFromFile(String description, String by) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] dateTimeArray \u003d by.split(\" \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        switch (dateTimeArray.length) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new Deadline(description, by, true);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new DeadlineWithTime(description, dateTimeArray[0] + \" \" + dateTimeArray[1] + \" \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + dateTimeArray[2], dateTimeArray[3], true);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Invalid input for deadline from file\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return \"[D]\" + super.toString() + \" by: \" + date.format(FORMAT_FILE_DATE_STRING);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 93
    }
  },
  {
    "path": "src/main/java/com/duke/task/DeadlineWithTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DeadlineWithTime extends Deadline {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final DateTimeFormatter FORMAT_USER_INPUT_TIME \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final DateTimeFormatter FORMAT_FILE_TIME_STRING \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    DeadlineWithTime(String description, String date, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.time \u003d LocalTime.parse(time, FORMAT_USER_INPUT_TIME);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    DeadlineWithTime(String description, String date, String time, boolean isFromFile) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description, date, isFromFile);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (isFromFile) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            this.time \u003d LocalTime.parse(time, FORMAT_FILE_TIME_STRING);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return super.toString() + \" \" + this.time.format(FORMAT_FILE_TIME_STRING);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 28
    }
  },
  {
    "path": "src/main/java/com/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates an Event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final DateTimeFormatter FORMAT_USER_INPUT_DATE \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final DateTimeFormatter FORMAT_FILE_DATE_STRING \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String INVALID_INPUT_ERROR_MESSAGE \u003d \"Invalid input for event.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"You may key in one of the following:\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"event \u003ctask\u003e /at [dd/MM/yyyy]\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"event \u003ctask\u003e /at [dd/MM/yyyy HHmm]\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"event \u003ctask\u003e /at [dd/MM/yyyy HHmm HHmm]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs an Event object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param date        Event date represented by String."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    Event(String description, String date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.date \u003d LocalDate.parse(date, FORMAT_USER_INPUT_DATE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    Event(String description, String date, boolean isFromFile) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (isFromFile) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            this.date \u003d LocalDate.parse(date, FORMAT_FILE_DATE_STRING);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"The input string is not from file\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Generates an Event task from input String."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param s String representation of event."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Event task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static Event genEvent(String s) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] newInputArray \u003d s.split(\"/at\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String des \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String at \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            des \u003d newInputArray[0].trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            at \u003d newInputArray[1].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String[] dateTimeArray \u003d at.split(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (dateTimeArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new Event(des, at);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (dateTimeArray.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new EventWithStartTime(des, dateTimeArray[0], dateTimeArray[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } else if (dateTimeArray.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new EventWithEndTime(des, dateTimeArray[0], dateTimeArray[1], dateTimeArray[2]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(INVALID_INPUT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(INVALID_INPUT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (e.getMessage().contains(\"Invalid value\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(INVALID_INPUT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    static Event genEventFromFile(String des, String at) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] dateTimeArray \u003d at.split(\" \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        switch (dateTimeArray.length) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new Event(des, at, true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new EventWithStartTime(des, dateTimeArray[0] + \" \" + dateTimeArray[1] + \" \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + dateTimeArray[2], dateTimeArray[3], true);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new EventWithEndTime(des, dateTimeArray[0] + \" \" + dateTimeArray[1] + \" \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + dateTimeArray[2], dateTimeArray[3], dateTimeArray[5], true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Invalid input for event from file\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return \"[E]\" + super.toString() + \" at: \" + date.format(FORMAT_FILE_DATE_STRING);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 102
    }
  },
  {
    "path": "src/main/java/com/duke/task/EventWithEndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class EventWithEndTime extends EventWithStartTime {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    EventWithEndTime(String description, String date, String startTime, String endTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description, date, startTime);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (startTime.compareTo(endTime) \u003e 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Invalid input for ending time. Ending time should be later than or\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \" equal to starting time\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.endTime \u003d LocalTime.parse(endTime, FORMAT_USER_INPUT_TIME);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    EventWithEndTime(String description, String date, String startTime, String endTime, boolean isFromFile) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description, date, startTime, isFromFile);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (startTime.compareTo(endTime) \u003e 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Invalid input for ending time. Ending time should be later than or\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \"equal to starting time\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (isFromFile) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            this.endTime \u003d LocalTime.parse(endTime, FORMAT_FILE_TIME_STRING);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"The input string is not from file\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return super.toString() + \" to \" + this.endTime.format(FORMAT_FILE_TIME_STRING);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 37
    }
  },
  {
    "path": "src/main/java/com/duke/task/EventWithStartTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class EventWithStartTime extends Event {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    static final DateTimeFormatter FORMAT_USER_INPUT_TIME \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    static final DateTimeFormatter FORMAT_FILE_TIME_STRING \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    EventWithStartTime(String description, String date, String startTime) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.startTime \u003d LocalTime.parse(startTime, FORMAT_USER_INPUT_TIME);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    EventWithStartTime(String description, String date, String startTime, boolean isFromFile) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description, date, isFromFile);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (isFromFile) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            this.startTime \u003d LocalTime.parse(startTime, FORMAT_FILE_TIME_STRING);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"The input string is not from file\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return super.toString() + \" \" + this.startTime.format(FORMAT_FILE_TIME_STRING);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 32
    }
  },
  {
    "path": "src/main/java/com/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.exception.RedundantOperationException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a Task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws DukeIllegalArgumentException If encountered invalid user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Task(String description) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Please specify your task description after your command\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Gets status icon."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return \"Y\" if done. \"N\" if not done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return (isDone ? \"[\" + \"Y\" + \"]\" : \"[\" + \"N\" + \"]\"); //return Y or N symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new RedundantOperationException(\"The task has already been done\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Marks the task as not done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void markAsNotDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (!this.isDone) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new RedundantOperationException(\"The task has already been done\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Converts String in file to Task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param s String representation of tasks in file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Task Specified by the String."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static Task genTaskFromFileString(String s) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String status \u003d s.charAt(4) + \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        Task task \u003d genDefaultTaskFromFileString(s);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        task.validateStatus(status);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private void validateStatus(String status) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (status.equals(\"Y\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static Task genDefaultTaskFromFileString(String s) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        char taskType \u003d s.charAt(1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int index \u003d s.indexOf(\"] \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String taskContent \u003d s.substring(index + 1).trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new ToDo(taskContent);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String[] deadlineContentArray \u003d taskContent.split(\"by:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return Deadline.genDeadlineFromFile(deadlineContentArray[0].trim(), deadlineContentArray[1].trim());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String[] eventContentArray \u003d taskContent.split(\"at:\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return Event.genEventFromFile(eventContentArray[0].trim(), eventContentArray[1].trim());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Invalid input from file\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.getDescription();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 102
    }
  },
  {
    "path": "src/main/java/com/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a ToDo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a ToDo object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 21
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            \u003cLabel prefHeight\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minWidth\u003d\"50.0\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                \u003cfont\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                \u003c/font\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            \u003cLabel prefHeight\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        \u003cCircle fx:id\u003d\"avatar\" fill\u003d\"#00000006\" pickOnBounds\u003d\"true\" radius\u003d\"25.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                \u003cInsets bottom\u003d\"16.0\" left\u003d\"16.0\" right\u003d\"16.0\" top\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        \u003c/Circle\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 31
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fx:controller\u003d\"com.duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"523.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"76.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                AnchorPane.rightAnchor\u003d\"0.0\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"600.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                      style\u003d\"-fx-background-color: #F1F1F1;\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 27
    }
  },
  {
    "path": "src/test/java/com/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 12
    }
  },
  {
    "path": "src/test/java/com/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import com.duke.exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void genDeadline_illegalFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String input \u003d \"return book BY 02/03/2019\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            assertEquals(\"[D]\" + \"[\" + \"N\" + \"]\" + \" return book by: 2 MARCH 2019\", Deadline.genDeadline(input));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (DukeIllegalArgumentException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String error \u003d \"Invalid input for deadline.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \"You may key in one of the following with valid values:\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \"deadline \u003ctask\u003e /by [dd/MM/yyyy]\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \"deadline \u003ctask\u003e /by [dd/MM/yyyy HHmm]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            assertEquals(error, e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 24
    }
  },
  {
    "path": "src/test/java/com/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String input \u003d \"project meeting /at 01/09/2019 1400 1630\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        assertEquals(\"[E]\" + \"[\" + \"N\" + \"]\" + \" project meeting at: 01 September 2019 14:00 to 16:30\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                Event.genEvent(input).toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 14
    }
  },
  {
    "path": "src/test/java/com/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void markAsDoneTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        Task task \u003d new Task(\"read\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        assertEquals(\"[\" + \"N\" + \"]\", task.getStatusIcon());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        assertEquals(\"[\" + \"Y\" + \"]\", task.getStatusIcon());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 15
    }
  }
]
