[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimYiJie": 22,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "import main.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        //Level 5"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        System.out.print(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        while (!input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "            if (input.length() \u003d\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"list\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                String result \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    result \u003d result + \"    \" + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                result \u003d result.equals(\"\") ? \"\\n\" : result;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                System.out.print(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        \"    Here are the tasks in your list:\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        result +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "            } else if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                Scanner sc2 \u003d new Scanner(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                sc2.next();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                int taskNumber \u003d sc2.nextInt();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                Task targetedTask \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                Task.markAsDone(targetedTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                sc2.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                System.out.print(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        \"     Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        \"       \" + targetedTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "            } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"delete\")){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                Scanner sc2 \u003d new Scanner(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                sc2.next();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                int taskNumToRemove \u003d sc2.nextInt();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                Task removed \u003d tasks.remove(taskNumToRemove - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                System.out.print(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        \"     Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        \"       \" + removed.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        \"     Now you have \" + tasks.size() + \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                sc2.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                Task t \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                String taskType \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        taskType \u003d \"todo\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                            throw new InsufficientTaskArgumentException(\"Not enough arguments for To Do\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        t \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    } else if (input.length() \u003e 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        taskType \u003d \"deadline\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        if (input.length() \u003c 10 || !input.contains(\"/\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                            throw new InsufficientTaskArgumentException(\"Not enough arguments for Deadline\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        String res \u003d input.substring(9);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        String[] pair \u003d res.split(\"/\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        t \u003d new Deadline(pair[0], pair[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    } else if (input.length() \u003e 5 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        taskType \u003d \"event\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        if (input.length() \u003c 7 || !input.contains(\"/\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                            throw new InsufficientTaskArgumentException(\"Not enough arguments for Deadline\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        String res \u003d input.substring(6);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        String[] pair \u003d res.split(\"/\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        t \u003d new Event(pair[0], pair[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                        throw new InvalidTaskException(input + \" is not a valid task\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                } catch (InsufficientTaskArgumentException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    System.out.print(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                            \"     ☹ OOPS!!! The description of a \" + taskType + \" cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                            \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                } catch (InvalidTaskException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    System.out.print(e.toString() + \"\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                System.out.print(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                            \"     Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                            \"       \"+ t.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                            \"     Now you have \" + tasks.size() + \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                            \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        System.out.print(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                \"     Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimYiJie": 104,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "package PACKAGE_NAME;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimYiJie": 4
    }
  },
  {
    "path": "src/main/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "package main.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        String displayDate \u003d this.date.substring(0, 2) + \": \" + this.date.substring(3);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                + super.description + \" (\" + displayDate + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimYiJie": 17
    }
  },
  {
    "path": "src/main/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "package main.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        String displayDate \u003d this.date.substring(0, 2) + \": \" + this.date.substring(3);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                + super.description + \" (\" + displayDate + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimYiJie": 17
    }
  },
  {
    "path": "src/main/task/InsufficientTaskArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "package main.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "public class InsufficientTaskArgumentException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public InsufficientTaskArgumentException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimYiJie": 8
    }
  },
  {
    "path": "src/main/task/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "package main.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "public class InvalidTaskException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    String result;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public InvalidTaskException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        this.result \u003d msg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        return \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "                \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimYiJie": 16
    }
  },
  {
    "path": "src/main/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "package main.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    protected Boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public static void markAsDone(Task task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        task.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimYiJie": 23
    }
  },
  {
    "path": "src/main/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "package main.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimYiJie": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "deadline buy fruits /by Tue"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "eatsomefreepizza"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LimYiJie": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimYiJie"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "LimYiJie": 21
    }
  }
]
