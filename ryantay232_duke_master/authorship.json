[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    mainClassName \u003d \u0027duke.Launcher\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    //mainClassName \u003d \u0027duke.Duke\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "run {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 20,
      "-": 14
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "T|Y|Do assignment"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "E|N|Attend party|30/08/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "D|N|Return book|31/08/2019 0900"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 3
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * Main class for Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Initialises all necessary objects for Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param filePath path to duke.txt save file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            taskList \u003d new TaskList(storage.readDuke());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Gets a response from user and sends back the output. Prints output in both CLI and GUI."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param input input String from user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return output String from duke"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        Command command \u003d new Command(parser.getCommand(input), input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        Command result \u003d new Command();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            result \u003d taskList.doCommand(command);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            ui.printOutput(result.getOutput());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            ui.printOutput(taskList.getReminder());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            storage.writeDuke(result.getTaskList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } catch (DukeException | IOException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            result.setOutput(ex.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            ui.printError(ex);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return result.getOutput();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String getReminder() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return taskList.getReminder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 59,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 7
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        Application.launch(duke.Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.gui.MainWindow;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Duke duke \u003d new Duke(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 33
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.parser.Comd;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * A class for storing information for commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Comd comd;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String output;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Command(Comd comd, String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.comd \u003d comd;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Comd getComd() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return comd;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void setOutput(String output) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.output \u003d output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void setTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 48
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(duke.gui.MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/goodnight.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/goodmorning.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String reminders \u003d duke.getReminder();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                DialogBox.getDukeDialog(reminders, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 56
    }
  },
  {
    "path": "src/main/java/duke/parser/Comd.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public enum Comd {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    BYE, LIST, DONE, DELETE, TODO, DEADLINE, EVENT, FIND, NULL"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 5
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * Class for parsing user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Gets a command from the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param input original String input from user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return an integer that represents a command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Comd getCommand(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] i \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        switch (i[0]) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return Comd.BYE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return Comd.LIST;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return Comd.DONE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return Comd.DELETE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return Comd.TODO;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return Comd.DEADLINE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return Comd.EVENT;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return Comd.FIND;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                return Comd.NULL;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 39
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * Class for reading and writing Duke data."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    final private static Charset ENCODING \u003d StandardCharsets.UTF_8;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param path path for duke.txt"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.path \u003d Paths.get(path);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Reads text file from path."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return text lines from .txt as List of Strings"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private List\u003cString\u003e read() throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return Files.readAllLines(path, ENCODING);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Writes text file to path."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param lines text lines to write onto .txt as List of Strings"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private void write(List\u003cString\u003e lines) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        Files.write(path, lines, ENCODING);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Reads text file and formatted into ArrayList of tasks to be used on other classes."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return ArrayList of tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public ArrayList\u003cTask\u003e readDuke() throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        List\u003cString\u003e lines \u003d read();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        for (String s : lines) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            String[] split \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            Task task \u003d new Task();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            switch (split[0]) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    task \u003d new ToDo(split[2]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    task \u003d new Deadline(split[2], split[3]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    task \u003d new Event(split[2], split[3]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    assert false : \"Wrong format in file.\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            if (split[1].contains(\"Y\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Writes text file in .txt format."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void writeDuke(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            lines.add(task.toFile());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        write(lines);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 100
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * Class for deadline tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private DateTimeFormatter formatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Constructor for deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param description description of deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param date        date and time of deadline in String format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        dateTime \u003d LocalDateTime.parse(date, formatter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Returns String in text file format."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return a String to write on text file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"D|\" + getStatusIcon() + \"|\" + description + \"|\" + dateTime.format(formatter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Returns String to output on terminal."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return a String to output on terminal"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \"(by: \" + dateTime.format(formatter) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * Class for events."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Variable for date and time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private DateTimeFormatter formatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Constructor for event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param description description of event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param date        date and time of event in String format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        dateTime \u003d LocalDateTime.parse(date, formatter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Returns String in text file format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return a String to write on text file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"E|\" + getStatusIcon() + \"|\" + description + \"|\" + dateTime.format(formatter);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Returns String to output on terminal."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return a String to output on terminal"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \"(at: \" + dateTime.format(formatter) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * Class for tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Description of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Done status."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Default constructor. Sets isDone to false."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Constructor of Task. Sets description and sets isDone to false."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Returns status of isDone."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return \"Y\" or \"N\" depending on isDone"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Set isDone to true."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Returns String in text file format."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return a String to write on text file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return getStatusIcon() + \"|\" + description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Returns String to output on terminal."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return a String to output on terminal"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 75
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * Class for To Do tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Constructor for To Do task. Sets description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Returns String in text file format."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return a String to write on text file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"T|\" + getStatusIcon() + \"|\" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Returns String to output on terminal."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return a String to output on terminal"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 34
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * Class for operations to task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Default constructor for TaskList. Used in case of unable to locate file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param tasks ArrayList of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Carry out operations according to commands from user and returns the output."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param command command object with input string and command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return resultant command with updated task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Command doCommand(Command command) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String input \u003d command.getInput();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String output \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        switch (command.getComd()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                output \u003d byeCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                output \u003d listCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                output \u003d doneCommand(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                output \u003d deleteCommand(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                output \u003d toDoCommand(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                output \u003d deadlineCommand(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                output \u003d eventCommand(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                output \u003d findCommand(input);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            case NULL:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                throw new DukeException(\"Wrong input.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        command.setOutput(output);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        command.setTaskList(tasks);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Returns a list of upcoming events and deadlines."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return reminders of a list of events/deadlines"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String getReminder() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        ArrayList\u003cTask\u003e remindTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                LocalDateTime deadlineDate \u003d deadline.getDateTime();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                if (now.isBefore(deadlineDate)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    if (!deadline.isDone()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                        remindTasks.add(task);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                LocalDateTime eventDate \u003d event.getDateTime();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                if (now.isBefore(eventDate)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    remindTasks.add(task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (remindTasks.isEmpty()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            s \u003d \"No upcoming tasks.\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            s \u003d \"Here\u0027s a list of upcoming tasks:\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(s);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            for (int i \u003d 0; i \u003c remindTasks.size(); i++) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                sb.append(i + 1).append(\".\").append(remindTasks.get(i));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                if (i \u003c remindTasks.size() - 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            s \u003d sb.toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String byeCommand() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"See you again.\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String listCommand() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String s \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(s);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            sb.append(i + 1).append(\".\").append(tasks.get(i));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            if (i \u003c tasks.size() - 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String doneCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] s \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            throw new DukeException(\"Task number cannot be empty.\\n\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int n \u003d Integer.parseInt(s[1]) - 1;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (n \u003c 0 || n \u003e tasks.size() - 1) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            throw new DukeException(\"Task number is not on the list.\\n\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        tasks.get(n).markAsDone();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\" + tasks.get(n);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String deleteCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] s \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            throw new DukeException(\"Task number cannot be empty.\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        int n \u003d Integer.parseInt(s[1]) - 1;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (n \u003c 0 || n \u003e tasks.size() - 1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            throw new DukeException(\"Task number is not in the list.\\n\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task: \\n\" + tasks.get(n) +"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                \"\\nNow you have \" + (tasks.size() - 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        tasks.remove(n);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String toDoCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] s \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            throw new DukeException(\"The description cannot be empty.\\n\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        Task task \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\" + task +"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String deadlineCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] s \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            throw new DukeException(\"The description cannot be empty.\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (!input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            throw new DukeException(\"Missing /by.\\n\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String desc \u003d input.substring(9, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String date \u003d input.substring(input.indexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        Task task \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\" + task +"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String eventCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] s \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            throw new DukeException(\"The description cannot be empty.\\n\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (!input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            throw new DukeException(\"Missing /at.\\n\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String desc \u003d input.substring(6, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String date \u003d input.substring(input.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        Task task \u003d new Event(desc, date);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\" + task +"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    private String findCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String[] s \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            throw new DukeException(\"The description cannot be empty.\\n\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        String search \u003d input.substring(5).toLowerCase();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            if (t.getDescription().toLowerCase().contains(search)) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                foundTasks.add(t);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        StringBuilder sb;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (foundTasks.isEmpty()) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            sb \u003d new StringBuilder(\"There are no matching tasks.\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            sb \u003d new StringBuilder(\"These are the found tasks:\\n\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                sb.append(i + 1).append(\".\").append(foundTasks.get(i));"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                if (i \u003c foundTasks.size() - 1) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 235
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " * Class for UI elements of duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * String of a line."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    final private static String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * String of an indent."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    final private static String indent \u003d \"    \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * String of Duke logo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    final private static String logo \u003d line"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"     ____        _           \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"    |  _ \\\\ _   _| | _____   \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"    | | | | | | | |/ / _ \\\\  \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"    | |_| | |_| |   \u003c  __/   \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"     Hello! I\u0027m Duke          \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + \"     What can I do for you?   \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            + line;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Default constructor of Ui."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Prints logo."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Gets input from user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @return String of user input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Prints error when duke.txt is missing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        System.out.println(indent + \"!!! FAILED TO LOAD LIST !!!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Prints output."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param output output to be printed"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void printOutput(String output) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        if (output !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * Prints error message from exception."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     * @param ex DukeException"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void printError(Exception ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        System.out.println(\"Error: \" + ex.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 81
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 24
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void getCommand_bye() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        assertEquals(0, new Parser().getCommand(\"bye\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void getCommand_list() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        assertEquals(1, new Parser().getCommand(\"list\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 18
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        assertEquals(\"[N] test\", new Task(\"test\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 15
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    public void testToFile() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "        assertEquals(\"T|N|test\", new ToDo(\"test\").toFile());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "lul"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "event return book /at sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "deadline do test /by then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ryantay232"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ryantay232"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "ryantay232": 23
    }
  }
]
