[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.frontend.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            list \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            list \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        ui \u003d new Ui(list);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void run() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        ui.start();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        storage.save(ui.getFinalList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void displayIntro() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        String dir \u003d System.getProperty(\"user.dir\") + \"/src/main/java/data/dukeData.txt\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        Duke duke \u003d new Duke(dir);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        duke.displayIntro();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 32,
      "-": 10
    }
  },
  {
    "path": "src/main/java/data/dukeData.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[D][✘] Finish 2103 iP work for this week (by: Tue Sep 10 18:00:00 SGT 2019)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[D][✘] do 3230 tutorial (by: Thu Aug 01 18:00:00 SGT 2019)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[D][✘] finish ger quiz (by: Wed Feb 01 00:00:00 SGT 19)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[D][✘] finish 2100 tutorial (by: Tue Sep 17 18:00:00 SGT 2019)"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/CompleteTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class CompleteTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public CompleteTaskException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        super(\"Sorry, you don\u0027t have that task in the list to complete.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DeleteTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class DeleteTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public DeleteTaskException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        super(\"Sorry, you don\u0027t have that task in the list to delete.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeWrongTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class DukeWrongTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public DukeWrongTaskException(String type) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        super(String.format(\"☹ OOPS!!! The description or timing of %s is problematic.\", type));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public EmptyListException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        super(\"Your list is currently empty. Try telling me some tasks!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCmdException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class UnknownCmdException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public UnknownCmdException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 7
    }
  },
  {
    "path": "src/main/java/duke/frontend/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.frontend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private static int cnt \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private static Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public Ui(TaskList ls) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.list \u003d ls;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public TaskList getFinalList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void action(String cmd) throws DukeWrongTaskException, UnknownCmdException, DeleteTaskException, CompleteTaskException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        String command \u003d p.parseCommand(cmd);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        String desc \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                if (cmd.length() \u003c\u003d 5 || parseInt(cmd.substring(5)) \u003e\u003d list.size() + 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    throw (new CompleteTaskException());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                index \u003d parseInt(cmd.substring(5));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                list.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                System.out.println(list.get(index - 1).toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                String keyWord \u003d p.parseDesc(cmd);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                ArrayList\u003cTask\u003e lst \u003d list.returnAllMatchingTasks(keyWord);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                if (lst.size() !\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    for (Task ta: lst) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                        System.out.printf(\"%d.%s\\n\", list.getTaskList().indexOf(ta) + 1, ta.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                if (cmd.length() \u003c\u003d 7 || parseInt(cmd.substring(7)) \u003e\u003d list.size() + 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    throw (new DeleteTaskException());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                index \u003d parseInt(cmd.substring(7));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                System.out.println(\"Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                System.out.println(list.get(index - 1).toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                list.remove(index - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                cnt--;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                System.out.printf(\"Now you have %d tasks in the list.\\n\", list.size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                if (cmd.length() \u003c\u003d 9 || !cmd.contains(\"/\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    throw (new DukeWrongTaskException(\"deadline\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                desc \u003d p.parseDesc(cmd);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                String ddl \u003d p.parseDate(cmd);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                t \u003d new Deadline(desc, ddl);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                list.add(cnt++, t);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                if (cmd.length() \u003c\u003d 6 || !cmd.contains(\"/\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    throw (new DukeWrongTaskException(\"event\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                desc \u003d p.parseDesc(cmd);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                String dt \u003d p.parseDate(cmd);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                t \u003d new Event(desc, dt);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                list.add(cnt++, t);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                if (cmd.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    throw (new DukeWrongTaskException(\"toDo\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                t \u003d new ToDo(p.parseDesc(cmd));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                list.add(cnt++, t);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                throw (new UnknownCmdException());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        System.out.printf(\"Now you have %d tasks in the list.\\n\", list.size());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        System.out.println(\"There\u0027s no event in your task list!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        cnt \u003d list.size();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        Scanner sc \u003d  new Scanner(System.in);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            System.out.println(\"How can I help you?\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            String command \u003d p.parseCommand(input);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    System.out.println(\"Saving tasks...\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                            throw (new EmptyListException());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                        for(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                            System.out.println(((i + 1) + \".\").concat(list.get(i).toString()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    } catch (EmptyListException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                        action(input);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 142
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String parseCommand(String s) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        if (s.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        } else if (s.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return \"list\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        } else if (s.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return \"todo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        } else if (s.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        } else if (s.toLowerCase().startsWith(\"find\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return \"find\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        } else if (s.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return \"event\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        } else if (s.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return \"delete\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        } else if (s.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return \"deadline\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return \"unknown command detected\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String parseDesc(String s) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        String cmd \u003d parseCommand(s);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                index \u003d s.indexOf(\"/\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                return s.substring(9, index - 1).trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                index \u003d s.indexOf(\"/\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                return s.substring(6, index - 1).trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                return s.substring(5).trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                return \"No description provided\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String parseDate(String s) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        int index \u003d s.indexOf(\"/\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        String rawDate \u003d s.substring(index + 4).trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            Date d \u003d sdf.parse(rawDate);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return d.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return rawDate;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 60
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public Storage(String fp) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.filePath \u003d fp;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                String item \u003d sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                String type \u003d item.substring(0, 3);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                String status \u003d item.substring(3, 6);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                String desc;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                String date \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                if (item.contains(\"(\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    int dateDescInd \u003d item.indexOf(\"(\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    desc \u003d item.substring(7, dateDescInd - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    date \u003d item.substring(dateDescInd + 5, item.length() - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    desc \u003d item.substring(7);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            Task t \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                case \"[D]\" : t \u003d new Deadline(desc, date); break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                case \"[T]\" : t \u003d new ToDo(desc); break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                case \"[E]\" : t \u003d new Event(desc, date); break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    System.out.println(\"Unknown event type encountered.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            if (status.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            list.add(t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        System.out.println(\"Loaded save data file successfully.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            //Create a new file if no file found"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                if (f.createNewFile())"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    System.out.println(\"No existing file found! New save data file created!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                    System.out.println(\"File already exists.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                throw new DukeException(\"Data file creation failed.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void save(TaskList tl) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            for (Task t: tl.getTaskList()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                fw.write(t.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                fw.write(\"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            throw new DukeException(\"Data file saving failed.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 82
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    protected String ddl;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public Deadline(String description, String d) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.ddl \u003d d;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String getDdl() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return ddl;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", getStatusIcon(), getDescription(), getDdl());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    protected String dateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public Event(String description, String dt) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.dateTime \u003d dt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", getStatusIcon(), getDescription(), getDateTime());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 28
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        list \u003d lst;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void add(int index, Task t) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        list.add(index, t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public ArrayList\u003cTask\u003e returnAllMatchingTasks(String keyWord) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            Task t \u003d list.get(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            if (t.getDescription().toLowerCase().contains(keyWord.toLowerCase())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                lst.add(t);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 47
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 15
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void parseDeadlineTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        String input \u003d \"Deadline Finish 2103 iP work for this week /by 21/9/2019 1800\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        String expected \u003d \"[D][\\u2718] Finish 2103 iP work for this week (by: Sat Sep 21 18:00:00 SGT 2019)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        Deadline ddl \u003d new Deadline(p.parseDesc(input), p.parseDate(input));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        assertEquals(expected, ddl.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 15
    }
  }
]
