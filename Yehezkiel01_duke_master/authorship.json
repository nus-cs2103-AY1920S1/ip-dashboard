[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toStringForHardDisk() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        String[] datas \u003d new String[4];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[0] \u003d \"D\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[1] \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[2] \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[3] \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return String.join(\" | \", datas);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    static final String pathToHardDisk \u003d \"../../../data/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        TaskManager.separator();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        TaskManager.separator();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static void closing() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        TaskManager.separator();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        TaskManager.separator();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static Deadline parseDeadlineTask(String instruction) throws DukeException{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String suffix \u003d instruction.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String description \u003d suffix.split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String by \u003d suffix.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new Deadline(description, by);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"Deadline task formatting error.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static Todo parseTodoTask(String instruction) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String description \u003d instruction.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new Todo(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static Event parseEventTask(String instruction) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String suffix \u003d instruction.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String description \u003d suffix.split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String at \u003d suffix.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new Event(description, at);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch(IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"Event task formatting error.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static void parseDoneInstruction(TaskManager taskManager, String instruction) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        int index \u003d Integer.parseInt(instruction.split(\" \")[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        taskManager.markAsDone(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static void parseDeleteInstruction(TaskManager taskManager, String instruction) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        int index \u003d Integer.parseInt(instruction.split(\" \")[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        taskManager.deleteTask(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static boolean parseInstruction(TaskManager taskManager, String instruction) throws DukeException{"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        if (instruction.equals(\"bye\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            closing();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if (instruction.equals(\"list\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            taskManager.printTasks();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if (instruction.matches(\"^done \\\\d+$\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            parseDoneInstruction(taskManager, instruction);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            saveToHardDisk(taskManager);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if (instruction.matches(\"^delete \\\\d+$\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            parseDeleteInstruction(taskManager, instruction);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            saveToHardDisk(taskManager);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if (instruction.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            taskManager.addTask(parseDeadlineTask(instruction));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            saveToHardDisk(taskManager);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if  (instruction.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            taskManager.addTask(parseTodoTask(instruction));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            saveToHardDisk(taskManager);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if (instruction.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            taskManager.addTask(parseEventTask(instruction));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            saveToHardDisk(taskManager);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static void saveToHardDisk(TaskManager taskManager) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            FileWriter writer \u003d new FileWriter(pathToHardDisk);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            writer.write(taskManager.printTasksForHardDisk());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            System.out.println(\"There is an issue in updating the duke.txt\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Initializes task manager with data from harddisk"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @return an initialized Task Manager"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static TaskManager initializeTaskManager() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            File file \u003d new File(pathToHardDisk);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                String[] datas \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                switch (datas[0]) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                    task \u003d new Event(datas[2], datas[3]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                    task \u003d new Deadline(datas[2], datas[3]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                    task \u003d new Todo(datas[2]);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                    throw new DukeException(\"Unrecognized tasks\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                if (datas[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new TaskManager(tasks);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new TaskManager();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            System.out.println(\"Failed to parse duke.txt\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new TaskManager();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        TaskManager taskManager \u003d initializeTaskManager();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                String instruction \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                if (!parseInstruction(taskManager, instruction)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                TaskManager.separator();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                TaskManager.separator();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 168,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return \"☹ OOPS!!! \" + getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toStringForHardDisk() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        String[] datas \u003d new String[4];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[0] \u003d \"E\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[1] \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[2] \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[3] \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return String.join(\" | \", datas);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 24
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public abstract String toStringForHardDisk();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 23
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public TaskManager(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        printTotalTask();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void markAsDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        validateIndex(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"  \" + tasks.get(index));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        validateIndex(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        printTotalTask();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"Here are the task in your list:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            System.out.println((i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String printTasksForHardDisk() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            builder.append(tasks.get(i).toStringForHardDisk());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            builder.append(\"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public static void separator() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private void printTotalTask() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        boolean isPlural \u003d tasks.size() \u003e 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" task\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                + (isPlural ? \"s\" : \"\") + \" in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private void validateIndex(int index) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        if (!(0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size())) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"Invalid task index.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 78
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toStringForHardDisk() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        String[] datas \u003d new String[3];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[0] \u003d \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[1] \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[2] \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return String.join(\" | \", datas);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "deadline CS2103T Project /by Today"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 14
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 34
    }
  }
]
