[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "# About"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Duke is a chatbot that helps you schedule and track daily tasks!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "# Screenshot"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003cimg src\u003d\"/docs/Ui.png\" width\u003d\"600\" height\u003d\"800\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "# Tech Stack"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Java, JavaFX, Gradle"
      }
    ],
    "authorContributionMap": {
      "mirozo": 6,
      "-": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mirozo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mirozo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 35,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Duke is a java application that allows the user to keep track with all their daily tasks by interacting with "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "a virtual chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "## 2. Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003e Note: Commands are all in small-case letters."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "### 2.1 Add a task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "---"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "There are 3 types of tasks that can be added into Duke\u0027s tasks list, namely *To Dos, Deadlines, and Events*."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Command: `[TYPE OF TASK] [DESCRIPTION]`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "The **date and time** given to a **Deadline** or **Event** needs to follow the following format:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Format: `DD/MM/YYYY HHMM`, where time is in 24 hours."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Example: `19/09/2019 1400`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "#### 2.1.1 Add ToDo"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Command: `todo [Task Details]`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Example: `todo destroy the avengers`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "#### 2.1.2 Add Deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Command: `deadline [Task Details] /by [DD/MM/YYYY HHMM]`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Example: `deadline submit CS2103 assignment /by 19/09/2019 1400`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": "#### 2.1.3 Add Event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Command: `event [Task Details] /at [DD/MM/YYYY HHMM]`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Example: `event party /at 19/09/2019 1400`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mirozo"
        },
        "content": "### 2.2 List all tasks "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mirozo"
        },
        "content": "---"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mirozo"
        },
        "content": "List all the tasks in the tasks list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Command: `list`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mirozo"
        },
        "content": "### 2.3 Mark a task as done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mirozo"
        },
        "content": "---"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Mark a task in the tasks list as \"Done\" using the given index of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003e You can check the index of the task by running a `list` command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Command: `done [INDEX]`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Example: `done 1`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Condition: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Index **must be a positive integer** and must be within the range of the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mirozo"
        },
        "content": "### 2.4 Delete a task "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mirozo"
        },
        "content": "---"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Delete a task from the tasks list using the given INDEX of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003e You can check the index of the task by running a `list` command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Command: `delete [INDEX]`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Example: `delete 1`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Condition: "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Index **must be a positive integer** and must be within the range of the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mirozo"
        },
        "content": "### 2.5 Find tasks "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mirozo"
        },
        "content": "---"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Find tasks that contain the KEYWORD given in their description and list them out."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Command: `find [KEYWORD]`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Example: `find assignment`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mirozo"
        },
        "content": "### 2.6 Find free time"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mirozo"
        },
        "content": "---"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Find the next available free time to schedule an event."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003eNote: Only existing *Events* in the task list will be taken into consideration to avoid conflict. "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003e(ToDOs and Deadlines will be ignored)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mirozo"
        },
        "content": "The user is able to specify the duration of the event he wants to find a time slot for."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003eEach event in the task list is assumed to be 4 hours long. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003eE.g. Current Date and Time: 19/09/2019 14:00"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003eDate and Time of next event in list: 19/09/2019 14:00  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003e`when 3` returns 19/09/2019 18:00"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Command: `when [DURATION OF EVENT]`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Example: `when 3` "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Finds the next available 3 hour time slot from now. If current Date and Time is 19/09/2019 14:00 and "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Date and Time of next event in list is 19/09/2019 14:00 then `when 3` returns 19/09/2019 18:00."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mirozo"
        },
        "content": "### 2.7 Exit "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mirozo"
        },
        "content": "---"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Exit the program."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Command: `bye`"
      }
    ],
    "authorContributionMap": {
      "mirozo": 92,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Circle circle;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        circle.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Generates and returns a DialogBox with the input text and image."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param text User\u0027s input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param img User\u0027s picture."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return DialogBox representing user\u0027s speech."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        db.setBackground(new Background(new BackgroundFill(Color.LIGHTSKYBLUE, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Generates and returns a DialogBox with the Duke\u0027s reply and image."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param text Duke\u0027s reply."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param img Duke\u0027s picture."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return DialogBox representing Duke\u0027s speech."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        db.setBackground(new Background(new BackgroundFill(Color.PINK, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 83
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Constructor for Duke object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param filePath path of .txt file storing the tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            tasks \u003d new TaskList(storage.getTasks());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Returns response corresponding to user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param input user command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return Response as String."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        Parser parser \u003d new Parser(input, ui, tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return parser.doCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return \"Something went wrong :( Please try again\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Helper method for Storage.updateTasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public void updateTasksHelper() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        boolean isUpdated \u003d storage.updateTasks(tasks.getList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        assert isUpdated : \"file not updated\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 38,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 12
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Duke duke \u003d new Duke(\"../tasks.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ned.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/thanos.jpeg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Initializes Duke and gets duke to greet user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                DialogBox.getDukeDialog(ui.greet(), dukeImage)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        duke.updateTasksHelper();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 58
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private String taskDetails;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Constructor for parser object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param line command given by user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param ui UI object from duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param list Current list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Parser(String line, Ui ui, TaskList list) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        String[] words \u003d line.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.command \u003d words[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        String taskDetails \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            if (i \u003d\u003d words.length - 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                taskDetails +\u003d words[i];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                taskDetails +\u003d words[i] + \" \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.taskDetails \u003d taskDetails;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Execute the command that user typed in, together with the"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * additional tasks details given."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @throws ParseException If date given is in the incorrect format and not dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String doCommand() throws ParseException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        if (taskDetails.equals(\"\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            if (command.equals(\"list\") || command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                return ui.showDescriptionEmptyError();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return ui.sayGoodbye();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        case \"when\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            int duration \u003d Integer.parseInt(taskDetails);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            Date timeSlot \u003d list.findFreeTime(duration);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return ui.findFreeTime(duration, timeSlot);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return ui.list(list.getList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                Task task \u003d list.doTask(taskDetails);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                return ui.taskDone(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                return ui.noSuchTaskError();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                Task task \u003d list.deleteTask(taskDetails);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                return ui.taskDeleted(task) + \"\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                        + ui.showNumberOfTasks(list.getList());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                return ui.noSuchTaskError();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            Todo task \u003d new Todo(taskDetails);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            list.addTask(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return ui.taskCreated(task) + \"\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    + ui.showNumberOfTasks(list.getList());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String[] halves \u003d taskDetails.split(\"/by\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String description \u003d halves[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String by \u003d halves[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            list.addTask(deadline);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return ui.taskCreated(deadline) + \"\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    + ui.showNumberOfTasks(list.getList());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String[] halves \u003d taskDetails.split(\"/at\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String description \u003d halves[0];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String by \u003d halves[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            Event event \u003d new Event(description, by);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            list.addTask(event);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return ui.taskCreated(event) + \"\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    + ui.showNumberOfTasks(list.getList());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String keyword \u003d taskDetails;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            for (Task item: list.getList()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                if (item.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    filteredList.add(item);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return ui.list(filteredList);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return ui.showWrongCommandError();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 117
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Constructor for Storage object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param filePath path of .txt file containing tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @throws IOException when file path is not correct or File object is unable to be initialized"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Returns File object from a string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param filePath location of the file as a string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return File object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public File getFile(String filePath) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return f;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Updates the .txt with the most recent changes."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param list The existing ArrayList of Tasks after user has made changes to it."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public boolean updateTasks(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String result \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    Boolean isDone \u003d task.getStatus();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    int done \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                        done \u003d 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    result +\u003d \"todo\" + \"\u003e\u003e\" + done + \"\u003e\u003e\" + description + \"\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    String description \u003d deadline.getDescription();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    Boolean isDone \u003d deadline.getStatus();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    String by \u003d dateToStringConverter(deadline.getBy());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    int done \u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                        done \u003d 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    result +\u003d \"deadline\" + \"\u003e\u003e\" + done + \"\u003e\u003e\" + description + \"\u003e\u003e\" + by + \"\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    String description \u003d event.getDescription();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    Boolean isDone \u003d event.getStatus();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    String at \u003d dateToStringConverter(event.getAt());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    int done \u003d 0;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                        done \u003d 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    result +\u003d \"event\" + \"\u003e\u003e\" + done + \"\u003e\u003e\" + description + \"\u003e\u003e\" + at + \"\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            fw.write(result);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Converts a Date object to a String object in dd/MM/yyyy HHmm format."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param date Date object"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public static String dateToStringConverter(Date date) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        String stringDate \u003d sdf.format(date);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Reads the .txt file where the Tasks are stored and returns"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * an ArrayList of Tasks."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return ArrayList of Tasks"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        assert this.file !\u003d null : \"file should exist by now\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String[] strings \u003d line.split(\"\u003e\u003e\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String firstWord \u003d strings[0];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String isDone \u003d strings[1];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            String description \u003d strings[2];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                Todo task \u003d new Todo(description);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    task.doTask();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                Deadline deadline \u003d new Deadline(description, strings[3]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    deadline.doTask();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                list.add(deadline);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                Event event \u003d new Event(description, strings[3]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    event.doTask();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                list.add(event);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 152
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Gets the ArrayList from a TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return ArrayList of Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Adds a task to the TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Deletes the task in the specified index."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param position index of task in task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return The deleted task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Task deleteTask(String position) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        int index \u003d Integer.parseInt(position) - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        assert index \u003e\u003d 0 : \"index should not be negative\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        Task currTask \u003d list.get(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return currTask;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Change the status of a task of position p in the TaskList"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * to \"done\" and returns the updated Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param position index + 1 of the task in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return Updated Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Task doTask(String position) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        int index \u003d Integer.parseInt(position) - 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        assert index \u003e\u003d 0 : \"index should not be negative\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        Task currTask \u003d list.get(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        currTask.doTask();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return currTask;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Gets a list of dates that are already filled up."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return ArrayList of dates that are unavailable."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public ArrayList\u003cDate\u003e getFilledTimeSlots() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        ArrayList\u003cDate\u003e timeSlots \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                Date date \u003d ((Event) task).getAt();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                timeSlots.add(date);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return timeSlots;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Finds the next available date and time that has a"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * time slot of the specified duration."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param duration Duration of time slot needed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return Date of next available time slot."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Date findFreeTime(int duration) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        ArrayList\u003cDate\u003e timeSlots \u003d this.getFilledTimeSlots();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        Date currentTime \u003d new Date();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            boolean passed \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            for (Date slot: timeSlots) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                long diff \u003d slot.getTime() - currentTime.getTime();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                int diffHours \u003d (int) (diff / (60 * 60 * 1000));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                if (diffHours \u003e\u003d -duration \u0026\u0026 diffHours \u003c\u003d duration) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    passed \u003d false;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            if (passed) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                currentTime \u003d addHours(currentTime, 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return currentTime;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Adds the number of specified hours to a give date."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param currentDate Given date."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param hours Number of hours to be added."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return Date with hours added."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public static Date addHours(Date currentDate, int hours) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance(); // creates calendar"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        cal.setTime(currentDate); // sets calendar time/date"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        cal.add(Calendar.HOUR_OF_DAY, hours); // adds one hour"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return cal.getTime();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 116
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"Hello, I\u0027m Thanos!\\nWhat can I do for you? \\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String taskDone(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String taskDeleted(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:  \\n \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                + task.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String showNumberOfTasks(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"Now you have \" + list.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String taskCreated(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                + task.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String sayGoodbye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Lists the current tasks in the given list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param list List of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @return String of current tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String list(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        String result \u003d \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            Task currTask \u003d list.get(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            result +\u003d (i + 1) + \". \" + currTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String showDescriptionEmptyError() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"OOPS!!! The description of a task cannot be empty.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String showWrongCommandError() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"OOPS!!! Error loading file.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String noSuchTaskError() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"Unable to find task. Please try again.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String findFreeTime(int hours, Date time) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"Next available time slot of \" + hours + \" hour(s) is on \" + time + \".\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 68
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Constructor for Deadline object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param description Description of Deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param by Deadline for task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @throws ParseException Exception when given string cannot be converted into date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(by);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.by \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 32
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private int duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * Constructor for Event object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param description Description of Event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @param at Starting date for Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     * @throws ParseException Exception when given string cannot be converted into date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(at);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.at \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.duration \u003d 4;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Date getAt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public void setDuration(int duration) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 36
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Boolean getStatus() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 33
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 15
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"600.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        \u003cCircle fx:id\u003d\"circle\" radius\u003d\"50\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "mirozo": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"-Infinity\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "mirozo": 18
    }
  },
  {
    "path": "src/main/test/DukeTest/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "package DukeTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public void TestStringConversion() throws ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        assertEquals(\"[D][✘] run(by: Wed Dec 12 12:00:00 SGT 2012)\", new Deadline(\"run\", \"12/12/2012 1200\").toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 16
    }
  },
  {
    "path": "src/main/test/DukeTest/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "package DukeTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import Task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public void TestStringConversion() throws ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        assertEquals(\"[E][✘] run(at: Wed Dec 12 12:00:00 SGT 2012)\", new Event(\"run\", \"12/12/2012 1200\").toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 16
    }
  },
  {
    "path": "src/main/test/DukeTest/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "package DukeTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    public void TestStringConversion(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "        assertEquals(\"[T][✘] run\", new Todo(\"run\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mirozo": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": " What can I do for you? "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "[T][✘] dance"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": " Now you have 1 tasks in the list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "[D][✘] dance (by: 2pm)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": " Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": "[E][✘] dance all around (at: 4-6pm)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": " Now you have 3 tasks in the listHere are the tasks in your list: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "1. [T][✘] dance"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": "2. [D][✘] dance (by: 2pm)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "3. [E][✘] dance all around (at: 4-6pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Here are the tasks in your list: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mirozo"
        },
        "content": "1. [T][✘] dance"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mirozo"
        },
        "content": "2. [D][✘] dance (by: 2pm)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mirozo"
        },
        "content": "3. [E][✘] dance all around (at: 4-6pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mirozo"
        },
        "content": " [T][✓] dance"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mirozo"
        },
        "content": "Here are the tasks in your list: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mirozo"
        },
        "content": "1. [T][✓] dance"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mirozo"
        },
        "content": "2. [D][✘] dance (by: 2pm)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mirozo"
        },
        "content": "3. [E][✘] dance all around (at: 4-6pm)"
      }
    ],
    "authorContributionMap": {
      "mirozo": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "todo dance"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": "deadline dance /by 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "event dance all around /at 4-6pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "mirozo": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mirozo"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mirozo"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mirozo"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mirozo"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mirozo"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mirozo"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mirozo"
        },
        "content": "javac -C:\\Users\\johnn\\CS2103\\Week2\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mirozo"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mirozo"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mirozo"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mirozo"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mirozo"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mirozo"
        },
        "content": "java -C:\\Users\\johnn\\CS2103\\Week2\\src\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mirozo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mirozo"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mirozo"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "mirozo": 21
    }
  }
]
