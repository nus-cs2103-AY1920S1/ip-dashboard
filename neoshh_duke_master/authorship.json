[
  {
    "path": "src/main/java/Action.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Action {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public static void welcomeMessage() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public static void byeMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public static void doTask(String command, ArrayList\u003cTask\u003e list) throws IncompleteCommandException, InvalidCommandException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        String[] commandStrArray \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            if (commandStrArray[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"     \" + i + \".\" + list.get(i - 1));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                if (commandStrArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    list.get(Integer.parseInt(commandStrArray[1]) - 1).markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                } else if (commandStrArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"       \" + list.get(Integer.parseInt(commandStrArray[1]) - 1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    list.remove(Integer.parseInt(commandStrArray[1]) - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    if (commandStrArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        if (commandStrArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                            throw new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        Task task \u003d new ToDo(commandStrArray[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    } else if (commandStrArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        if (commandStrArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                            throw new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        String[] descriptionStrArray \u003d commandStrArray[1].split(\"/by\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        Task task \u003d new Deadline(descriptionStrArray[0], descriptionStrArray[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    } else if (commandStrArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        if (commandStrArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                            throw new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        String[] descriptionStrArray \u003d commandStrArray[1].split(\"/at\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        Task task \u003d new Event(descriptionStrArray[0], descriptionStrArray[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        throw new InvalidCommandException(\"Invalid Command\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (IncompleteCommandException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     ☹ OOPS!!! The description of a \" + commandStrArray[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 84
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public static void main(String[] args) throws IncompleteCommandException, InvalidCommandException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        Action.welcomeMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            Action.doTask(command, list);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        Action.byeMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 16,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 14
    }
  },
  {
    "path": "src/main/java/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class IncompleteCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public IncompleteCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 5
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                + \"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                + \"       [\\u2713] \" + description + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                + \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 26
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 11
    }
  }
]
