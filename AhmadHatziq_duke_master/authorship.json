[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\tid \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\tid \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\ttoolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    // mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\tmainClassName \u003d \"seedu.duke.core.Launcher\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    compile \u0027joda-time:joda-time:2.9.4\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "test {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 32,
      "-": 19
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "event type | isDone | description | extra description | dateCreated | lastModified"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "T | 0 | Hunt down Jedi |  dummyExtraDescriptionForTodo | 2019-09-20T21:49:25.395655200 | 2019-09-21T00:10:52.951209300"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "D | 0 | Invade Coruscant | 27th of December 2019, 11.59pm | 2019-09-20T21:49:44.641070100 | 2019-09-21T00:13:01.312224600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "E | 0 | Lightsabre practice with Count Dooku | Geonosis | 2019-09-20T23:34:01.443673300 | 2019-09-21T00:07:28.664660800"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Obot Wan Kenobi is a chatbot based on the persona of Jedi Master Obi-Wan Kenobi. He can handle basic tasks such as recording to-do, deadline and event tasks; as well as output relevant statistics based on the user\u0027s history."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "![Image of Ui screenshot](https://ahmadhatziq.github.io/duke/Ui.png)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Fig. 1. Screenshot of Obot"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "### 1. Adding a new to-do task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "A to-do task is the most simplest form of a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "To-do task can be added via the following format:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "todo [task_name]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Sample command:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`todo Laundry`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`[T][x] Laundry`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Now you have X tasks in the list`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "### 2. Adding a new event task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "An event task is similar to a to-do task, escept that it is associated with a particular location, the event location."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Event task can be added via the following format:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "event [event_name] /at [event_location]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Sample command:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`event Exam /at MPSH1-C`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`[E][X] Exam (at: MPSH1-C)`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Now you have X tasks in the list`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "### 3. Adding a new deadline task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "A deadine task is similar to a to-do task, except that it is associated with a particular cut-off time, the due deadline."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Deadline task can be added via the following format:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "deadline [deadline_name] /by [deadline_date]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "[deadline_date] must be of the following format:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "__DD/MM/YYYY HHMM__"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Sample command:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`deadline CS Quiz /by 31/12/2019 2359`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`[D][X] CS Quiz (by: 31st of December 2019, 11.59pm)`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Now you have X tasks in the list`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "### 4. Viewing task-related statistics"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Obot can also give the statistics regarding the number of tasks completed __in the current day.__"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Tasks completed more than one day ago will not be counted."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "To view statistics pertaining to each task (to-do, event or deadline), enter the following command:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "stats [event_type]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "[event_type] is either: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "* `deadline`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "* `todo`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "* `event`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Sample command:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`stats event`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Possible outcome 1:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Events completed today: 1`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Well Done!`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Possible outcome 2:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Events completed today: 0`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`You can do better! :)`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "### 5. Viewing all statistics"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Aside from task-related statistics, Obot can also give statistics regarding the __total commands entered, total tasks deleted__ and __total tasks completed__. These statistics will consider tasks that have previously been marked completed but deleted by the user. "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "To view all statistics (which also included the tasks completed in the current day), enter the following sample command:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Sample command:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`stats all`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Possible outcome:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Listing all statistics`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Commands Executed: 150`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Tasks Deleted: 20`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total To-Dos Completed: 12`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Todos Completed TODAY: 2`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Deadlines Completed: 7`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Deadlines Completed TODAY: 1`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Events Completed: 4`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Events Completed TODAY: 2`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "### 6. Resetting global statistics"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Global statistic values can be reset. However, dynamic statistic values (Feature 4) cannot be reset."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "To reset global statistic values, enter the following sample code: "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`stats reset`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "To view the outcome, view all statistics with:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`stats all`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Listing all statistics`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Commands Executed: 1` - Number of total commands executed will be 1 as `stats all` has been executed."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Tasks Deleted: 0`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total To-Dos Completed: 0`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Todos Completed TODAY: 2` - Dynamic statistic based on when a `todo` was marked completed."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Deadlines Completed: 0`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Deadlines Completed TODAY: 1` - Dynamic statistic based on when a `deadline` was marked completed."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Events Completed: 0`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`Total Events Completed TODAY: 2` - Dynamic statistic based on when aa `event` was marked completed."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "### 7. Exiting the application"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Obot can be exited by entering the following command:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "`The Force will be with you, always`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 159,
      "-": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ByeCommandCli.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"bye\" Command for Duke\u0027s CLI."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class ByeCommandCli extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public ByeCommandCli() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws IOException When writing the saved data to file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        saveData(tasks, taskStorage, stats, statStorage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getByeSequence();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Saves data of tasks and stats to txt files."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws IOException Thrown when writing data to file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void saveData(TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                         Storage statStorage) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskStorage.clearTaskFileBeforeSaving();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            taskStorage.writeToTaskFile(tasks.getTask(i).toSaveString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        statStorage.saveStatFile(stats);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 67
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ByeCommandGui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"bye\" Command for Duke\u0027s GUI."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class ByeCommandGui extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public ByeCommandGui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (ui.getByeSequence());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Command class to represent all commands which Duke can do."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the logic of the Command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Custom error."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws IOException IOException error."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                                   Storage statStorage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"deadline\" command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public DeadlineCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Custom error."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                           Statistic stats, Storage statStorage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        checkForInvalidInput(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Deadline newDeadline \u003d newDeadline(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        tasks.addTask(newDeadline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getDeadlineSequence(tasks, newDeadline);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Creates new Deadline object from User string."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Deadline object,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Deadline newDeadline(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String description \u003d Parser.getDeadlineDescription(fullCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String extraDescription \u003d Parser.getDeadlineDateTime(fullCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert description !\u003d null : \"Description should not be null\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert extraDescription !\u003d null : \"Extra Description should not be null\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        checkValidDate(extraDescription);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description, extraDescription);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return newDeadline;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Checks if date format is in the sequence \u0027DD/MM/YYYY\u0027."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param dateString Unparsed date string."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Exception."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void checkValidDate(String dateString) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        for (char c : dateString.toCharArray()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            if (c \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                count \u003d count + 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (count !\u003d 2) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            throw new DukeException(\"Date format must be \u0027DD/MM/YYYY\u0027\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Checks for invalid inputs from User input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand String from User."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Custom exception."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void checkForInvalidInput(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if ((fullCommand.length() \u003c 9)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // fullCommand contains only the string \"deadline\"."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else if ((fullCommand.lastIndexOf(\u0027/\u0027) \u003c 1)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                || (4 + fullCommand.lastIndexOf(\u0027/\u0027) \u003e fullCommand.length()))  {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // fullCommand does not contain \u0027/\u0027 chars or there are no char after \"/by\"."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The time period of an event cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 111
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"delete\"\" Command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /** Default constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public DeleteCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Custom error."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int taskNum \u003d Parser.getDeletedTaskNum(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // taskList index (starts from 0) differs from taskNum (starts from 1)."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskNum--;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        checkInvalidTaskNum(taskNum, tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Task taskToDelete \u003d tasks.getTask(taskNum);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalTasksDeleted();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getDeleteSequence(tasks, taskToDelete);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Checks for invalid task numbers from the User."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskNum Int task index to be deleted."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Thrown when taskNum is invalid"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void checkInvalidTaskNum(int taskNum, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (taskNum \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // taskNum does not exist."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            throw new DukeException(\"Task no. \" + (taskNum + 1) + \" does not exist\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 70
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"done\" command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public DoneCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Thrown when taskNum doesn\u0027t exist"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int taskNum \u003d Parser.getFinishedTaskNum(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // taskList index (starts from 0) differs from taskNum (starts from 1)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskNum--;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        checkInvalidTaskNum(taskNum, tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        tasks.getTask(taskNum).setDone(stats);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getDoneSequence(tasks, taskNum);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Checks for invalid task numbers from the User."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskNum Int task index to be deleted."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Thrown when taskNum is invalid"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void checkInvalidTaskNum(int taskNum, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (taskNum \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // taskNum does not exist."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            throw new DukeException(\"Task no. \" + (taskNum + 1) + \" does not exist\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 66
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"event\" command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public EventCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Thrown when there is an invalid Deadline command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        checkForInvalidInput(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Event newEvent \u003d newEvent(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        tasks.addTask(newEvent);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getEventSequence(tasks, newEvent);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Creates a new Event object from user string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand User input string."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return New Event object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Event newEvent(String fullCommand) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String description \u003d Parser.getEventDescription(fullCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String extraDescription \u003d Parser.getEventLocation(fullCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Event newEvent \u003d new Event(description, extraDescription);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return newEvent;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Checks for invalid input for Deadline command."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand String of user input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Thrown when there is an invalid Deadline command."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void checkForInvalidInput(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if ((fullCommand.length() \u003c 6)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // fullCommand contains only the string \"event\"."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else if ((fullCommand.lastIndexOf(\u0027/\u0027) \u003c 1)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                || (4 + fullCommand.lastIndexOf(\u0027/\u0027) \u003e fullCommand.length()))  {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // fullCommand does not contain \u0027/\u0027 char or there are no chars after \"/at\"."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            throw new DukeException(\":-( OOPS!!! The location of an event cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 84
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"find\"\" command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public FindCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String taskToFind \u003d Parser.getFindTask(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        TaskList similarTasks \u003d tasks.findSimilarTasks(taskToFind);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getFoundTasks(similarTasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"list\"\" command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getListSequence(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/StatsAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"stats all\" command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class StatsAllCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public StatsAllCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getAllStatSequence(stats, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/StatsDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"stats deadline\" command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class StatsDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public StatsDeadlineCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getCompletedDeadlineStatSequence(stats,tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/StatsEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"stats event\" command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class StatsEventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public StatsEventCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getCompletedEventStatSequence(stats,tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/StatsResetCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"stats reset\" command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class StatsResetCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public StatsResetCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.resetStats();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getResetStatSequence(stats, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/StatsTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"stats todo\" command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class StatsTodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public StatsTodoCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getCompletedTodoStatSequence(stats,tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the \"todo\" command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public TodoCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Thrown when invalid input from user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stats,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalCommandsExecuted();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        checkForInvalidInput(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Todo newTodo \u003d newTodo(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        tasks.addTask(newTodo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ui.getTodoSequence(tasks, newTodo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Creates a new Todo object from User string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand User input string."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return New Todo object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Todo newTodo(String fullCommand) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String description \u003d Parser.getTodoDescription(fullCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Todo newTodo \u003d new Todo(description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return newTodo;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Checks for invalid input for a Todo command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand User input string."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Throws error to do command has invalid user input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void checkForInvalidInput(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (fullCommand.length() \u003c 5) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // fullCommand contains only the string \"todo\"."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 76
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Represents the unrecognizable text command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public UnknownCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Full String command entered by the User."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskStorage Storage object for tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param statStorage Storage object for stats."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String sequence to be printed to the User."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Thrown due to completely unrecognizable command from User."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String execute(String fullCommand, Ui ui, TaskList tasks, Storage taskStorage, Statistic stat,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                          Storage statStorage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        throw new DukeException(\":-( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/core/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.ByeCommandCli;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.GraphicalUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.CommandLineUi;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Project Duke is a Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * storage attribute is a Storage object, which helps read and write data to the text file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Storage taskStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Storage statStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Statistic stats;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private CommandLineUi cli;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private GraphicalUi gui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private String taskFilePath \u003d \"C:\\\\Users\\\\hatzi\\\\Documents\\\\Sourcetree\\\\duke\\\\data\\\\tasks.txt\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private String statFilePath \u003d \"C:\\\\Users\\\\hatzi\\\\Documents\\\\Sourcetree\\\\duke\\\\data\\\\stats.txt\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor to support Duke GUI."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskStorage \u003d new Storage(taskFilePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        statStorage \u003d new Storage(statFilePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        gui \u003d new GraphicalUi();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        cli \u003d new CommandLineUi();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Constructor to support Duke CLI."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param filePath absolute filepath of the where the text file is stored."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *                 Eg \"C:\\\\Users\\\\hatzi\\\\Documents\\\\Sourcetree\\\\duke\\\\data\\\\tasks.txt\"."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskStorage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        statStorage \u003d new Storage(this.statFilePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        gui \u003d new GraphicalUi();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        cli \u003d new CommandLineUi();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the response for the user input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Represents the GUI of Duke."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param input Command input string."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Duke\u0027s response."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            loadSavedDate();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String outputString \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Command command \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            command \u003d Parser.getCommand(input, getGui());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            outputString \u003d command.execute(input, getGui(), getTasks(), getTaskStorage(),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    getStats(), getStatStorage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            saveData();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            DukeErrorInterface dei \u003d (e1) -\u003e e1.getMessage();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            outputString \u003d dei.getLoadingError(e);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            outputString \u003d e.getMessage();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return outputString;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Executes the Duke Command Line Interface."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String welcomeString \u003d getCli().getWelcomeString();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        getCli().printToCommandLine(welcomeString);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            loadSavedDate();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            getCli().printToCommandLine(e.getMessage());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            getCli().printToCommandLine(e.getMessage());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            getCli().printToCommandLine(e.getMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String fullCommand \u003d \"\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Command command \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        while (command instanceof ByeCommandCli \u003d\u003d false) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            String outputString \u003d \"\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            fullCommand \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                command \u003d Parser.getCommand(fullCommand, getCli());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                outputString \u003d command.execute(fullCommand, getCli(), getTasks(), getTaskStorage(),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        getStats(), getStatStorage());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                outputString \u003d e.getMessage();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                outputString \u003d e.getMessage();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            getCli().printToCommandLine(outputString);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Main method to run Duke."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param args Main entry point."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\hatzi\\\\Documents\\\\Sourcetree\\\\duke\\\\data\\\\tasks.txt\").run();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Load saved data of tasks and stats."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws IOException Thrown due to error in reading/writing of txt file."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Custom error thrown."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void loadSavedDate() throws IOException, DukeException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        ArrayList\u003cTask\u003e retrievedTasksData \u003d getTaskStorage().loadTasks();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        setTasks(retrievedTasksData);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        TreeMap\u003cString, Integer\u003e retrievedStatsData \u003d getStatStorage().loadStats();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        setStats(retrievedStatsData);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Save the TaskList and Statistic objects to file."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws IOException Thrown due to error in reading/writing of txt file."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void saveData() throws IOException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        getTaskStorage().clearTaskFileBeforeSaving();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        for (int i \u003d 0; i \u003c getTasks().getSize(); i++) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            String saveString \u003d getTasks().getTask(i).toSaveString();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            getTaskStorage().writeToTaskFile(saveString);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        getStatStorage().saveStatFile(getStats());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Setter function for TaskList attribute."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskArrayList ArrayList of Tasks."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void setTasks(ArrayList\u003cTask\u003e taskArrayList) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.tasks \u003d new TaskList(taskArrayList);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Setter function for Statistic attribute."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param map Tree map mapping String to Integer."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void setStats(TreeMap\u003cString, Integer\u003e map) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.stats \u003d new Statistic(map);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for task storage object."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Task Storage object."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Storage getTaskStorage() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.taskStorage;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for stats storage object."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Stat storage object."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Storage getStatStorage() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.statStorage;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for Statistic object."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Statistic object."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Statistic getStats() {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return stats;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for TaskList object."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return TaskList object."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for Command Line UI object."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Command Line UI object."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public CommandLineUi getCli() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return cli;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for Graphical UI object."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Graphical UI object."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public GraphicalUi getGui() {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return gui;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 258,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/core/DukeErrorInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Functional interface to help implement lambdas."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public interface DukeErrorInterface {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Abstract method to get the loading error String."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param e DukeException object, which is a subclass of the Exception class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getLoadingError(DukeException e);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/core/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * DukeException class is a custom Exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Current implementation will only construct the String message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param message String that will be printed during exception handling."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/core/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Main entry point for Duke GUI."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param args Main entry point for Duke GUI."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/core/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.MainWindow;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Main entry point for GUI."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stage JavaFX stage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            stage.setTitle(\"Obot Wan Kenobi\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            duke \u003d new Duke(\"C:\\\\Users\\\\hatzi\\\\Documents\\\\Sourcetree\\\\duke\\\\data\\\\tasks.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.ByeCommandGui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.ByeCommandCli;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.StatsAllCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.StatsDeadlineCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.StatsEventCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.StatsResetCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.StatsTodoCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.TodoCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.core.DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Parser class helps to parse the user string."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the first word of the string fullCommand."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Input of the user, read from Scanner object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return First word of a string, delimited by whitespaces, \" \"."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static String parseCommand(String fullCommand) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (fullCommand.split(\" \")[0]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the 2nd word for a command starting with \"stats\"."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Input string from User."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Second word of user string."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static String parseStatCommand(String fullCommand) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (fullCommand.split(\" \")[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the todo task description of a Todo object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Input of the user, read from Scanner object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Substring from index 5 (whitespace after \"todo\") to end of string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static String getTodoDescription(String fullCommand) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (fullCommand.substring(5));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the deadline task description of a Deadline string."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Input of the user, read from Scanner object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Substring from index 9 (whitespace after \"deadline\") to the \u0027/\u0027 char inside \"/by\"."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static String getDeadlineDescription(String fullCommand) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (fullCommand.substring(9, fullCommand.indexOf(\u0027/\u0027)));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the unparsed DateTime string of a Deadline string."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Input of the user, read from Scanner object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Substring from 4 chars after \u0027/\u0027 in \"/by\"."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static String getDeadlineDateTime(String fullCommand) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (fullCommand.substring(4 + fullCommand.indexOf(\u0027/\u0027)));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the event task description of an Event string."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Input of the user, read from Scanner object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Substring from index 6 (whitespace after \"event\") to the \u0027/\u0027 char inside \"/at\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static String getEventDescription(String fullCommand) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (fullCommand.substring(6, fullCommand.lastIndexOf(\u0027/\u0027)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the event location of an Event string."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Input of the user, read from Scanner object."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Substring from 4 chars after \u0027/\u0027 in \"/at\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static String getEventLocation(String fullCommand) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (fullCommand.substring(4 + fullCommand.lastIndexOf(\u0027/\u0027)));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the specified task number for a \"done\" string command."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Input of the user, read from Scanner object."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Int of the substring from index 5 ( whitespace after \"done\" string)."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static int getFinishedTaskNum(String fullCommand) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (Integer.parseInt(fullCommand.substring(5)));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the specified task number for a \"delete\" string command."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Input of the user, read from Scanner object."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Int of the substring from index 7 ( whitespace after \"delete\" string)."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static int getDeletedTaskNum(String fullCommand) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (Integer.parseInt(fullCommand.substring(7)));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the task to find for \"find\" command."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Input of the user, read from Scanner object."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Task to find."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static String getFindTask(String fullCommand) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (fullCommand.substring(5));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Creates the command depending on the user string."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param fullCommand Input user String."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param ui User Interface object."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Command object."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static Command getCommand(String fullCommand, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String taskType \u003d parseCommand(fullCommand);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Initialize command with UnknownCommand"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Command command \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        case (\"list\"):"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        case (\"done\"):"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            command \u003d new DoneCommand();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        case(\"todo\"):"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            command \u003d new TodoCommand();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        case(\"deadline\"):"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            command \u003d new DeadlineCommand();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        case(\"event\"):"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            command \u003d new EventCommand();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        case(\"delete\"):"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            command \u003d new DeleteCommand();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        case(\"find\"):"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            command \u003d new FindCommand();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        case(\"bye\"):"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            if (ui.isCommandLineInterface()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                command \u003d new ByeCommandCli();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            } else if (ui.isGraphicalUserInterface()) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                command \u003d new ByeCommandGui();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                command \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        case(\"stats\"):"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            String statCommandType \u003d Parser.parseStatCommand(fullCommand);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            switch (statCommandType) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            case (\"all\"):"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                command \u003d new StatsAllCommand();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            case (\"reset\"):"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                command \u003d new StatsResetCommand();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            case(\"event\"):"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                command \u003d new StatsEventCommand();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            case(\"deadline\"):"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                command \u003d new StatsDeadlineCommand();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            case(\"todo\"):"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                command \u003d new StatsTodoCommand();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                command \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            command \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 233
    }
  },
  {
    "path": "src/main/java/seedu/duke/statistic/Statistic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.statistic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * This class serves to store statistics of the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Statistic {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected int totalCommandsExecuted;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected int totalTasksDeleted;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected int totalTodosCompleted;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected int totalDeadlinesCompleted;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected int totalEventsCompleted;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor. Reads a TreeMap, obtained from Storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param map Treemap mapping String to Integer."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Statistic(TreeMap\u003cString, Integer\u003e map) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalCommandsExecuted \u003d map.get(\"totalCommandsExecuted\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalTasksDeleted \u003d map.get(\"totalTasksDeleted\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalTodosCompleted \u003d map.get(\"totalTodosCompleted\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalDeadlinesCompleted \u003d map.get(\"totalDeadlinesCompleted\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalEventsCompleted \u003d map.get(\"totalEventsCompleted\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Resets all the attributes to 0."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void resetStats() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalCommandsExecuted \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalTasksDeleted \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalTodosCompleted \u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalDeadlinesCompleted \u003d 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalEventsCompleted \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the no. of events completed between now and one day ago."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Int no. of events completed between now and one day ago."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public int getCompletedEventsFromOneDayAgo(TaskList tasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return getSpecifiedCompletedTasksFromVariableDaysAgo(tasks, \u0027E\u0027, 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the no. of events completed between now and any number of days ago."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskType Character representing task type."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param daysAgo Int number of days ago."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Number of tasks completed within the specified time frame."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public int getSpecifiedCompletedTasksFromVariableDaysAgo(TaskList tasks, char taskType, int daysAgo) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        for (Task t : tasks.getArrayList()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            if ((t.getTaskType() \u003d\u003d taskType) \u0026\u0026 (t.isDone())) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                LocalDateTime taskModifiedDateTime \u003d t.getLastModifiedDateTime();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                LocalDateTime currentDateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                // If lastModifiedDate is greater than yesterday, increment count"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                if (taskModifiedDateTime.compareTo(currentDateTime.minusDays(daysAgo)) \u003e 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the no. of deaadlines completed between now and one day ago."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Int no. of deadlines completed between now and one day ago."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public int getCompletedDeadlinesFromOneDayAgo(TaskList tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return getSpecifiedCompletedTasksFromVariableDaysAgo(tasks, \u0027D\u0027, 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the no. of To dos completed between now and one day ago."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Int no. of to dos completed between now and one day ago."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public int getCompletedTodosFromOneDayAgo(TaskList tasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return getSpecifiedCompletedTasksFromVariableDaysAgo(tasks, \u0027T\u0027, 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Increments total Commands Executed."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void incrementTotalCommandsExecuted() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalCommandsExecuted +\u003d 1;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Increments Total Tasks Deleted."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void incrementTotalTasksDeleted() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalTasksDeleted +\u003d 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Increments Total todos Completed."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void incrementTotalTodosCompleted() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalTodosCompleted +\u003d 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Increments total Deadlines Completed."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void incrementTotalDeadlinesCompleted() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalDeadlinesCompleted +\u003d 1;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Increments Total Events Completed."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void incrementTotalEventsCompleted() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        totalEventsCompleted +\u003d 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for total commands executed."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Total commands executed."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public int getTotalCommandsExecuted() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return totalCommandsExecuted;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for total tasks deleted."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Total tasks deleted."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public int getTotalTasksDeleted() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return totalTasksDeleted;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for total todos completed."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Total todos completed."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public int getTotalTodosCompleted() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return totalTodosCompleted;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for total deadlines completed."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Total deadlines completed."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public int getTotalDeadlinesCompleted() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return totalDeadlinesCompleted;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for total events completed."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Total events completed."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public int getTotalEventsCompleted() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return totalEventsCompleted;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 180
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Storage class is used to read and write data from the text file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * filePath attribute stores the String of the absolute path of the text file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Constructor for the Storage class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param filepath Absolute filepath of the text file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *                 Eg. \"C:\\\\Users\\\\hatzi\\\\Documents\\\\Sourcetree\\\\duke\\\\data\\\\tasks.txt\"."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *  Creates a text file at that location, if the text file does not exist at the specified location."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param filepath Absolute filepath of the text file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws IOException An IOException may occur when trying to write the file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void createFile(String filepath) throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert filepath !\u003d null : \"Filepath should not be null\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // If the file does not exist, create sa new text file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                Files.write(Paths.get(filepath), data.getBytes());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Appends the String text to the text file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param text The text to be appended to the txt file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws IOException An IOException may occur when trying to write the file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void writeToTaskFile(String text) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert !text.isEmpty() : \"Text to be written should not be empty\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.getFilePath(), true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.write(text + System.lineSeparator());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Saves the Statistic object to the txt file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistics object."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws IOException Error thrown in writing the file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void saveStatFile(Statistic stat) throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        clearStatFileBeforeSaving();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.getFilePath(), true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.write(\"totalCommandsExecuted \" + \" : \" + stat.getTotalCommandsExecuted() + System.lineSeparator());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.write(\"totalTasksDeleted \" + \" : \" + stat.getTotalTasksDeleted() + System.lineSeparator());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.write(\"totalTodosCompleted \" + \" : \" + stat.getTotalTodosCompleted() + System.lineSeparator());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.write(\"totalDeadlinesCompleted \" + \" : \" + stat.getTotalDeadlinesCompleted() + System.lineSeparator());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.write(\"totalEventsCompleted \" + \" : \" + stat.getTotalEventsCompleted() + System.lineSeparator());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Clears and appends headers to the text file."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws IOException An IOException may occur when trying to write the file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void clearTaskFileBeforeSaving() throws IOException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Overwrites text file and adds headers before saving tasks"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.getFilePath(), false);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.write(\"event type | isDone | description | extra description | dateCreated | lastModified\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + System.lineSeparator());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Clears and appends headers to the Statistics file."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws IOException An IOException may occur when trying to write the file."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void clearStatFileBeforeSaving() throws IOException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.getFilePath(), false);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.write(\"statistic | integerValue\" + System.lineSeparator());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns an ArrayList(Task) from the data loaded from the filePath."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return ArrayList(Task) parsed from text file."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws FileNotFoundException An FilenotFoundException may occur when if filePath is invalid."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws DukeException Custom error."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Initialises variables to handle the txt input file."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        ArrayList\u003cString\u003e inputsFromFile \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String extraDescription \u003d \"\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String createDateTime \u003d \"\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String lastModifiedDateTime \u003d \"\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Creates a scanner object to read the txt file from filePath."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Scanner scanner \u003d new Scanner(new File(getFilePath()));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        scanner.nextLine(); // To avoid reading the first line of headers."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            inputsFromFile.add(scanner.nextLine());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        for (String input : inputsFromFile) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // A Possible input string is: \"D | 0 | CS2103 Ip  | Wed 2359\"."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            String[] words \u003d input.split(\"\\\\|\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            Boolean isDone \u003d false;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            String taskType \u003d words[0].trim();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                Todo newTodo \u003d newTodo(words);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                tasks.add(newTodo);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                Event newEvent \u003d newEvent(words);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                tasks.add(newEvent);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                Deadline newDeadline \u003d newDeadline(words);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                tasks.add(newDeadline);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                throw new DukeException(\"Unable to read from saved file\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Creates a tree map from the txt file."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Tree Mapping of String to Integer."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @throws FileNotFoundException Thrown when file not found."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public TreeMap\u003cString, Integer\u003e loadStats() throws FileNotFoundException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        ArrayList\u003cString\u003e inputsFromFile \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Scanner scanner \u003d new Scanner(new File(getFilePath()));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            inputsFromFile.add(scanner.nextLine());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        TreeMap\u003cString, Integer\u003e map \u003d new TreeMap\u003cString, Integer\u003e();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        for (String input : inputsFromFile) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            if (input.contains(\":\")) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                String[] words \u003d input.split(\":\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                map.put(words[0].trim(), Integer.parseInt(words[1].trim()));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return map;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the filePath attribute."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String filePath attribute."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.filepath;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a new To do object from the String array read from file."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param words String array."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return To do object."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Todo newTodo(String[] words) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Boolean isDone \u003d false;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (words[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else if (words[1].contains(\"0\")) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        description \u003d words[2].trim();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String createDateTime \u003d \"\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        createDateTime \u003d words[4].trim();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String lastModifiedDateTime \u003d \"\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        lastModifiedDateTime \u003d words[5].trim();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Todo newTodo \u003d new Todo(description, isDone, LocalDateTime.parse(createDateTime),"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                LocalDateTime.parse(lastModifiedDateTime));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return newTodo;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a new Event object from the String array read from file."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param words String array."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Event object."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Event newEvent(String[] words) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Boolean isDone \u003d false;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (words[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else if (words[1].contains(\"0\")) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        description \u003d words[2].trim();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String extraDescription \u003d \"\";"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        extraDescription \u003d words[3].trim();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String createDateTime \u003d \"\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        createDateTime \u003d words[4].trim();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String lastModifiedDateTime \u003d \"\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        lastModifiedDateTime \u003d words[5].trim();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Event newEvent \u003d new Event(description, extraDescription, isDone,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                LocalDateTime.parse(createDateTime), LocalDateTime.parse(lastModifiedDateTime));"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return newEvent;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a new Deadline object from the String array read from file."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param words String array."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Event object."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Deadline newDeadline(String[] words) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Boolean isDone \u003d false;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (words[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else if (words[1].contains(\"0\")) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        description \u003d words[2].trim();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String extraDescription \u003d \"\";"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        extraDescription \u003d words[3].trim();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String createDateTime \u003d \"\";"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        createDateTime \u003d words[4].trim();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String lastModifiedDateTime \u003d \"\";"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        lastModifiedDateTime \u003d words[5].trim();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description, extraDescription, isDone,"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                LocalDateTime.parse(createDateTime), LocalDateTime.parse(lastModifiedDateTime));"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return newDeadline;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 299
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Deadline class is a subclass of Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Additional attribute is the String dateTime, which holds the dateTime of the Deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected String dueDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a Deadline object after initializing with 2 Strings, description and dateTime."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param description Description String of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param dueDateTime dateTime String of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Deadline(String description, String dueDateTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Sets isDone to the default value, false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Possible String for dateTime \u003d 2/12/2019 1800."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Sample fullCommand \u003d \"deadline cs /by 21/12/2019 0800\"."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.dueDateTime \u003d dueDateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (!dueDateTime.contains(\"of\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // Checks if the String has already been formatted."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // If \"of\" is present, this indicated that dateTime has already been formatted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // Main purpose is for creating Deadline objects when reading from saved data."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            this.dueDateTime \u003d parseBy(dueDateTime);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a Deadline object after initializing with description, dateTime, isDone,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * createdDate and lastModified date of the task. Meant to be used when constructing object from saved data."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param description Description String of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param dueDateTime dateTime String of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param isDone isDone Boolean status of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param createDateTime LocalDateTime object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param lastModifiedDateTime LocalDateTime object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Deadline(String description, String dueDateTime, Boolean isDone, LocalDateTime createDateTime,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    LocalDateTime lastModifiedDateTime) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description, isDone, createDateTime, lastModifiedDateTime);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.dueDateTime \u003d dueDateTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (!dueDateTime.contains(\"of\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // Checks if the String has already been formatted."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // If \"of\" is present, this indicated that dateTime has already been formatted."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // Main purpose is for creating Deadline objects when reading from saved data."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            this.dueDateTime \u003d parseBy(dueDateTime);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a parsed String of the Deadline object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Eg. description \u003d \"Assignment\", dateTime \u003d \"0th of December 2012, 6.42pm\", isDone \u003d false."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Parsed String \u003d \"[D][✘] Assignment  (by: 20th of December 2012, 6.42pm)\"."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Parsed String of the Deadline object."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDateTime + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for dueDateTime String."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return dueDateTime String."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getDueDateTime() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.dueDateTime;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a parsed String, meant for saving, of the Task object."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *Eg. description \u003d \"Assignment\", dateTime \u003d \"0th of December 2012, 6.42pm\", isDone \u003d true."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Parsed saved String \u003d \"D | 1 | Assignment  | 20th of December 2012, 6.42pm\"."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Parsed string for saving."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (\"D\" + super.toSaveString() + \" | \" + this.getDueDateTime() + \" | \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + this.getCreateDateTime().toString() + \" | \" + this.getLastModifiedDateTime().toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a parsed dateTime String."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * String \"by\" must be of the format DD/MM/YYYY HHHH Eg. \"31/08/2019 1215\"."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Will be converted to \"31st of August 2019, 12.15pm\"."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param by Unparsed dateTime String."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Parsed dateTime String."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String parseBy(String by) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskType \u003d PossibleTaskTypes.DEADLINE;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String[] words \u003d dueDateTime.split(\"/\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String[] years \u003d dueDateTime.split(\" \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int day \u003d Integer.parseInt(words[0]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert day \u003e 0 : \"Day should be strictly positive\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert day \u003c 32 : \"Day should be less than 32\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String hour \u003d years[1];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String dayString;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if ((day \u003d\u003d 1) || (day \u003d\u003d 21) || (day \u003d\u003d 31)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            dayString \u003d \"st\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else if ((day \u003d\u003d 2) || (day \u003d\u003d 22)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            dayString \u003d \"nd\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else if ((day \u003d\u003d 3) || (day \u003d\u003d 23)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            dayString \u003d \"rd\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            dayString \u003d \"th\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String hoursString \u003d hour;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String amOrpm \u003d \"\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (Integer.parseInt(hoursString.substring(0, 2)) \u003c 12) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            amOrpm \u003d \"am\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else if (Integer.parseInt(hoursString.substring(0, 2)) \u003c 24) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            amOrpm \u003d \"pm\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String minuteString \u003d \"\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (Integer.parseInt(hoursString.substring(2)) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            minuteString \u003d \"\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            minuteString \u003d \".\" + hoursString.substring(2);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int hourString \u003d -1;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (Integer.parseInt(hoursString.substring(0, 2)) \u003e 12) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            hourString \u003d (Integer.parseInt(hoursString.substring(0, 2)) - 12);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            hourString \u003d Integer.parseInt(hoursString.substring(0, 2));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int year \u003d Integer.parseInt(words[2].split(\" \")[0]);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int month \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String[] possibleMonths \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\","
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                                   \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String monthString \u003d possibleMonths[month - 1];"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (day + dayString + \" of \" + monthString + \" \" + year + \", \" + hourString + minuteString + amOrpm);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Set the task done."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void setDone(Statistic stats) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super.setDone(stats);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalEventsCompleted();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for the taskType, \"E\"."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Char taskType."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return \u0027D\u0027;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 187
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Event class is a subclass of Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Additional attribute is the String location, which holds the venue of the Event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private String location;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns an Event object after initializing with 2 Strings; description and location."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param description Description String of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param location Location String of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Event(String description, String location) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskType \u003d PossibleTaskTypes.EVENT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns an Event object after initializing with 2 Strings; description and location;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * and Boolean status of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param description Description String of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param location Location String of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param isDone isDone Boolean status of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param createDateTime LocalDateTime object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param lastModifiedDateTime LocalDateTime object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Event(String description, String location, Boolean isDone, LocalDateTime createDateTime,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                 LocalDateTime lastModifiedDateTime) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description, isDone, createDateTime, lastModifiedDateTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskType \u003d PossibleTaskTypes.EVENT;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *  Returns a parsed String of the Event object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *  Eg. description \u003d \"meeting\", location \u003d \"LT19\", isDone \u003d false."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *  Parsed string \u003d \"[E][✘] meeting  (at: LT19)\"."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Parsed String of the Event object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert !this.location.isEmpty() : \"Empty location should be handled by Duke Exception during input\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + location + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a parsed String, meant for saving, of the Event object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Eg. description \u003d \"meeting\", location \u003d \"LT19\", isDone \u003d false."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Parsed saved string \u003d \"E | 0 | meeting  | LT19\"."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Parsed saved String of the Event object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert !this.location.isEmpty() : \"Empty location should be handled by Duke Exception during input\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (\"E\" + super.toSaveString() + \" | \" + this.getLocation() + \" | \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + this.getCreateDateTime().toString() + \" | \" + this.getLastModifiedDateTime().toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for the string Location."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String location."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.location;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Setter function for Boolean isDone."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void setDone(Statistic stats) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super.setDone(stats);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalEventsCompleted();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for taskType."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Character taskType."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return \u0027E\u0027;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 99
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Task class represents a Task created by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Attribute description holds the Task description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Attribute isDone holds the status of completion of a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Attribute possibleTaskTypes is an enumerated list of the possible task types ie DEFAULT, DEADLINE, EVENT, TODO."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected PossibleTaskTypes taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected LocalDateTime createDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected LocalDateTime lastModifiedDateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a Task object after initializing with the String description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * By default, isDone is set to false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor when creating from scratch."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param description Description String of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.taskType \u003d PossibleTaskTypes.DEFAULT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.createDateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.lastModifiedDateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a Task object from user input after initializing with the String description and isDone status."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param description Description String of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param isDone Boolean status of the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param createDateTime LocalDateTime object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param lastModified LocalDateTime object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Task(String description, Boolean isDone, LocalDateTime createDateTime, LocalDateTime lastModified) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.taskType \u003d PossibleTaskTypes.DEFAULT;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.createDateTime \u003d createDateTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.lastModifiedDateTime \u003d lastModified;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the Task description String."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String containing the task description."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert !this.description.isEmpty() : \"Empty description should be handled by Duke Exception during input\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a String, which is a tick if isDone is true, or a cross, if isDone is false."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String representation of isDone."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            return (\"✓\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            return (\"✘\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Setter function for setting a Task isDone from false to true."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void setDone(Statistic stats) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (!this.isDone) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            updateLastModified();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a parsed String of the Task object, depending on the subclass implementation."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Eg. [T][✘] (Task Description)."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Parsed string."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a parsed String, meant for saving, of the Task object."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Parsed string for saving."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int booleanNum \u003d (this.isDone ? 1 : 0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (\" | \" + booleanNum + \" | \" + this.description);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the state of a Task, if it is a Default type or not."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Boolean status if TaskType is default."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isDefault() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.taskType.equals(PossibleTaskTypes.DEFAULT);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the state of a Task, if it is a Default type or not."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Boolean status if TaskType is default."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isTodo() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.taskType.equals(PossibleTaskTypes.TODO);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the state of a Task, if it is a Event type or not."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Boolean status if TaskType is Event."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isEvent() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.taskType.equals(PossibleTaskTypes.EVENT);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the state of a Task, if it is a Deadline type or not."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Boolean status if TaskType is deadline."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isDeadline() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.taskType.equals(PossibleTaskTypes.DEADLINE);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * An enumeration of the possible task types."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    enum PossibleTaskTypes {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        DEFAULT, DEADLINE, EVENT, TODO"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function to obtain Boolean status of task."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return isDone attribute."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isDone() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for createDateTime."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Returns createDAteTime."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public LocalDateTime getCreateDateTime() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.createDateTime;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Getter function for lastModifiedDateTime."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return lastModifiedDateTime."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public LocalDateTime getLastModifiedDateTime() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.lastModifiedDateTime;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Updates lastModifiedDateTime."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void updateLastModified() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.lastModifiedDateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the char type."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Char representing the taskType."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract char getTaskType();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 200
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Todo class is a subclass of Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Has no additional attributes."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a Todo object after initializing with the String description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param description Description String ot the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskType \u003d PossibleTaskTypes.TODO;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a Todo object after initializing with the String description and Boolean status of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param description Description String ot the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param isDone isDone status of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param dateCreateDateTime LocalDateTime object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param lastModifiedDateTime LocalDateTime object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Todo(String description, Boolean isDone, LocalDateTime dateCreateDateTime,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                LocalDateTime lastModifiedDateTime) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description, isDone, dateCreateDateTime, lastModifiedDateTime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a parsed String of the Todo object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Eg. description \u003d \"(Task Description)\", isDone \u003d false."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Parsed string \u003d \"[T][✘] (Task Description)\"."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Parsed String of the Todo object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert !this.description.isEmpty() : \"Empty description should be handled by Duke Exception during input\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns a parsed String, meant for saving, of the Todo object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Eg. description \u003d \"(Task Description)\", isDone \u003d true."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Parsed saved string \u003d \"T | 1 | (Task Description)\"."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Parsed saved string of the Todo object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (\"T\" + super.toSaveString() + \" | \" + \" dummyExtraDescriptionForTodo\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \" | \" + this.getCreateDateTime().toString() + \" | \" + this.getLastModifiedDateTime().toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Setter function for isDone Boolean var."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void setDone(Statistic stats) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super.setDone(stats);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        stats.incrementTotalTodosCompleted();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the char type."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Char representing the taskType."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return \u0027T\u0027;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 81
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * TaskList class contains the list of Tasks (stored as an ArrayList) and methods to add, delete Tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Constructor for TaskList class. Returns a TaskList object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskList An ArrayList of Task objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.listOfTasks \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the number of Task objects currently stored in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Number of Task objects."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return getArrayList().size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the object Task at the specified int index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param i Integer index."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Task object which is located at index i."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert i \u003e\u003d 0 : \"Task index should be \u003e\u003d 0\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return getArrayList().get(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Adds a new Task object into the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param newTask Task object that needs to be added into the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        getArrayList().add(newTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Deletes a Task object from a specified index."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param i Integer index of where the Task object (to be deleted) is in."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void deleteTask(int i) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assert i \u003e\u003d 0 : \"Task index should be \u003e\u003d 0\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        getArrayList().remove(i);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the ArrayList(Task) inside the TaskList object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Is a getter function to get the private attribute, listOfTasks."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return ArrayList(Task) object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public ArrayList\u003cTask\u003e getArrayList() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.listOfTasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns another TaskLIst object which contains Task objects that is similar to the search string."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param searchTerm String that needs to be inside the Task description of similar Tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Tasklist object, which has an ArrayList (Task) that only contains matching Task objects."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public TaskList findSimilarTasks(String searchTerm) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d this.getArrayList();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        List\u003cTask\u003e t \u003d listOfTasks.stream()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                .filter(o -\u003e o.getTaskName().contains(searchTerm))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Iterator iter \u003d t.iterator();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            matchingTasks.add((Task) iter.next());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return new TaskList(matchingTasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 95
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/CommandLineUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * CommandLine Ui class, that handles returning formatted and parsed strings for DUKE CLI\u0027s implementation."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class CommandLineUi extends Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private static final String underscore \u003d \"    ____________________________________________________________\" + \"\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Boolean isCommandLineInterface;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Boolean isGraphicalUserInterface;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public CommandLineUi() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        isCommandLineInterface \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        isGraphicalUserInterface \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns welcome string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static String getWelcomeString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String intro \u003d underscore"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"      Hello! I\u0027m Duke \" + \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"      What can I do for you?\" + \"\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + underscore;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (logo + intro);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Prints the Done Sequence, when the user command \"done\" is entered."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList class, which contains a list of Task objects."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskNum Integer index of the task which has been selected as \"done\"."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getDoneSequence(TaskList tasks, int taskNum) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d underscore + \"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"       [\" + tasks.getTask(taskNum).getStatusIcon() + \"] \" + tasks.getTask(taskNum).getTaskName()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\" + underscore;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the Todo Sequence, when the user command \"Todo\" is entered."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList class, which contains a list of Task objects."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param newTodo Todo class, which has been newly created."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getTodoSequence(TaskList tasks, Todo newTodo) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d underscore + \"     Got it. I\u0027ve added this task:\\n       \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + newTodo.toString() + getTasksRemainingSequence(tasks.getSize());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the Deadline sequence, when the user command \"deadline\" is entered."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList class, which contains a list of Task objects."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param newDeadline Deadline class, which has been newly created."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getDeadlineSequence(TaskList tasks, Deadline newDeadline) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d underscore + \"     Got it. I\u0027ve added this task:\\n       \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + newDeadline.toString() + getTasksRemainingSequence(tasks.getSize());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the Event sequence, when the user command \"event\" is entered."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList class, which contains a list of Task objects."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param newEvent Event class, which has been newly created."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getEventSequence(TaskList tasks, Event newEvent) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d underscore + \"     Got it. I\u0027ve added this task:\\n       \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + newEvent.toString() + getTasksRemainingSequence(tasks.getSize());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the Delete sequence, when \"delete\" command is entered."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList class, which contains a list of Task objects."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskToDelete Task class, which will be deleted from the list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getDeleteSequence(TaskList tasks, Task taskToDelete) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d underscore + \"     Noted. I\u0027ve removed this task.\\n       \""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + taskToDelete.toString() + getTasksRemainingSequence(tasks.getSize());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the Bye sequence, when the user command \"bye\" is entered."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getByeSequence() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d underscore + \"\\n\" + \"     \" + \"Bye. Hope to see you again soon!\" + \"\\n\" + underscore + \"\\n\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the string containing tasks in a pre-formatted form."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Eg. \"1.[E][✘] Run (at: ERC)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *      2.[D][✓] IPPT (by: 21st of December 2004, 8.15am)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *      3.[E][✓] Lecture (at: LT7A)\"."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String of tasks"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getListSequence(TaskList tasks) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            output +\u003d \"     \" + (i + 1) + \".\" + tasks.getTask(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output +\u003d underscore;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the tasks which are similar for the \"find\" command."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getFoundTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d underscore + \"     Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output +\u003d getListSequence(tasks);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the tasks remaining in the list."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param numOfTaskRemaining TaskList object."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getTasksRemainingSequence(int numOfTaskRemaining) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\\n     Now you have \""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + numOfTaskRemaining + \" tasks in the list.\\n\" + underscore;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns all statistics."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getAllStatSequence(Statistic stat, TaskList tasks) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\\n     Listing all statistics:\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n     Total Commands Executed:         \" + stat.getTotalCommandsExecuted()"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n     Total Tasks Deleted:             \" + stat.getTotalTasksDeleted()"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\\n     Total To-Dos Completed:          \" + stat.getTotalTodosCompleted()"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n     Total Todos Completed TODAY:     \" + stat.getCompletedTodosFromOneDayAgo(tasks)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\\n     Total Deadlines Completed:       \" + stat.getTotalDeadlinesCompleted()"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n     Total Deadlines Completed TODAY: \" + stat.getCompletedDeadlinesFromOneDayAgo(tasks)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\\n     Total Events Completed:          \" + stat.getTotalEventsCompleted()"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n     Total Events Completed TODAY:    \" + stat.getCompletedEventsFromOneDayAgo(tasks)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\" + underscore;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns reset stat sequence."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getResetStatSequence(Statistic stat, TaskList tasks) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\\n     All GLOBAL statistics have been reset\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output +\u003d getAllStatSequence(stat, tasks);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns completed events sequence."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getCompletedEventStatSequence(Statistic stat, TaskList tasks) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String encouragement \u003d \"\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int eventsCompleted \u003d stat.getCompletedEventsFromOneDayAgo(tasks);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (eventsCompleted \u003d\u003d 0) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"You can do better! :)\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"Well Done!\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\\n     Events completed today: \""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + stat.getCompletedEventsFromOneDayAgo(tasks)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n     \" + encouragement + \"\\n\" + underscore;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns IsCommandLineInterface."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Boolean."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isCommandLineInterface() {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.isCommandLineInterface;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns isGUI."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Boolean."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isGraphicalUserInterface() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.isGraphicalUserInterface;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Prints the String to the Command Line."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param output String to be printed."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void printToCommandLine(String output) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns completed deadline sequence."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getCompletedDeadlineStatSequence(Statistic stat, TaskList tasks) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String encouragement \u003d \"\";"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int eventsCompleted \u003d stat.getCompletedDeadlinesFromOneDayAgo(tasks);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (eventsCompleted \u003d\u003d 0) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"You can do better! :)\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"Well Done!\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\\n     Events completed today: \""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + stat.getCompletedDeadlinesFromOneDayAgo(tasks)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n     \" + encouragement + \"\\n\" + underscore;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns completed todo sequence."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getCompletedTodoStatSequence(Statistic stat, TaskList tasks) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String encouragement \u003d \"\";"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int todosCompleted \u003d stat.getCompletedTodosFromOneDayAgo(tasks);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (todosCompleted \u003d\u003d 0) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"You can do better! :)\";"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"Well Done!\";"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\\n     To-dos completed today: \""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + stat.getCompletedTodosFromOneDayAgo(tasks)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n     \" + encouragement + \"\\n\" + underscore;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 291
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Creates a dialogbox with the specified arguments."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param text String text which will be the label."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param img Image that will be beside the label."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Creates the User Dialog box."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param text String."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param img Image."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return DialogBox of the user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Sets a padding of 25 above and below the User DialogBox"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        db.setPadding(new Insets(25,0,25,0));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Adds background colour to DialogBox."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String styleBackground \u003d \"-fx-background-color: #f7fac5;\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"-fx-padding: 15;\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"fx-spacing: 10;\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        db.setStyle(styleBackground);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Creates the Duke Dialog box."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param text String."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param img Image."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Duke dialog box."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Adds background colour to DialogBox."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String styleBackground \u003d \"-fx-background-color: #abffcd;\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"-fx-padding: 15;\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"fx-spacing: 10;\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        db.setStyle(styleBackground);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Sets a padding of 25 above and below the Duke DialogBox"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        db.setPadding(new Insets(25,0,25,0));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 106
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/GraphicalUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Graphical Ui class, that handles returning formatted and parsed strings for DUKE GUI\u0027s implementation"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Main difference is that ticks and crosses are swapped with V and X."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Unnecessary underscores and spaces have been removed from the CLI\u0027s implementation."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class GraphicalUi extends Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Boolean isCommandLineInterface;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Boolean isGraphicalUserInterface;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public GraphicalUi() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        isCommandLineInterface \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        isGraphicalUserInterface \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns welcome string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static String getWelcomeString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String intro \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                \"Hello! I\u0027m Duke \" + \"\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"What can I do for you?\" + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (logo + intro);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Prints the Done Sequence, when the user command \"done\" is entered."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList class, which contains a list of Task objects."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskNum Integer index of the task which has been selected as \"done\"."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getDoneSequence(TaskList tasks, int taskNum) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"[\" + tasks.getTask(taskNum).getStatusIcon() + \"] \" + tasks.getTask(taskNum).getTaskName()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✓\", \"V\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✘\", \"X\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the Todo Sequence, when the user command \"Todo\" is entered."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList class, which contains a list of Task objects."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param newTodo Todo class, which has been newly created."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getTodoSequence(TaskList tasks, Todo newTodo) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + newTodo.toString() + getTasksRemainingSequence(tasks.getSize());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✓\", \"V\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✘\", \"X\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the Deadline sequence, when the user command \"deadline\" is entered."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList class, which contains a list of Task objects."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param newDeadline Deadline class, which has been newly created."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getDeadlineSequence(TaskList tasks, Deadline newDeadline) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + newDeadline.toString() + getTasksRemainingSequence(tasks.getSize());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✓\", \"V\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✘\", \"X\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the Event sequence, when the user command \"event\" is entered."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList class, which contains a list of Task objects."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param newEvent Event class, which has been newly created."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getEventSequence(TaskList tasks, Event newEvent) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + newEvent.toString() + getTasksRemainingSequence(tasks.getSize());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✓\", \"V\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✘\", \"X\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the Delete sequence, when the user command \"delete\" is entered."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList class, which contains a list of Task objects."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskToDelete Task class, which will be deleted from the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getDeleteSequence(TaskList tasks, Task taskToDelete) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task.\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + taskToDelete.toString() + getTasksRemainingSequence(tasks.getSize());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✓\", \"V\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✘\", \"X\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the Bye sequence, when the user command \"bye\" is entered."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getByeSequence() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\\n\" + \"The Force will be with you, always\" + \"\\n\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (output);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the string containing tasks in a pre-formatted form."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Eg. \"1.[E][X] Run (at: ERC)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *      2.[D][V] IPPT (by: 21st of December 2004, 8.15am)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *      3.[E][V] Lecture (at: LT7A)\"."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String of tasks"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getListSequence(TaskList tasks) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            output +\u003d (i + 1) + \".\" + tasks.getTask(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✓\", \"V\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output \u003d output.replace(\"✘\", \"X\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the tasks which are similar for the \"find\" command."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getFoundTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output +\u003d getListSequence(tasks);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (output);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns the tasks remaining in the list."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param numOfTaskRemaining TaskList object."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getTasksRemainingSequence(int numOfTaskRemaining) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\\nNow you have \""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + numOfTaskRemaining + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns all statistics."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getAllStatSequence(Statistic stat, TaskList tasks) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"Listing all statistics:\""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\nTotal Commands Executed:    \" + stat.getTotalCommandsExecuted()"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\nTotal Tasks Deleted:                \" + stat.getTotalTasksDeleted()"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\\nTotal To-Dos Completed:              \" + stat.getTotalTodosCompleted()"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\nTotal Todos Completed TODAY:   \" + stat.getCompletedTodosFromOneDayAgo(tasks)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\\nTotal Deadlines Completed:              \" + stat.getTotalDeadlinesCompleted()"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\nTotal Deadlines Completed TODAY:   \" + stat.getCompletedDeadlinesFromOneDayAgo(tasks)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\\nTotal Events Completed:                  \" + stat.getTotalEventsCompleted()"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\nTotal Events Completed TODAY:    \" + stat.getCompletedEventsFromOneDayAgo(tasks)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns reset stat sequence."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getResetStatSequence(Statistic stat, TaskList tasks) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"All statistics have been reset\\n\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        output +\u003d getAllStatSequence(stat, tasks);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns completed events sequence."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getCompletedEventStatSequence(Statistic stat, TaskList tasks) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String encouragement \u003d \"\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int eventsCompleted \u003d stat.getCompletedEventsFromOneDayAgo(tasks);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (eventsCompleted \u003d\u003d 0) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"You can do better! :)\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"Well Done!\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\\nEvents completed today: \""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + eventsCompleted"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\" + encouragement + \"\\n\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns IsCommandLineInterface."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Boolean."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isCommandLineInterface() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.isCommandLineInterface;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns isGUI."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Boolean."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isGraphicalUserInterface() {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.isGraphicalUserInterface;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns completed deadline sequence."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getCompletedDeadlineStatSequence(Statistic stat, TaskList tasks) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String encouragement \u003d \"\";"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int deadlinessCompleted \u003d stat.getCompletedEventsFromOneDayAgo(tasks);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (deadlinessCompleted \u003d\u003d 0) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"You can do better! :)\";"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"Well Done!\";"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\\nDeadlines completed today: \""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + deadlinessCompleted"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\" + encouragement + \"\\n\";"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns completed todo sequence."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getCompletedTodoStatSequence(Statistic stat, TaskList tasks) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String encouragement \u003d \"\";"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int todosCompleted \u003d stat.getCompletedTodosFromOneDayAgo(tasks);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (todosCompleted \u003d\u003d 0) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"You can do better! :)\";"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            encouragement \u003d \"Well Done!\";"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\\nTo-dos completed today: \""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + todosCompleted"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\\n\" + encouragement + \"\\n\";"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 290
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.core.Duke;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Controller for seedu.duke.ui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userPic.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dukePic.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Initialize."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String introduction \u003d \"__________________________________________________\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"Sample Commands: \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\u0027todo Laundry\u0027 - Adds a To-do called Laundry\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\u0027deadline CS2105 Assignment /by 27/12/2019 2345\u0027 - Adds a deadline task\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\u0027event Dad\u0027s birthday /at Yishun\u0027 - Adds an event task\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"\u0027stats all\u0027 - Views all stats\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"__________________________________________________\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String welcomeString \u003d \"Hello there!\\n\" + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeString + introduction,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                dukeImage));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Initialize duke."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param d Duke object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Label inputText \u003d new Label(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        inputText.setWrapText(true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Label responseText \u003d new Label(response);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        responseText.setWrapText(true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            new Thread(() -\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    Thread.sleep(2000);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                            DialogBox.getDukeDialog(\"Obi exiting!\", dukeImage)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }).start();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 93
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.statistic.Statistic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Ui class is responsible of printing UI related Strings, such as the Welcome String."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public abstract class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Default constructor but the abstract class will never be instantiated."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns list sequence for LIST command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getListSequence(TaskList tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns bye sequence for BYE command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getByeSequence();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns find sequence for FIND command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getFoundTasks(TaskList tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns delete sequence for DELETE command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskToDelete Task object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getDeleteSequence(TaskList tasks, Task taskToDelete);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns event sequence for EVENT command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param newEvent Event object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getEventSequence(TaskList tasks, Event newEvent);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns todo sequence for TODO command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param newTodo Todo object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getTodoSequence(TaskList tasks, Todo newTodo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns deadline sequence for DEADLINE command."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param newDeadline deadline object."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getDeadlineSequence(TaskList tasks, Deadline newDeadline);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns done sequence for DONE command."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param taskNum int Index of the specified task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getDoneSequence(TaskList tasks, int taskNum);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns reset stats sequence for reset stats command."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getResetStatSequence(Statistic stats, TaskList tasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns string sequence for \"all stats\" command."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stats Statistic object."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskLIst object."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getAllStatSequence(Statistic stats, TaskList tasks);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns string sequence for \"stats event\" command."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getCompletedEventStatSequence(Statistic stat, TaskList tasks);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns true for Command Line Interface."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Boolean."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract Boolean isCommandLineInterface();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns true for Graphical User Interface."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return Boolean."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract Boolean isGraphicalUserInterface();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns string sequence for \"stats deadline\" command."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getCompletedDeadlineStatSequence(Statistic stat, TaskList tasks);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Returns string sequence for \"stats todo\" command."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param stat Statistic object."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public abstract String getCompletedTodoStatSequence(Statistic stat, TaskList tasks);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 149
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"450.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"375.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"75.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"374.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"559.0\" prefWidth\u003d\"450.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"41.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"CENTER\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * EventTest is used to test the methods in Event Class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Test how the attributes are initialized when a String description is supplied."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    void initializeAttributes_stringDescription_correctAttributes() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assertEquals(\"[E][✘] description (at: location)\", new Event(\"description\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                \"location\").toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Tests if the parsed saved String matches the method output."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    void saveStringOutput_stringDescription_correctSavedString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String expected \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        expected \u003d \"E | 1 | description | location | 2019-09-14T23:30:31.894880900 | 2019-09-14T23:30:31.894880900\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assertEquals(expected, new Event(\"description\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                \"location\", true, LocalDateTime.parse(\"2019-09-14T23:30:31.894880900\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                LocalDateTime.parse(\"2019-09-14T23:30:31.894880900\")).toSaveString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 35
    }
  },
  {
    "path": "src/test/java/seedu/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * TodoTest is used to test the methods in Todo Class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Test how the attributes are initialized when a String description is supplied."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    void initializeAttributes_stringDescription_correctAttributes() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assertEquals(\"[T][✘] description\", new Todo(\"description\").toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     * Tests if the parsed saved String matches the method output."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    void saveStringOutput_stringDescription_correctSavedString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String expected \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        expected \u003d \"T | 0 | desc |  dummyExtraDescriptionForTodo | 2019-09-14T23:30:31.894880900 \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"| 2019-09-14T23:30:31.894880900\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        LocalDateTime fakeTime \u003d LocalDateTime.parse(\"2019-09-14T23:30:31.894880900\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Todo newTodo \u003d new Todo(\"desc\", false, fakeTime, fakeTime);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assertEquals(expected, newTodo.toSaveString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 36
    }
  },
  {
    "path": "tutorials/gradleTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle is a _build automation tool_ used to automate build processes. There are many ways of integrating Gradle into a project. In this guide, we will be using the _Gradle wrapper_."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* [Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Gradle Support to Your Project](#adding-gradle-support-to-your-project)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Plugins](#adding-plugins)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [CheckStyle](#checkstyle)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Shadow](#shadow)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Dependencies](#adding-dependencies)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [JUnit](#junit)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Further Reading](#further-reading)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "As a developer, you write a _build file_ that describes the project. A build file mainly consists of _plugins_, _tasks_ and _properties_. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* **Plugins** extend the functionality of Gradle. For example, the `java` plugin adds support for `Java` projects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* **Tasks** are reusable blocks of logic.  For example, the task `clean` simply deletes the project build directory. Tasks can be composed of other tasks or be dependent on another task. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* **Properties** change the behavior of tasks. For instance, `mainClassName` of the `application` plugin is a compulsory property which tells Gradle which class is the entrypoint to your application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  As Gradle favors [_convention over configuration_](https://en.wikipedia.org/wiki/Convention_over_configuration), there is not much to you need to configure if you follow the recommended directory structure."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Gradle Support to Your Project "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Pull the branch named `gradle`. Merge it to the `master` branch. This will add the Gradle wrapper to your project."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout --track origin/gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout master"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   git merge gradle"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "1. Open the `build.gradle` file in an editor. Update the following code block to point to the main class (i.e., the one containing the `main` method) of your application. The code below assumes your main class is `seedu.duke.core.Duke`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   ```groovy"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "       mainClassName \u003d \"seedu.duke.core.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "1. To check if Gradle has been added to the project correctly, open a terminal window, navigate to the root directory of your project and run the command `gradlew run`. This should result in Gradle running the main method of your project."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Simply run the command `gradlew {taskName}` in the terminal and Gradle will run the task! Here are some example commands:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew tasks` (or `gradlew tasks --all`): shows a list of tasks available"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew run`: runs the main class of your project"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Some plugins may add more helpful tasks so be sure to check their documentation!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "#### Using Gradle from within Intellij"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. After adding support for Gradle, Intellij might automatically ask you (via a pop-up at the bottom right corner of the Window) whether to import the project as a Gradle project. In that case, go ahead and say yes."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t happen, import the Gradle project by `Help \u003e Find Action \u003e Import Gradle Project`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Import Gradle](assets/ImportGradle.png)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t work either, close Intellij, delete the Intellij project files (i.e., `.idea` folder and `*.iml` files), and set up the project again, but instead of choosing `Create project from existing sources`, choose `Import project from external model` -\u003e `Gradle`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "After this, IntelliJ IDEA will identify your project as a Gradle project and you will gain access to the `Gradle Toolbar`. Through the toolbar, you run Gradle tasks and view your project\u0027s dependencies."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "You can click on the Gradle icon in the Gradle toolbar and create a new run configuration for running Gradle tasks without needing to type a `gradlew` command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "![Gradle icon](assets/GradleIcon.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Plugins"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle plugins are reusable units of build logic. Most common build tasks are provided as core plugins by Gradle. Given below are instructions on how to use some useful plugins:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "### CheckStyle"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "To add support for _Checkstyle_ (a tool to check if your code complies with a set of style rules), which comes as a core plugin, simply add the line `id \u0027checkstyle\u0027` into the `plugins` block."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Your build file should look something like this now:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "// ..."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Checkstyle expects configuration files for checkstyle to be in `./config/checkstyle/` by convention."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "A sample checkstyle rule configuration is provided in the branch."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin adds a few _tasks_ to your project. Run `gradlew checkstyleMain checkstyleTest` to verify that you have set up Checkstyle properly (the command will check your main code and test code against the style rules)."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for CheckStyle plugin](https://docs.gradle.org/current/userguide/checkstyle_plugin.html)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "### Shadow"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Shadow is a plugin that packages an application into an executable jar file. To use it, first add the following line to your Gradle build file:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin can be configured by setting some properties. Let\u0027s try to produce a jar file with the name in format of `{baseName}-{version}.jar`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following block to your build file:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Now you can run the command `gradlew shadowJar`.It publishes an executable jar to `./build/libs/`. You should be able to able to execute the created jar file by double-clicking it or using the command `java -jar {jarName}`?"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for Shadow plugin](https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* [More about the Shadow plugin](https://imperceptiblethoughts.com/shadow/introduction/)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Dependencies"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle can automate the management of dependencies to third-party libraries. Given below are some examples."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "JUnit is a testing framework for Java. It allows developers to write tests and run them. To manage JUnit dependency via Gradle, add the following to your build file:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Then, configure Gradle to use JUnit by adding the following block to your build file:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "By convention, java tests belong in `src/test/java` folder. Create a new `test/java` folder in under `src`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "src"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "├─main"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "│  └─java"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "│     └─seedu/duke/Duke.java"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "└─test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    └─java"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        └─seedu/duke/DukeTest.java"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "If you have imported your Gradle project into IntelliJ IDEA, you will notice that IDEA is able to mark the test directory as the _Test root_ (colored in green by default) automatically."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "You can now write a test (e.g., `test/java/seedu/duke/DukeTest.java`) and run it with `gradlew test`."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "## Further Reading"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Now that you have a general idea of how to accomplish basic tasks with Gradle, here\u0027s a list of material you can read to further your understanding."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* [Official Gradle Documentation](https://docs.gradle.org/current/userguide/userguide.html)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "----------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 2,
      "-": 168
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart1.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial Part 1 – Introduction"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## JavaFX lifecycle of an application"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Imagine yourself as a director of a play. First you provision the props that you will feature in your play. These can be hand props for your actors to interact with or even set dressings just to liven up the background. You then decide where to layout the props for every scene. With a proper script in hand, you can finally approach a theatre and request for a stage. There on, it’s just a matter of pulling the curtains on your masterpiece."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![Hierarchy of Objects in JavaFX](assets/JavaFxHierarchy.png)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "A JavaFX application is like a play you are directing. Instead of creating props, you create `Nodes` (`Nodes` are the fundamental building blocks of a JavaFX application), and place them onto a `Scene` (a scene is a graph of `Node`s). Then, you set your `Scene` on a `Stage` provided by JavaFX. When you call `Stage#show()` method, JavaFX renders a window with your `Stage` on it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up Java FX"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "### If you are not using Gradle"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Download the [JavaFX 11 SDK](https://gluonhq.com/products/javafx/) and unzip it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the `libs` folder from the SDK into your project (note: `JAVAFX_HOME` is the directory in which you have unzipped the JavaFX SDK). "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   `File` \u003e `Project Structure` \u003e `Libraries` \u003e `+` \u003e `Java` \u003e `{JAVAFX_HOME}/lib`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. From `Run` \u003e `Edit Configurations`, add the following line into your `VM options` for each of the `main` classes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   `--module-path {JAVAFX_HOME}/lib --add-modules javafx.controls,javafx.fxml`\u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   e.g., `--module-path C:/javafx-sdk-11.0.2/lib --add-modules javafx.controls,javafx.fxml`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "### If you are using Gradle"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Update your `build.gradle` to include the following lines:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Writing your first program"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "As customary, let’s start off with a simple “Hello World” program. Modify your `Duke` class to extend `javafx.application.Application`. This requires you to override the `Application#start()` method and provide a concrete implementation. Notice that the method signature for `Application#start()` has a parameter `Stage`. This is the _primary stage_ that JavaFX provides."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Note how we have created a `Label` to contain the text that we want to show. We then create the `Scene` and set its content. Finally, we set the stage and show it. "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Next, we create another Java class, `seedu.duke.core.Launcher`, as an entry point to our application."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "The `seedu.duke.core.Launcher` class is reproduced below in its entirety."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class seedu.duke.core.Launcher {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Run `seedu.duke.core.Launcher` and you should see something like this:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "![Hello World](assets/HelloWorld.png) "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! You have created your first GUI application!"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "1. We mentioned that `Node`s are the fundamental building blocks of JavaFX and used a `Label` as our root node in the HelloWorld application."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What are some of the other types of `Node`s?"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   1. How does JavaFX group them?"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "1. `Node`s can be interacted with like Plain Old Java Objects (POJO)."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What properties of a `Label` can you change programmatically?"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Try changing the `Label` to have a font of Arial at size 50."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "1. You’ve learnt that a `Stage` can be thought of as a window. "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Can you have more than one `Stage` an application?"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Try creating another stage and showing it! What happens?"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 4,
      "-": 106
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart4.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 4 – FXML "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "While we have produced a fully functional prototype, there are a few major problems with our application."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "1. The process of visually enhancing the GUI is long and painful:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   * Does the `TextField` need to be 330px or 325px wide? "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   * How much padding is enough padding to look good?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   Every small change requires us to rebuild and run the application.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Components are heavily dependent on each other:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   Why does `Main` need to know that `DialogBox` needs a `Label`? "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   What happens if we change the `Label` to a custom `ColoredLabel` in the future?  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    We need to minimize the amount of information each control needs to know about another."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    Otherwise, making changes in the future will break existing features."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. The code is untidy and long:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   Why is all the code in one place?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   The `Main` class attempts to do it all. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   Code for visual tweaks, listeners and even utility methods are all in one file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   This makes it difficult to find and make changes to existing code."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FXML is a XML-based language that allows us to define our user interface. Properties of JavaFX objects can be defined in the FXML file. For example:  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "The FXML snippet define a TextField similar to the one that we programmatically defined previous in Tutorial 2. Notice how concise FXML is compared to the plain Java version."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s return to Duke and convert it to use FXML instead."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# Rebuilding the Scene using FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Scene Builder is a tool developed by Oracle and currently maintained by Gluon. It is a What-You-See-Is-What-You-Get GUI creation tool. [Download](https://gluonhq.com/products/scene-builder/#download) the appropriate version for your OS and install it."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Create the following files in `src/main/resources/view`:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "**seedu.duke.ui.MainWindow.fxml**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.fxml**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s explore the provided FXML files in Scene Builder. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    Running the tool brings up the main screen."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    Select `Open Project` \u003e `src/main/resources/view/seedu.duke.ui.MainWindow.fxml`. Inspect each control and its properties."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "   ![SceneBuilder opening seedu.duke.ui.MainWindow.fxml](assets/SceneBuilder.png)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the right accordion pane, you can modify the properties of the control that you have selected. Try changing the various settings and see what they do!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "1. On the left accordion, you can see that we have set the controller class to `seedu.duke.ui.MainWindow`. "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "We will get to that later."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "   ![Controller for seedu.duke.ui.MainWindow](assets/MainWindowController.png)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s repeat the process for `DialogBox`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   The main difference here is that DialogBox checks `Use fx:root construct` and _does not define a controller class_. "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Settings for DialogBox](assets/DialogBoxController.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "## Using Controllers"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "As part of the effort to separate the code handling Duke\u0027s logic and UI, let\u0027s _refactor_ the UI-related code to its own class."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "We call these UI classes _controllers_. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Let\u0027s implement the `seedu.duke.ui.MainWindow` controller class that we specified in `seedu.duke.ui.MainWindow.fxml`."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "**seedu.duke.ui.MainWindow.java**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": " * Controller for seedu.duke.ui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class seedu.duke.ui.MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "The `@FXML` annotation marks a `private` or `protected` member and makes it accessible to FXML despite its modifier."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "Without the annotation, we will have to make everything `public` and expose our UI to unwanted changes."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "The `FXMLLoader` will map the a control with a `fx:id` defined in FXML to a variable with the same name in its controller."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Notice how in `seedu.duke.ui.MainWindow`, we can invoke `TextField#clear()` on `userInput` and access its content just as we did in the previous example."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Similarly, methods like private methods like `handleUserInput` can be used in FXML when annotated by `@FXML`. "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "## Using FXML in our application"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "Let\u0027s create a new `Main` class as the bridge between the existing logic in `Duke` and the UI in `seedu.duke.ui.MainWindow`."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "**Main.java**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/seedu.duke.ui.MainWindow.fxml\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            fxmlLoader.\u003cseedu.duke.ui.MainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "Again, we can interact with the `AnchorPane` defined in the FXML as we would have if we created the `AnchorPane` ourselves."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "For our custom `DialogBox`, we did not define a controller so let\u0027s create a controller for it."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.java**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(seedu.duke.ui.MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "When we create a new instance of `DialogBox`, we set both the controller and root Node to `DialogBox`. "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "From this point onwards we can interact with `DialogBox` as we have in the previous tutorials."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "The last change that we have to make is to point our `seedu.duke.core.Launcher` class in the right direction:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "In `seedu.duke.core.Launcher.java`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "//...    "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "[todo]: # (Discussion on the fx:root pattern.)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "1. Convert `seedu.duke.ui.MainWindow` to use the `fx:root` construct."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "1. Extend `seedu.duke.ui.MainWindow` to have a `Stage` as a root Node."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "1. Customize the appearance of the application further with CSS."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 19,
      "-": 275
    }
  }
]
