[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "Sam-limyr": 2
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public DeadlineTask(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public String formattedString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return \"D | \" + super.formattedString() + \" | \" + time.getDayOfMonth() + \"/\" + time.getMonthValue() + \"/\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                + time.getYear() + \" \" + String.format(\"%02d\", time.getHour()) + String.format(\"%02d\", time.getMinute())"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return \"[D]\" + super.toString() + \" (at: \" + time.getDayOfMonth() + \" of \" + time.getMonth() + \", \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                + time.getYear() + \", at \" + String.format(\"%02d\", time.getHour())"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                + String.format(\"%02d\", time.getMinute()) + \" hrs)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            taskList \u003d new TaskList(storage.loadSavedList());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        ui.printHello();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                String instruction \u003d input.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                if (instruction.equals(\"bye\")) { // First, check if \u0027bye\u0027 is called"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    ui.printBye();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                } else if (instruction.equals(\"list\")) { // Then, check if \u0027list\u0027 is called"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    taskList.printList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                } else if (instruction.equals(\"done\")) { // Then, check if task is marked done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    int index \u003d Integer.parseInt(input.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    taskList.markTask(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    storage.writeSavedList(taskList.getList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                } else if (instruction.equals(\"delete\")) { // Then, check if task is marked delete"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    int index \u003d Integer.parseInt(input.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    taskList.deleteTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    storage.writeSavedList(taskList.getList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                } else if (instruction.equals(\"todo\") || instruction.equals(\"deadline\") || instruction.equals(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                        if (instruction.equals(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            String taskContent \u003d input.split(\" \", 2)[1]; // Remaining content of task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            if (taskContent.matches(\"\\\\s*\")) { // if the task\u0027s description is only whitespace"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                                throw new EmptyTaskDescriptionException(\"OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            taskList.createToDo(taskContent);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            storage.writeSavedList(taskList.getList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            String taskDescription \u003d input.split(\"deadline|event\", 2)[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            if (!(taskDescription.contains(\" /by \") || taskDescription.contains(\" /at \"))) { // if \u0027/by\u0027 and \u0027/at\u0027 are absent"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                                throw new IncorrectTaskTimeFormatException(\"OOPS!!! No \u0027 /by \u0027 or \u0027 /at \u0027 detected! Please use the correct format!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            String taskContent \u003d taskDescription.split(\"/by|/at\", 2)[0].strip();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            String taskTimeBeforeParse \u003d taskDescription.split(\"/by|/at\", 2)[1].strip(); // time must be parsed via \u0027/by\u0027 or \u0027/at\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            String[] taskTimeParsed \u003d taskTimeBeforeParse.split(\"[ /]\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            LocalDateTime taskTime \u003d LocalDateTime.of(Integer.parseInt(taskTimeParsed[2]),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                                    Integer.parseInt(taskTimeParsed[1]), Integer.parseInt(taskTimeParsed[0]),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                                    Integer.parseInt(taskTimeParsed[3].substring(0, 2)),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                                    Integer.parseInt(taskTimeParsed[3].substring(2, 4)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            if (taskContent.matches(\"\\\\s*\")) { // if the task\u0027s description is only whitespace"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                                throw new EmptyTaskDescriptionException(\"OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            if (instruction.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                                taskList.createDeadline(taskContent, taskTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                                taskList.createEvent(taskContent, taskTime);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                            storage.writeSavedList(taskList.getList());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) { // if the task description is empty"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                        throw new EmptyTaskDescriptionException(\"OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    ui.printSize(taskList.getSize());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                } else { // if an invalid instruction is entered"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    throw new InvalidInstructionException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        new Duke(\"CurrentTaskList.txt\").run();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "Sam-limyr": 83
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 5
    }
  },
  {
    "path": "src/main/java/EmptyTaskDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class EmptyTaskDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public EmptyTaskDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 5
    }
  },
  {
    "path": "src/main/java/EmptyTaskListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class EmptyTaskListException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public EmptyTaskListException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 5
    }
  },
  {
    "path": "src/main/java/EmptyTaskTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class EmptyTaskTimeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public EmptyTaskTimeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 5
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public EventTask(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public String formattedString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return \"E | \" + super.formattedString() + \" | \" + time.getDayOfMonth() + \"/\" + time.getMonthValue() + \"/\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                + time.getYear() + \" \" + String.format(\"%02d\", time.getHour()) + String.format(\"%02d\", time.getMinute())"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time.getDayOfMonth() + \" of \" + time.getMonth() + \", \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                + time.getYear() + \", at \" + String.format(\"%02d\", time.getHour())"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                + String.format(\"%02d\", time.getMinute()) + \" hrs)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 24
    }
  },
  {
    "path": "src/main/java/IncorrectTaskTimeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class IncorrectTaskTimeFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public IncorrectTaskTimeFormatException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 5
    }
  },
  {
    "path": "src/main/java/InvalidInstructionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class InvalidInstructionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public InvalidInstructionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 5
    }
  },
  {
    "path": "src/main/java/InvalidIntegerTaskListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class InvalidIntegerTaskListException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public InvalidIntegerTaskListException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 5
    }
  },
  {
    "path": "src/main/java/NotAnIntegerTaskListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class NotAnIntegerTaskListException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public NotAnIntegerTaskListException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 5
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    private List\u003cString\u003e savedList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    private ArrayList\u003cTask\u003e returnTaskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    ArrayList\u003cTask\u003e loadSavedList() throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.savedList \u003d Files.readAllLines(file.toPath());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        for (String line : savedList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            String[] lineElements \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            String lineType \u003d lineElements[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            if (lineType.equals(\"T\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                Task currentTask \u003d new ToDoTask(lineElements[2]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                if (lineElements[1].equals(\"+\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    currentTask.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                returnTaskList.add(currentTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            } else if (lineType.equals(\"D\") || (lineType.equals(\"E\"))) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                String[] taskTimeParsed \u003d lineElements[3].split(\"[ /]\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                LocalDateTime taskTime \u003d LocalDateTime.of(Integer.parseInt(taskTimeParsed[2]),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                        Integer.parseInt(taskTimeParsed[1]), Integer.parseInt(taskTimeParsed[0]),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                        Integer.parseInt(taskTimeParsed[3].substring(0, 2)),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                        Integer.parseInt(taskTimeParsed[3].substring(2, 4)));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                if (lineType.equals(\"D\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    Task currentTask \u003d new DeadlineTask(lineElements[2], taskTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    if (lineElements[1].equals(\"+\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                        currentTask.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    returnTaskList.add(currentTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    Task currentTask \u003d new EventTask(lineElements[2], taskTime);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    if (lineElements[1].equals(\"+\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                        currentTask.markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                    returnTaskList.add(currentTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return returnTaskList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void writeSavedList(ArrayList\u003cTask\u003e workingTaskList) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        for (Task task : workingTaskList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            fileWriter.write(task.formattedString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 62
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return (isDone ? \"+\" : \"-\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public String formattedString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return this.getStatusIcon() + \" | \" + this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    int getSize() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void printList() throws EmptyTaskListException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) { // if \u0027list\u0027 is called with no tasks currently stored"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            throw new EmptyTaskListException(\"OOPS!!! You have no tasks currently stored in your list!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            System.out.println((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void markTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) { // if \u0027list\u0027 is empty, \u0027done\u0027 cannot be called"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            throw new EmptyTaskListException(\"OOPS!!! You have no tasks currently stored in your list!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            taskList.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + taskList.get(index - 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        } catch (NumberFormatException e) { // if not a number is entered after \u0027done\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            throw new NotAnIntegerTaskListException(\"OOPS!!! Please enter an integer after \u0027done\u0027!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        } catch (IndexOutOfBoundsException e) { // if an invalid number is entered after \u0027done\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            throw new InvalidIntegerTaskListException(\"OOPS!!! Please enter a valid task number!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) { // if \u0027list\u0027 is empty, \u0027delete\u0027 cannot be called"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            throw new EmptyTaskListException(\"OOPS!!! You have no tasks currently stored in your list!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            Task currentTask \u003d taskList.remove(index - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + currentTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        } catch (NumberFormatException e) { // if not a number is entered after \u0027delete\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            throw new NotAnIntegerTaskListException(\"OOPS!!! Please enter an integer after \u0027delete\u0027!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        } catch (IndexOutOfBoundsException e) { // if an invalid number is entered after \u0027delete\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "            throw new InvalidIntegerTaskListException(\"OOPS!!! Please enter a valid task number!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void addTask(Task currentTask) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        taskList.add(currentTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + currentTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void createToDo(String taskContent) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        Task currentTask \u003d new ToDoTask((taskContent));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.addTask(currentTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void createDeadline(String taskContent, LocalDateTime taskTime) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        Task currentTask \u003d new DeadlineTask(taskContent, taskTime);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.addTask(currentTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void createEvent(String taskContent, LocalDateTime taskTime) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        Task currentTask \u003d new EventTask(taskContent, taskTime);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        this.addTask(currentTask);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 81
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public ToDoTask(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public String formattedString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return \"T | \" + super.formattedString() + \"\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 15
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void showError(Exception e) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void printHello() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void printBye() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    void printSize(int size) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sam-limyr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sam-limyr": 17
    }
  }
]
