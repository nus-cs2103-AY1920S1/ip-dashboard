[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public Deadline(String info, String type, String by) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        super(info,type);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public String printTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        return super.printTask() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SebastianLie": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "/*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": " TO DO:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": " ADD FUNC DESCRIPS"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": " ADD EXCEPTION SUPPORT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        description: Constructor for duke, greets user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        expects: No input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        outputs: returns nothing"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(\"Hello, I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private void printLine() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        Prints line of dashes with \\n at end."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        looks nice tee hee"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        expects: No input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        outputs: returns nothing"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private String list() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        stores all tasks in printable format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        then returns it."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        expects: nothing, but taskArr must exist"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        outputs: printable string that is all tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        String s \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        for (int i \u003d 0; i \u003c taskArr.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            // printInt to put number for printing"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            int printInt \u003d i + 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            Task currTask \u003d taskArr.get(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            s +\u003d currTask.printTask() + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private void todo(String taskInfo) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        if (taskInfo.equals(\"\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            // error handling"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            System.out.println(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        ToDo newToDo \u003d new ToDo(taskInfo,\"T\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        taskArr.add(newToDo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.print(\" \" + newToDo.printTask() + \"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(\"Now you have \" + taskArr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private void deadline(String taskInfo) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        int sep \u003d taskInfo.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        // use sep to split string"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        String actualTask \u003d taskInfo.substring(0,sep);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        sep +\u003d 4; // put sep at space after /by"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        String time \u003d taskInfo.substring(sep);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        Deadline newTing \u003d new Deadline(actualTask,\"D\",time);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        taskArr.add(newTing);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.print(\" \" + newTing.printTask() + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(\"Now you have \" + taskArr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private void event(String taskInfo) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        int sep \u003d taskInfo.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        // use sep to split string"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        String actualTask \u003d taskInfo.substring(0,sep);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        sep +\u003d 4; // put sep at space after /by"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        String time \u003d taskInfo.substring(sep);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        Event newTing \u003d new Event(actualTask,\"E\",time);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        taskArr.add(newTing);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.print(\" \" + newTing.printTask() + \"\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(\"Now you have \" + taskArr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private void done(int t) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        Task doneTask \u003d taskArr.get(t-1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        doneTask.markDone();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.print(\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(doneTask.printTask());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private void delete(int taskNum) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        Task doneTask \u003d taskArr.get(taskNum-1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.print(\"Noted. I\u0027ve removed this task: \\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(\" \" + doneTask.printTask());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        taskArr.remove(taskNum-1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(\"Now you have \" + taskArr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        Main method for duke, will run until"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        bye is read, then will exit"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        expects: No input"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        outputs: returns nothing"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        String input \u003d sc.next();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                // list all tasks"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                System.out.print(list());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            } else if (input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                // basic"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                String info \u003d sc.nextLine();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                todo(info);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            } else if (input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                String info \u003d sc.nextLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                deadline(info);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            } else if (input.equals(\"event\")) {   // list command"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                String info \u003d sc.nextLine();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                event(info);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            } else if (input.equals(\"done\")) {   // list command"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                int taskNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                done(taskNum);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            } else if (input.equals(\"delete\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                int taskNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                delete(taskNum);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                // handle all other cases"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "            input \u003d sc.next();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        Duke d \u003d new Duke();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        d.run();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SebastianLie": 163,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    // TO DO fill exceptions and handle all errors"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SebastianLie": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public Event(String info, String type, String by) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        super(info,type);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public String printTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        return super.printTask() + \" (at: \" + by + \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SebastianLie": 12
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    // all class variables private"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private String taskInfo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public Task(String info, String type) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        description: Constructor for duke, greets user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        expects: No input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        outputs: returns nothing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        this.taskInfo \u003d info;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        this.taskType \u003d type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    // getters"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public String getTaskInfo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        return taskInfo;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        description: helper to print tick or cross"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        in main duke class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        expects: No input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        outputs: returns tick if isDone true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        returns cross if isDone false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        // taken from partial soln tq prof"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public String printTask() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        String s \u003d \"[\" + getType() + \"]\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        s +\u003d \"[\" + getStatus() + \"] \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        s +\u003d getTaskInfo();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    // setters"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        description: helper method to mark this task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        as done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        expects: No input"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        outputs: returns nothing, only changes this object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SebastianLie": 55
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    // task with nothing attached, so no frills, everything can be simply inherited"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    public ToDo(String info, String type) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "        super(info,type);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SebastianLie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SebastianLie": 6
    }
  }
]
