[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "run {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 5,
      "-": 14
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "D|1|eat|2/2/2019 2200"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "D|0|quiz|29/8/2019 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "T|0|sleep"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 3
    }
  },
  {
    "path": "src/main/java/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a user command to add a deadline to the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    String inputDeadline \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setInputDeadline(String inputDeadline) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.inputDeadline \u003d inputDeadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden method. Executes the add deadline command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param storage storage file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @throws DukeException exception specific to Duke application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputDeadline.trim().length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int slashLocation \u003d slashLocator(inputDeadline);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int firstIndex \u003d slashLocation - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int secondIndex \u003d slashLocation + 4;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String deadlineDescription \u003d inputDeadline.substring(9, firstIndex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String deadlineBy \u003d inputDeadline.substring(secondIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Deadline d \u003d new Deadline(deadlineDescription, deadlineBy);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks.addTaskAfterValidation(deadlineBy, d);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Returns the index of the slash symbol in an input string."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param inputString input string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return index of slash symbol"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public int slashLocator(String inputString) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return inputString.indexOf(\"/\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 43
    }
  },
  {
    "path": "src/main/java/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a user command to add an event to the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    String inputEvent \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setInputEvent(String inputEvent) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.inputEvent \u003d inputEvent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden method. Executes the add event command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param storage storage file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @throws DukeException exception specific to Duke application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputEvent.trim().length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int slashLocation \u003d slashLocator(inputEvent);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int firstIndex \u003d slashLocation - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int secondIndex \u003d slashLocation + 4;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String eventDescription \u003d inputEvent.substring(6, firstIndex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String eventAt \u003d inputEvent.substring(secondIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Event e \u003d new Event(eventDescription, eventAt);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks.addTaskAfterValidation(eventAt, e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Returns the index of the slash symbol in an input string."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param inputString input string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return index of slash symbol"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public int slashLocator(String inputString) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return inputString.indexOf(\"/\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 43
    }
  },
  {
    "path": "src/main/java/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a user command to add a to-do task to the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    String inputTodo \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setInputTodo(String inputTodo) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.inputTodo \u003d inputTodo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden method. Executes the add todo command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param storage storage file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @throws DukeException exception specific to Duke application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputTodo.trim().length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String todoDescription \u003d inputTodo.substring(5);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Todo t \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks.addTask(t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 34
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a user command abstractly."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param storage storage file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @throws DukeException exception specific to Duke application"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Each deadline has a time when the deadline takes effect,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * stored in both String and LocalDateTime formats."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * A subclass of Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected LocalDateTime dateTimeBy \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param description description of the deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param by date and time when deadline takes effect"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setDateTimeBy(LocalDateTime dateTimeBy) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.dateTimeBy \u003d dateTimeBy;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden toString method. Converts a deadline object into string form to be used"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * in to-do list display."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return string representation of a task on the to-do list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden toTextFileString method. Converts a deadline object into string form to be used"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * in storage text file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return string representation of a task on the storage text file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toTextFileString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"D|\" + super.toTextFileString() + \"|\" + by;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 47
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a user command to delete a task from the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    int indexToRemove \u003d -1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setIndexToRemove(int indexToRemove) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.indexToRemove \u003d indexToRemove;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden method. Executes the delete command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param storage storage file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Task toBeRemoved \u003d tasks.getTask(indexToRemove);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        tasks.removeTask(indexToRemove);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(toBeRemoved);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 27
    }
  },
  {
    "path": "src/main/java/DisplayListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a user command to display the task list in full."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class DisplayListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden method. Executes the display list command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param storage storage file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        tasks.displayFullList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alxkohh": 18
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a user command to mark a task from the task list as done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    int indexToMarkDone \u003d -1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setIndexToMarkDone(int indexToMarkDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.indexToMarkDone \u003d indexToMarkDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden method. Executes the done command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param storage storage file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Task toBeMarkDone \u003d tasks.getTask(indexToMarkDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        toBeMarkDone.markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(toBeMarkDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Driver class which contains the main method of the program. Also encapsulates Duke,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * a to-do list. Each Duke object has a storage file, a list of tasks, and a user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * interface."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param filePath file path of text file used to load and store tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Runs the application. A scanner is instantiated to read standard input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Main method, the program\u0027s entry point. A Duke object is instantiated to call run(), an instance method."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param args  an array of command-line arguments for the application"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        File file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        file.mkdir();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 52,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Represents an exception specific to a Duke application."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * A subclass of the Exception class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param message description of the exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates an event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Each event has a time when the event takes place,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * stored in both String and LocalDateTime formats."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * A subclass of Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected LocalDateTime dateTimeAt \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param description description of event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param at date and time when event takes place"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setDateTimeAt(LocalDateTime dateTimeAt) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.dateTimeAt \u003d dateTimeAt;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden toString method. Converts a event object into string form to be used"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * in to-do list display."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return string representation of a task on the to-do list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden toTextFileString method. Converts a task object into string form to be used"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * in storage text file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return string representation of a task on the storage text file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toTextFileString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"E|\" + super.toTextFileString() + \"|\" + at;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 47
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a user command to exit the application."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden method. Executes the exit command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param storage storage file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 16
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    String keyword \u003d \"\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setKeyword(String keyword) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        ArrayList\u003cTask\u003e matchingList \u003d tasks.generateMatchingList(keyword);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        displayList(matchingList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void displayList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int itemIndex \u003d i + 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String itemDisplay \u003d itemIndex + \".\" + list.get(i).getDescription();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(itemDisplay);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 25
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a parser that parses input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Static method. Parses the user input into relevant commands which are then returned."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return relevant command parsed from user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static Command parse (String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String[] inputSplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return new DisplayListCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (inputSplit[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int inputIndex \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int actualIndex \u003d inputIndex - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            DeleteCommand delete \u003d new DeleteCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            delete.setIndexToRemove(actualIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return delete;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (inputSplit[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int inputIndex \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int actualIndex \u003d inputIndex - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            DoneCommand done \u003d new DoneCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            done.setIndexToMarkDone(actualIndex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return done;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (inputSplit[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            AddTodoCommand addTodo \u003d new AddTodoCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            addTodo.setInputTodo(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return addTodo;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (inputSplit[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            AddEventCommand addEvent \u003d new AddEventCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            addEvent.setInputEvent(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return addEvent;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (inputSplit[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            AddDeadlineCommand addDeadline \u003d new AddDeadlineCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            addDeadline.setInputDeadline(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return addDeadline;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (inputSplit[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            FindCommand find \u003d new FindCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            find.setKeyword(keyword);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return find;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return new UnrecognisedInputCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 50
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates the storage for the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Each storage has a file path which reveals"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * the file path of the text file used to load and save all tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private String filePath \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Loads the previously curated task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return previously curated task list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @throws DukeException exception specific to Duke application"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        ArrayList\u003cTask\u003e outputList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                String savedTask \u003d s.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                String[] savedTaskSplit \u003d savedTask.split(\"\\\\|\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                if (savedTaskSplit[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    String description \u003d savedTaskSplit[2];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    Task todoTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    if (savedTaskSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                        todoTask.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    outputList.add(todoTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } else if (savedTaskSplit[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    String description \u003d savedTaskSplit[2];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    String at \u003d savedTaskSplit[3];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    Task eventTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    if (savedTaskSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                        eventTask.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    outputList.add(eventTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    String description \u003d savedTaskSplit[2];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    String by \u003d savedTaskSplit[3];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    Task deadlineTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    if (savedTaskSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                        deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    outputList.add(deadlineTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return outputList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Writes text to the storage text file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param textToAdd text to write onto the storage text file"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @throws IOException input/output exception"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Updates the storage text file based on the changes made on the task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param list input list, such as task list itself"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void updateChanges(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                if (i \u003d\u003d list.size() - 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    sb.append(list.get(i).toTextFileString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    sb.append(list.get(i).toTextFileString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String content \u003d sb.toString();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            writeToFile(content);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 101
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Each task has a description and a boolean value"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * to indicate its status of being done or not."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Returns the status icon of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return tick symbol if isDone is true, X symbol if isDone is false."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Sets the value of isDone to true."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden toString method. Converts a task object into string form to be used"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * in to-do list display."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return string representation of a task on the to-do list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String output \u003d \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Converts a task object into string form to be used"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * in storage text file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return string representation of a task on the storage text file"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toTextFileString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String status \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (this.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            status \u003d \"1|\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            status \u003d \"0|\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String output \u003d status + this.getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 64
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * A task list has a date time formatter and also and ArrayList"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * to hold tasks, named dukeTaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private static DateTimeFormatter dukeDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private ArrayList\u003cTask\u003e dukeTaskList \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param dukeTaskList ArrayList that holds all the tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e dukeTaskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.dukeTaskList \u003d dukeTaskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overloaded constructor."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.dukeTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Adds a task to task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param toAdd task to be added"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void addTask(Task toAdd) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        dukeTaskList.add(toAdd);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Deletes a particular task from dukeTaskList"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param toDelete task to be deleted"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void deleteTask(Task toDelete) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        dukeTaskList.remove(toDelete);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Returns a task of a particular index position in dukeTaskList"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param index index position of the task to be retrieved"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return task at the input index position"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return dukeTaskList.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Removes and returns a task of the input index position from dukeTaskList"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param index index position of the task to be removed"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return removed task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return dukeTaskList.remove(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Returns dukeTaskList, the ArrayList that holds all the tasks."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return dukeTaskList"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public ArrayList\u003cTask\u003e getDukeTaskList() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return dukeTaskList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Returns the size of dukeTaskList."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return dukeTaskList.size();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Adds task into dukeTaskList upon successful validation."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param dateTimeString user input string format for date and time of task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param t task to be added after successful validation"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void addTaskAfterValidation(String dateTimeString, Task t) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, dukeDateTimeFormatter);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            if (t instanceof Event) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                e.setDateTimeAt(dateTime);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                d.setDateTimeBy(dateTime);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            addTask(t);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Now you have \" + dukeTaskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Task not added to list because the input format for date and time is unrecognised. \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    + \"Please enter date and time in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Prints the full list of tasks."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void displayFullList() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        for (int i \u003d 0; i \u003c dukeTaskList.size(); i++) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int itemIndex \u003d i + 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String itemDisplay \u003d itemIndex + \".\" + dukeTaskList.get(i).toString();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(itemDisplay);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public ArrayList\u003cTask\u003e generateMatchingList(String keyword) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        ArrayList\u003cTask\u003e outputList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        for (int i \u003d 0; i \u003c dukeTaskList.size(); i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            if (dukeTaskList.get(i).toString().contains(keyword)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                outputList.add(dukeTaskList.get(i));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return outputList;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alxkohh": 131
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a to-do task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * A subclass of Task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden toString method. Converts a todo object into string form to be used"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * in to-do list display."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return string representation of a task on the to-do list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden toTextFileString method. Converts a deadline object into string form to be used"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * in storage text file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @return string representation of a task on the storage text file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toTextFileString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"T|\" + super.toTextFileString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 30
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Represents the user interface of the application."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Prints message to indicate error loading the target file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Loading Error\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Prints welcome message when application starts up."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Prints exit message and exits the application."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param errorMessage input error message from any exception"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 35
    }
  },
  {
    "path": "src/main/java/UnrecognisedInputCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Encapsulates a user command of unrecognised input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class UnrecognisedInputCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Overridden method. Executes the unrecognised input command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @param storage storage file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * @throws DukeException exception specific to Duke application"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 17
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Test class to test Task class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Test method to test getStatusIcon()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Task t \u003d new Task(\"read book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String expected \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        assertEquals(expected, t.getStatusIcon());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Test method to test getDescription()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void testGetDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Task t \u003d new Task(\"cook dinner\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String expected \u003d \"cook dinner\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        assertEquals(expected, t.getDescription());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Test method to test markAsDone()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Task t \u003d new Task(\"clean room\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        assertEquals(true, t.isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 39
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " * Test class to test Todo class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Test method to test toString()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Todo t \u003d new Todo(\"eat lunch\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String expected \u003d \"[T][\\u2718] eat lunch\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        assertEquals(expected, t.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     * Test method to test toTextFileString()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void testToTextFileString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Todo t \u003d new Todo(\"exercise\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String expected \u003d \"T|0|exercise\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        assertEquals(expected, t.toTextFileString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 29
    }
  }
]
