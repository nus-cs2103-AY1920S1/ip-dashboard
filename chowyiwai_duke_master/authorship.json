[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    version \u003d \u002711.0.2\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    testImplementation(\u0027org.junit.jupiter:junit-jupiter-api:5.4.2\u0027)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    testRuntime(\u0027org.junit.jupiter:junit-jupiter-engine:5.4.2\u0027)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "run {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 25,
      "-": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a personal assistant chat bot. A \u003ccode\u003eDuke\u003c/code\u003e object corresponds to a specific \u003ccode\u003eStorage\u003c/code\u003e,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * \u003ccode\u003eTaskList\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eDuke\u003c/code\u003e."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param filePath Path to file that should be written to and loaded from."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printLoadingErrorMessage(exception);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Runs the chat bot."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printLogo();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\Yi Wai\\\\Documents\\\\Year 2 Semester 1\\\\CS2103\\\\duke\\\\data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        PrintStream ps \u003d new PrintStream(outputStream);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.setOut(old);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return outputStream.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 85,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Duke duke \u003d new Duke("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            \"C:\\\\Users\\\\Yi Wai\\\\Documents\\\\Year 2 Semester 1\\\\CS2103\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 32
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.Group;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pooh.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Eeyore.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public MainWindow() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            new Group(DialogBox.getUserDialog(input, userImage)),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            new Group(DialogBox.getDukeDialog(response, dukeImage))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 56
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a parser that reads and parses raw command strings."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Parses raw commands and returns a type of \u003ccode\u003eCommand\u003c/code\u003e correspondingly."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param rawCommandDetails Details of the command provided by user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return A type of \u003ccode\u003eCommand\u003c/code\u003e that corresponds to the raw command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If the raw commands are invalid, in the wrong format or are lacking required information."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    static Command parse(String rawCommandDetails) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String commandDetails \u003d rawCommandDetails.replaceAll(\"\\\\s+\", \" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (commandDetails.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (commandDetails.equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (commandDetails.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String[] commandSplit \u003d commandDetails.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (commandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please specify a task to delete.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            int index \u003d Integer.parseInt(commandSplit[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (commandDetails.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String[] commandSplit \u003d commandDetails.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (commandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please specify the task that has been done.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            int index \u003d Integer.parseInt(commandSplit[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (commandDetails.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String[] commandSplit \u003d commandDetails.split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (commandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please specify what you want to find.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return new FindCommand(commandSplit[1].trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String taskDetailsString;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (commandDetails.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                taskDetailsString \u003d commandDetails.replaceFirst(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                if (taskDetailsString.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    return new AddTodoCommand(taskDetailsString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                String[] taskDetails;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                if (commandDetails.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    taskDetailsString \u003d commandDetails.replaceFirst(\"deadline\", \"\").trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    return new AddDeadlineCommand(taskDetailsString);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                } else if (commandDetails.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    taskDetailsString \u003d commandDetails.replaceFirst(\"event\", \"\").trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    return new AddEventCommand(taskDetailsString);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 74
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a storage in the hard disk."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to a specific file path that dictates the file that information about the"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * tasks in the \u003ccode\u003eTaskList\u003c/code\u003e should be loaded from and written to every time a change occurs."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eStorage\u003c/code\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param filePath Path to file that should be written to and loaded from."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Loads the tasks from the file given by the file path."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Stores and returns the tasks within an \u003ccode\u003eArrayList\u003c/code\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return An \u003ccode\u003eArrayList\u003c/code\u003e containing every \u003ccode\u003eTask\u003c/code\u003e written in the file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If the file path is invalid."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Scanner scanner \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                String taskLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                String[] taskDetails \u003d taskLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                String taskType \u003d taskDetails[0].trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                String taskDoneStatus \u003d taskDetails[1].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                String taskDescription \u003d taskDetails[2].trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    task \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String taskDate \u003d taskDetails[3].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String taskTime \u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    if (taskDetails.length \u003e 4) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                        taskTime \u003d taskDetails[4].trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    task \u003d new Deadline(taskDescription, new Date(taskDate), new Time(taskTime));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String taskStartDate \u003d taskDetails[3].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String taskStartTime \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String taskEndDate \u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String taskEndTime \u003d null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    if (taskDetails.length \u003e 4) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                        taskStartTime \u003d taskDetails[4].trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                        if (taskDetails.length \u003e 5) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                            taskEndDate \u003d taskDetails[5].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                            if (taskDetails.length \u003e 6) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                                taskEndTime \u003d taskDetails[6].trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    task \u003d new Event(taskDescription, new Date(taskStartDate), new Time(taskStartTime),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                            new Date(taskEndDate), new Time(taskEndTime));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                if (taskDoneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please specify a valid file path.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Writes the tasks in the \u003ccode\u003eTaskList\u003c/code\u003e to the file given by the file path."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param taskList \u003ccode\u003eTaskList\u003c/code\u003e containing all the tasks."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If the file cannot be written to."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void writeToFile(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.getList();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                builder.append(task.getType() + \" | \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                if (task.isDone()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    builder.append(\"1 | \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    builder.append(\"0 | \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                builder.append(task.getDescription());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                if (task.getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String rawDate \u003d deadline.getDate().getRawDate();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String rawTime \u003d deadline.getTime().getRawTime();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    builder.append(\" | \" + rawDate);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    if (rawTime !\u003d null) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                        builder.append(\" | \" + rawTime);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                } else if (task.getType().equals(\"E\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String rawStartDate \u003d event.getStartDate().getRawDate();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String rawStartTime \u003d event.getStartTime().getRawTime();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    builder.append(\" | \" + rawStartDate);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    if (rawStartTime !\u003d null) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                        builder.append(\" | \" + rawStartTime);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    builder.append(\" | \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String rawEndDate \u003d event.getEndDate().getRawDate();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    String rawEndTime \u003d event.getEndTime().getRawTime();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    if (rawEndDate !\u003d null) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                        builder.append(rawEndDate);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    if (rawEndTime !\u003d null) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                        if (rawEndDate !\u003d null) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                            builder.append(\" | \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                        builder.append(\" \" + rawEndTime);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                writer.write(builder.toString() + \"\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Something went wrong: \" + exception.getMessage());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 142
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a list that stores every \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Corresponds to an \u003ccode\u003eArrayList\u003c/code\u003e that contains the tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eTaskList\u003c/code\u003e that takes in an \u003ccode\u003eArrayList\u003c/code\u003e that already contains a few tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks List that already contains a few tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eTaskList\u003c/code\u003e that does not take in any parameter."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * A new \u003ccode\u003eArrayList\u003c/code\u003e is created to store tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the list containing the tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The list containing the tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Adds a \u003ccode\u003eTask\u003c/code\u003e to the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param task Task that is to be added."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Deletes a \u003ccode\u003eTask\u003c/code\u003e from the list that corresponds to the provided index."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param index Index of task in the list that is to be deleted."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the \u003ccode\u003eTask\u003c/code\u003e in the list that corresponds to the provided index."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param index Index of task in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Task that corresponds to the provided index."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Size of the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 70
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a user interface."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A \u003ccode\u003eUi\u003c/code\u003e object handles interaction between chat bot and user through printing messages and reading"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * user inputs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints the welcome logo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message to greet the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t What can I do for you?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Reads a line of command given by the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The unprocessed raw command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a line."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t ---------------------------------------------------------\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when the program exitss."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when a task is deleted."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param deletedTask The \u003ccode\u003eTask\u003c/code\u003e that is deleted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param size Current size of the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printDeleteMessage(Task deletedTask, int size) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.print(\"\\t \\t\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(deletedTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t Now you have \" + size + (size \u003d\u003d 1 ? \" task \" : \" tasks \")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"in the \" + \"list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when a task is marked as done."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param doneTask The \u003ccode\u003eTask\u003c/code\u003e that has been completed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printDoneMessage(Task doneTask) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.print(\"\\t \\t\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(doneTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when a task is added."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param addedTask The \u003ccode\u003eTask\u003c/code\u003e that is added."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param size Current size of the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printAddTaskMessage(Task addedTask, int size) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t \\t \" + addedTask);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t Now you have \" + size + (size \u003d\u003d 1 ? \" task \" : \" tasks \")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"in the \" + \"list.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when a \u003ccode\u003eFindCommand\u003c/code\u003e is executed."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param matchingTasks Tasks that contain the provided key word."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printFindMessage(ArrayList\u003cTask\u003e matchingTasks) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        for (Task matchingTask : matchingTasks) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            System.out.println(\"\\t \" + i + \". \" + matchingTask);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when an exception occurs."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param exception The \u003ccode\u003eException\u003c/code\u003e that has occurred."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printExceptionMessage(DukeException exception) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"\\t \" + exception.getMessage());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when the file in the file path cannot be loaded."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param exception The \u003ccode\u003eException\u003c/code\u003e that has occurred."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printLoadingErrorMessage(DukeException exception) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printExceptionMessage(exception);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a customizable message."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param message Message that is to be printed."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Closes the scanner."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void closeScanner() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 141
    }
  },
  {
    "path": "src/main/java/duke/calendar/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a date. A \u003ccode\u003eDate\u003c/code\u003e object corresponds to a time represented by a day, month and year."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected String rawDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected int day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Month month;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isNull \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eDate\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param rawDate Unprocessed date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If provided date is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Date(String rawDate) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.rawDate \u003d rawDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawDate !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            isNull \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            processDate();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Extracts information about the day, month and year from the raw date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If date is in the wrong format or invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected void processDate() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] dateComponents \u003d rawDate.split(\"/\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (dateComponents.length \u003c 3) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please specify a date in the form day/month/year. E.g. 2/12/2019\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            int inputDay \u003d Integer.parseInt(dateComponents[0]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            int inputYear \u003d Integer.parseInt(dateComponents[2]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            int inputMonthNum \u003d Integer.parseInt(dateComponents[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            year \u003d inputYear;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (isValidMonth(inputMonthNum)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                month \u003d Month.of(inputMonthNum);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please specify a valid month.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (isValidDay(inputDay, inputMonthNum, inputYear)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                day \u003d inputDay;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please specify a valid day.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if provided month is valid."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param inputMonthNum Number corresponding to specific month. E.g. 1 for January, 2 for February, etc."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if 1 \u003c\u003d inputMonthNum \u003c\u003d 12"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isValidMonth(int inputMonthNum) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (inputMonthNum \u003c 1 || inputMonthNum \u003e 12) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if provided day is valid."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param inputDay Number corresponding to specific day"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param inputMonthNum Number corresponding to specific month. E.g. 1 for January, 2 for February, etc."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param inputYear Number corresponding to year."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if day is valid for the given month and year."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isValidDay(int inputDay, int inputMonthNum, int inputYear) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        switch (inputMonthNum) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return inputDay \u003e\u003d 1 \u0026\u0026 inputDay \u003c\u003d 31;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (isLeapYear(inputYear)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return inputDay \u003e\u003d 1 \u0026\u0026 inputDay \u003c\u003d 29;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return inputDay \u003e\u003d 1 \u0026\u0026 inputDay \u003c\u003d 28;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return inputDay \u003e\u003d 1 \u0026\u0026 inputDay \u003c\u003d 30;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the provided year is a leap year."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param inputYear Number corresponding to year."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if the year is a leap year."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isLeapYear(int inputYear) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (inputYear % 400 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (inputYear % 100 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (inputYear % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the provided raw date is null."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if null was the input to the constructor."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isNull() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return isNull;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the provided raw date."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The raw date."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getRawDate() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return rawDate;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if ((day % 10) \u003d\u003d 1 \u0026\u0026 day !\u003d 11) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return day + \"st of \" + month.toString() + \" \" + year;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if ((day % 10) \u003d\u003d 2) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return day + \"nd of \" + month.toString() + \" \" + year;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if ((day % 10) \u003d\u003d 3) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return day + \"rd of \" + month.toString() + \" \" + year;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return day + \"th of \" + month.toString() + \" \" + year;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 147
    }
  },
  {
    "path": "src/main/java/duke/calendar/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a time. A \u003ccode\u003eTime\u003c/code\u003e object corresponds to a specific hour and minute."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected String rawTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isPastNoon;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected int hour;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected int minutes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isNull \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eTime\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param rawTime Unprocessed time"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If provided time is invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Time(String rawTime) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.rawTime \u003d rawTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawTime !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            isNull \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            processTime();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Extracts information about the hour and minute from the raw time."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If time is in the wrong format or invalid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected void processTime() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (isValidTime(rawTime)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            hour \u003d Integer.parseInt(rawTime.substring(0, 2));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (hour \u003e 11) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                isPastNoon \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                hour \u003d hour % 12;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                isPastNoon \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (hour \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                hour \u003d 12;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            minutes \u003d Integer.parseInt(rawTime.substring(2));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    \"☹ OOPS!!! Please specify a valid time. \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                            + \"Also ensure that you have specified the time in 24-hour clock convention E.g. 1800 \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if provided time is valid."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Both the hour and minute component of the time must be valid."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param rawTime Unprocessed time with 4 digits, 2 to represent the hour and the other 2 to represent the minute."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if the provided time is in the correct format and 0 \u003c\u003d hour \u003c\u003d 23 and 0 \u003c\u003d minute \u003c\u003d 59."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isValidTime(String rawTime) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawTime.length() \u003c 4) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            int inputHour  \u003d Integer.parseInt(rawTime.substring(0, 2));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            int inputMinutes \u003d Integer.parseInt(rawTime.substring(2));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (inputHour \u003e 23 || inputMinutes \u003e 59) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the provided raw time is null."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if null was the input to the constructor."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isNull() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return isNull;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the provided raw time."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The raw time."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getRawTime() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return rawTime;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (minutes \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return hour + (isPastNoon ? \"pm\" : \"am\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return hour + \":\" + (minutes \u003c 10 ? \"0\" + minutes : minutes) + (isPastNoon ? \"pm\" : \"am\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 96
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that adds a new \u003ccode\u003eDeadline\u003c/code\u003e object to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    String details;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003cCode\u003eAddDeadlineCommand\u003c/Code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param details The unprocessed details of the \u003ccode\u003eDeadline\u003c/code\u003e task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public AddDeadlineCommand(String details) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Creates a  new \u003ccode\u003eDeadline\u003c/code\u003e object and adds it to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Calls methods in \u003ccode\u003eStorage\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e to write the updated \u003ccode\u003eTaskList\u003c/code\u003e to hard"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * disk and print message to console respectively."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If provided details are insufficient or invalid."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] taskDetails \u003d details.split(\"/by\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (details.length() \u003d\u003d 0 || taskDetails[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskDetails.length \u003c 2 || taskDetails[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskDescription \u003d taskDetails[0].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] taskSpecifics \u003d taskDetails[1].trim().split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawTaskDate \u003d taskSpecifics[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawTaskTime;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskSpecifics.length \u003c 2 || taskSpecifics[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            rawTaskTime \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            rawTaskTime \u003d taskSpecifics[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date taskDate \u003d new Date(rawTaskDate);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time taskTime \u003d new Time(rawTaskTime);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Deadline deadline \u003d new Deadline(taskDescription, taskDate, taskTime);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printAddTaskMessage(deadline, tasks.getSize());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns unprocessed details."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Unprocessed details."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof AddDeadlineCommand) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            AddDeadlineCommand addDeadlineCommand \u003d (AddDeadlineCommand) o;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return addDeadlineCommand.getDetails().equals(details);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 91
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that adds a new \u003ccode\u003eEvent\u003c/code\u003e object to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    String details;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003cCode\u003eAddEventCommand\u003c/Code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param details The unprocessed details of the \u003ccode\u003eEvent\u003c/code\u003e task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public AddEventCommand(String details) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Creates a  new \u003ccode\u003eEvent\u003c/code\u003e object and adds it to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Calls methods in \u003ccode\u003eStorage\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e to write the updated \u003ccode\u003eTaskList\u003c/code\u003e to hard"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * disk and print message to console respectively."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If provided details are insufficient or invalid."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] taskDetails \u003d details.split(\"/at\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (details.length() \u003d\u003d 0 || taskDetails[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskDetails.length \u003c 2 || taskDetails[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskDescription \u003d taskDetails[0].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] taskSpecifics \u003d taskDetails[1].trim().split(\"/to\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskSpecifics[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The starting date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String[] rawStarts \u003d taskSpecifics[0].trim().split(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String rawStartDate \u003d rawStarts[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String rawStartTime \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (rawStarts.length \u003e\u003d 2 \u0026\u0026 rawStarts[1].trim().length() !\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                rawStartTime \u003d rawStarts[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String rawEndDate \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String rawEndTime \u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (taskSpecifics.length \u003e 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                String[] rawEnds \u003d taskSpecifics[1].trim().split(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                rawEndDate \u003d rawEnds[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                if (rawEnds.length \u003e\u003d 2 \u0026\u0026 rawEnds[1].trim().length() !\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    rawEndTime \u003d rawEnds[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Date startDate \u003d new Date(rawStartDate);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Time startTime \u003d new Time(rawStartTime);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Date endDate \u003d new Date(rawEndDate);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Time endTime \u003d new Time(rawEndTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Event event \u003d new Event(taskDescription, startDate, startTime, endDate, endTime);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            tasks.addTask(event);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printAddTaskMessage(event, tasks.getSize());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns unprocessed details."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Unprocessed details."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof AddEventCommand) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            AddEventCommand addEventCommand \u003d (AddEventCommand) o;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return addEventCommand.getDetails().equals(details);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 105
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that adds a new \u003ccode\u003eTodo\u003c/code\u003e object to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    String details;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003cCode\u003eAddTodoCommand\u003c/Code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param details The unprocessed details of the \u003ccode\u003eTodo\u003c/code\u003e task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public AddTodoCommand(String details) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Creates a  new \u003ccode\u003eTodo\u003c/code\u003e object and adds it to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Calls methods in \u003ccode\u003eStorage\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e to write the updated \u003ccode\u003eTaskList\u003c/code\u003e to hard"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * disk and print message to console respectively."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If provided details are insufficient or invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (details.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Todo todo \u003d new Todo(details);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            tasks.addTask(todo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printAddTaskMessage(todo, tasks.getSize());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns unprocessed details."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Unprocessed details."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof AddTodoCommand) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            AddTodoCommand addTodoCommand \u003d (AddTodoCommand) o;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return addTodoCommand.getDetails().equals(details);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 76
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Abstract parent class of all specific types of \u003ccode\u003eCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to an action that can be executed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Performs an action corresponding to the specific \u003ccode\u003eCommand\u003c/code\u003e\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If provided details are insufficient or invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that deletes a \u003ccode\u003eTask\u003c/code\u003e from the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003cCode\u003eDeleteCommand\u003c/Code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Deletes a  \u003ccode\u003eTask\u003c/code\u003e object in the \u003ccode\u003eTaskList\u003c/code\u003e that corresponds to the provided index."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Calls methods in \u003ccode\u003eStorage\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e to write the updated \u003ccode\u003eTaskList\u003c/code\u003e to hard"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * disk and print message to console respectively."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If provided index is missing or invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (index \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no such task in the list to delete.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Task deletedTask \u003d tasks.getTask(index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        tasks.deleteTask(index - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printDeleteMessage(deletedTask, tasks.getSize());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns provided index."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Provided index."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            DeleteCommand deleteCommand \u003d (DeleteCommand) o;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return deleteCommand.getIndex() \u003d\u003d index;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 74
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that marks a \u003ccode\u003eTask\u003c/code\u003e in the \u003ccode\u003eTaskList\u003c/code\u003e as completed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003cCode\u003eDoneCommand\u003c/Code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Marks a  \u003ccode\u003eTask\u003c/code\u003e object in the \u003ccode\u003eTaskList\u003c/code\u003e that corresponds to the provided index as"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * completed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Calls methods in \u003ccode\u003eStorage\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e to write the updated \u003ccode\u003eTaskList\u003c/code\u003e to hard"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * disk and print message to console respectively."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If provided index is missing or invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (index \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no such task in the list to mark as done.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Task doneTask \u003d tasks.getTask(index - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printDoneMessage(doneTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns provided index."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Provided index."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof DoneCommand) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            DoneCommand doneCommand \u003d (DoneCommand) o;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return doneCommand.getIndex() \u003d\u003d index;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 75
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that closes the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Closes the program by closing the \u003ccode\u003eScanner\u003c/code\u003e in \u003ccode\u003eUi\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof ExitCommand) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 47
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that finds all tasks that contain a given key word."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    String details;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eFindCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public FindCommand(String details) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Finds all tasks in the \u003ccode\u003eTaskList\u003c/code\u003e with descriptions containing the provided key word."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Task currentTask \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String taskDescription \u003d currentTask.getDescription();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (taskDescription.contains(details)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                matchingTasks.add(currentTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printFindMessage(matchingTasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that prints every \u003ccode\u003eTask\u003c/code\u003e object in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eListCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints every \u003ccode\u003eTask\u003c/code\u003e object in the \u003ccode\u003eTaskList\u003c/code\u003e using a method in \u003ccode\u003eUi\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printMessage(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printMessage(\"\\t \" + i + \". \" + tasks.getTask(i - 1));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof ListCommand) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 49
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a checked \u003ccode\u003eException\u003c/code\u003e."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eDukeException\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e with a deadline. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a description about"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * the \u003ccode\u003eTask\u003c/code\u003e and the \u003ccode\u003eDate\u003c/code\u003e and optionally, the \u003ccode\u003eTime\u003c/code\u003e at which it is due."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Time time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eDeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param description Details about the \u003ccode\u003eDeadline\u003c/code\u003e task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param date Date at which the task is due."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param time Time at which the task is due."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Deadline(String description, Date date, Time time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the date at which the task is due."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eDate\u003c/code\u003e at which the task is due."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the time at which the task is due."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eTime\u003c/code\u003e at which the task is due."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Time getTime() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the first letter of the task type."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \"D\"."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + (time.isNull() ? \"\" : \", \" + time) + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e that is an event. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a description about"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * the \u003ccode\u003eTask\u003c/code\u003e, the starting \u003ccode\u003eDate\u003c/code\u003e and optionally, starting \u003ccode\u003eTime\u003c/code\u003e, ending"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * \u003ccode\u003eDate\u003c/code\u003e and \u003ccode\u003eTime\u003c/code\u003e of the event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Date startDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Time startTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Date endDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Time endTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eEvent\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param description Details about the \u003ccode\u003eEvent\u003c/code\u003e task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param startDate Date on which the event starts."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param startTime Time at which the event starts."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param endDate Date on which the event ends."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param endTime Time at which the event ends."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Event(String description, Date startDate, Time startTime, Date endDate, Time endTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the starting date of the event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eDate\u003c/code\u003e on which the event starts."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Date getStartDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the starting time of the event."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eTime\u003c/code\u003e at which the event starts."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Time getStartTime() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the ending date of the event."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eDate\u003c/code\u003e on which the event ends."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Date getEndDate() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the ending time of the event."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eTime\u003c/code\u003e at which the event end."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Time getEndTime() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the first letter of the task type."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \"E\"."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        builder.append(\"[E]\" + super.toString() + \" (at: \" + startDate + (startTime.isNull() ? \"\" : \", \" + startTime));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if ((!endTime.isNull()) || (!endDate.isNull())) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(\" to\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (!endDate.isNull()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(\" \" + endDate);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (!endTime.isNull()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (!endDate.isNull()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                builder.append(\",\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(\" \" + endTime);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        builder.append(\")\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 92
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Abstract parent class of all specific types of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task that has to be done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param description Provided details of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the icon corresponding to the status of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Tick icon if task is completed and cross icon otherwise."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the provided details."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Provided details."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the task has been completed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if the task has been completed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the first letter of the task type."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e that has to be done. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a description about"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eTodo\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param description Details about the \u003ccode\u003eTodo\u003c/code\u003e task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the first letter of the task type."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \"T\"."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 28
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: aliceblue;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 19
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_bye() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new ExitCommand(), Parser.parse(\"bye\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_list() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new ListCommand(), Parser.parse(\"list\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_delete() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new DeleteCommand(2), Parser.parse(\"delete 2\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_done() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new DoneCommand(2), Parser.parse(\"done 2\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_todo_noExceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new AddTodoCommand(\"read book\"), Parser.parse(\"todo read book\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_todo_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Parser.parse(\"todo    \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a todo cannot be empty.\", exception.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_deadline() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new AddDeadlineCommand(\"homework /by 06/06/2019\"),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                Parser.parse(\"deadline homework /by 06/06/2019\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_event() throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new AddEventCommand(\"project meeting /at 06/06/2019 1800 /to 06/06/2019 1900\"),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                Parser.parse(\"event project meeting /at 06/06/2019 1800 /to 06/06/2019 1900\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_invalidCommand() throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Parser.parse(\"hey\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", exception.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 75
    }
  },
  {
    "path": "src/test/java/duke/calendar/DateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class DateTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_noExceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date date \u003d new Date(\"06/05/2019\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(\"6th of MAY 2019\", date.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_invalidMonth_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Date date \u003d new Date(\"06/14/2019\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please specify a valid month.\", exception.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_invalidDay_exceptionThrown() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Date date \u003d new Date(\"31/11/2019\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please specify a valid day.\", exception.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_invalidFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Date date \u003d new Date(\"11/2019\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please specify a date in the form day/month/year. E.g. 2/12/2019\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    exception.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 48
    }
  },
  {
    "path": "src/test/java/duke/calendar/TimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class TimeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processTime_noExceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time time \u003d new Time(\"0000\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(\"12am\", time.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_invalidMinute_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Time date \u003d new Time(\"1861\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please specify a valid time. \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    + \"Also ensure that you have specified the time in 24-hour clock convention E.g. 1800 \","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                            exception.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_invalidHour_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Time date \u003d new Time(\"2540\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please specify a valid time. \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    + \"Also ensure that you have specified the time in 24-hour clock convention E.g. 1800 \","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                            exception.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 42
    }
  }
]
