[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String deadline[];"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        deadline \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + deadline[1] + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        ArrayList\u003cTask\u003e storinglist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \"  ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String welcome \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + logo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + \"\\n Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + \" What can I do for you?\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        storinglist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    for (int x \u003d 0; x \u003c storinglist.size(); x++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        System.out.println(x + 1 + \". \" + storinglist.get(x));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    if (!command.contains(\" \")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        throw new IllegalCommandException(\"There must be a number after done.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String splitstring[] \u003d command.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    int taskdone \u003d Integer.valueOf(splitstring[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    storinglist.get(taskdone - 1).markasdone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" Nice! I\u0027ve marked this tasked as done:\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + storinglist.get(taskdone - 1)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" Bye. Hope to see you again soon!\\n\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    if (!command.contains(\" \")){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        throw new IllegalCommandException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String splitcommand[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    storinglist.add(new ToDos(splitcommand[1]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" Got it. I\u0027ve added this task:\\n\" + \"   \" + storinglist.get(storinglist.size()-1)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n Now you have \" + storinglist.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    if (!command.contains(\" \")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        throw new IllegalCommandException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String splitcommand[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String splitdeadline[] \u003d (splitcommand[1].split(\"/\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    storinglist.add(new Deadline(splitdeadline[0], splitdeadline[1]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" Got it. I\u0027ve added this task:\\n\" + \"   \" + storinglist.get(storinglist.size()-1)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n Now you have \" + storinglist.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    if (!command.contains(\" \")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        throw new IllegalCommandException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String splitcommand[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String splitevent[] \u003d (splitcommand[1].split(\"/\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    storinglist.add(new Events(splitevent[0], splitevent[1]));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" Got it. I\u0027ve added this task:\\n\" + \"   \" + storinglist.get(storinglist.size() - 1)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n Now you have \" + storinglist.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    if (!command.contains(\" \")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        throw new IllegalCommandException(\"Give a task to delete.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String splitcommand[] \u003d command.split(\" \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    int taskdelete \u003d Integer.valueOf(splitcommand[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"  \" + storinglist.get(taskdelete - 1));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    storinglist.remove(taskdelete - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"Now you have \" + storinglist.size()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" tasks in the list \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    throw new IllegalCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            } catch (IllegalCommandException errormsg) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                System.err.println(errormsg);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 104,
      "-": 8
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String event[];"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        event \u003d at.split(\" \", 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + event[1] + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 15
    }
  },
  {
    "path": "src/main/java/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "public class IllegalCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String errormessage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public IllegalCommandException (String errormessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.errormessage \u003d errormessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + \" OOPS!!! \" + this.errormessage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + \"\\n____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected Boolean isdone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.isdone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return (isdone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public void markasdone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        isdone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 22
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public ToDos (String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "  ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "   [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "deadline return book /by Sunday"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "java -classpath ../src/main/java Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 34
    }
  }
]
