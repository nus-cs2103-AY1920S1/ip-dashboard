[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " * Represents the attributes of a Deadline object, which is a sub-class of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Creates a Deadline object with a description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * The identity is also intialised as D, for all Deadline objects."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param description of the Deadline task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.identity \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Recovery of a Deadline object based on the format of a task in the Duke.txt file that we save our information into."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Whether the task is done or not depends on the int value of the task when it is saved."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param intDone if task is done, the int value \u003d\u003d 1. If the task is not done, int value \u003d\u003d 0."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public Deadline(int intDone, String description, String date) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        super(intDone, description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.identity \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        if (intDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Returns the string value of a Deadline object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return the identity of the Deadline task followed by the status icon and description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Returns a string value to be saved in the Duke.txt file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return a string in the Duke.txt file format for a Deadline object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public String toTextFile() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return this.identity + \" | \" + done + \" | \" + this.description + \" | \" + this.date;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " * Represents Duke, a personal assistant ChatBot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Initialises a new Duke object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @throws FileNotFoundException if file is not found."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @throws IOException if there is an issue reading the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public Duke() throws FileNotFoundException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.ui \u003d new UI();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.storage \u003d new Storage(\"../duke.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        ArrayList\u003cTask\u003e existing \u003d storage.readFileContents();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.taskList \u003d new TaskList(existing);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.storage.writeToFile(\"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Runs the program. It will start from here."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @throws IOException if there is an issue reading the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public static void main(String[] args) throws IOException  {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "       new Duke().run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Runs the program by prompting user to enter the command. The program will then carry out the program if the command"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * is valid. If not, it will throw a Duke exception."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @throws IOException if there is an issue reading the .txt file to recover the previous list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.ui.welcome();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        String command \u003d ui.promptEntry();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        ui.handleCommand(command, this.taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        //after all commands are done, we will save the updated list into the txt file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        ArrayList\u003cTask\u003e updated \u003d this.taskList.getList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        if (!updated.isEmpty()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            for (Task task : updated) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                if (storage.isFileEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        storage.writeToFile(task.toTextFile());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    storage.appendToFile(task.toTextFile());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.ui.goodbye();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 65,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " * Represents a class to implement a DukeException to throw errors related to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Creates a DukeException error object so it can be thrown and caught."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param errorMessage to be printed when an error occurs."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 16
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " * Represents the attributes of an Event object, which is a sub-class of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    protected String dateAndTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Creates an Event object with a description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * The identity is also intialised as E, for all Event objects."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param description of the Event task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.dateAndTime \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.identity \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Recovery of an Event object based on the format of a task in the Duke.txt file that we save our information into."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Whether the task is done or not depends on the int value of the task when it is saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param intDone if task is done, the int value \u003d\u003d 1. If the task is not done, int value \u003d\u003d 0."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public Event(int intDone, String description, String dateAndTime) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        super(intDone, description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.identity \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        if (intDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Returns the string value of an Event object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return the identity of the Event task followed by the status icon and description."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateAndTime + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Returns a string value to be saved in the Duke.txt file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return a string in the Duke.txt file format for an Event object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public String toTextFile() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return this.identity + \" | \" + done + \" | \" + this.description + \" | \" + this.dateAndTime;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 61
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " * Represents the storage object where the information will be stored in."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    private String file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Constructor of a storage object, initiating the file we are storing the information into."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param filepath the string value of the filepath of the duke.txt file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.file \u003d filepath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * This method will print the contents of the Storage object (file)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @throws FileNotFoundException if the file is not found based on the filepath."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public ArrayList\u003cTask\u003e readFileContents() throws FileNotFoundException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        File currentFile \u003d new File(this.file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        Scanner sc \u003d new Scanner(currentFile);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            String current \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            char type \u003d current.charAt(0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            int isDone \u003d Integer.parseInt(\"\" + current.charAt(4));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            String des \u003d current.substring(8).trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    ToDo newT \u003d new ToDo(isDone, des);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    list.add(newT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    int index \u003d des.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    String taskName \u003d des.substring(0, index).trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    String date \u003d des.substring(index + 1).trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    Deadline newD \u003d new Deadline(isDone, taskName, date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    list.add(newD);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    int index1 \u003d des.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    String taskName1 \u003d des.substring(0, index1).trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    String date1 \u003d des.substring(index1 + 1).trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    Event newE \u003d new Event(isDone, taskName1, date1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    list.add(newE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Checks if the file is empty. If it is empty, method will return true."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return a boolean on whether the file is empty or not."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public boolean isFileEmpty() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        File file \u003d new File(this.file);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return 0 \u003d\u003d file.length();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Writes to the duke.txt file and saves the information there. This method will overwrite the information"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * on the current Duke.txt file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param toAdd string pushed to the file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @throws IOException if there is an issue writing to the file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public void writeToFile(String toAdd) throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        fw.write(toAdd);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Appends to the duke.txt file and does not overwrite the current information on the Duke.txt file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param toAppend string to be appended to the list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @throws IOException if there is an error writing to the file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public void appendToFile(String toAppend) throws IOException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.file, true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        fw.write(System.lineSeparator() + toAppend);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 102
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " * Representing the attributes and behavior of a general Task. The abstract methods will be more specific for the child"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " * classes of the Task class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    protected char identity;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Creating a task object. It is the default for a task to be not done upon creation."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param description of the task being created."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Recovery of a task object based on the format of a task in the Duke.txt file that we save our information into."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Whether the task is done or not depends on the int value of the task when it is saved."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param intDone if task is done, the int value \u003d\u003d 1. If the task is not done, int value \u003d\u003d 0."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public Task(int intDone, String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        if (intDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Returns the status icon of the task. This is dependent on whether the task is done or not."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return the icon, which is a string value."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return isDone ? \"[\\u2713]\" : \"[\\u2718]\"; //return tick or X symbols"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.isDone \u003d !isDone;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Returns the string value of a Task object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return the status icon and description of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Returns a string to be saved in the Duke.txt file. It is an abstract method that needs to be implemented"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * by the sub classes."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return string value to be saved in the Duke.txt file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public abstract String toTextFile() ;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 72
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " * Represents a tasklist that will keep track of the tasks that the user enters."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " * It consists of methods that will add, delete and mark complete tasks in the current list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Creates a tasklist object by creating a new empty arraylist."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Creates a tasklist object with an existing list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param currentList of existing tasks reloaded from the duke.txt file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e currentList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.list \u003d currentList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Returns the current list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return the existing ArrayList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Adds a task to the list attribute of this TaskList object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param current the Task object to be added to the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public void addTask(Task current) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.list.add(current);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        if (list.size() \u003e 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \"   \" + current.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    \"Now you have \" + list.size() + \" tasks in the list. \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \"   \" + current.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    \"Now you have \" + list.size() + \" task in the list. \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Deletes a task off the list attribute of this TaskList object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param current the Task object to be deleted off the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public void deleteTask(int current) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        Task deleted \u003d list.get(current);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        list.remove(current);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        if (list.size() \u003e 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + \"   \" + deleted.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    \"Now you have \" + list.size() + \" tasks in the list. \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + \"   \" + deleted.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    \"Now you have \" + list.size() + \" task in the list. \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Marks the task to be completed. The method removes the task by referencing the task based on its position on the"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param taskNumber which is an integer, which refers to the position of the task in the current list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public void completeTask(int taskNumber) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        Task completed \u003d list.get(taskNumber);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        completed.markAsDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + \"   \" + completed);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Prints the current existing list of tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        int n \u003d 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            System.out.println(\"List is empty\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            for (Task item : list) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                System.out.println(n + \".\" + item);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                n++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Finds the existing list for tasks that have matching keywords."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param keyword that the user wants to find tasks with common word."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return a list of tasks that have the common keyword."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        for (Task current : this.list) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            String taskInString \u003d current.description;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            if (taskInString.toLowerCase().contains(keyword.toLowerCase())) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                list.add(current);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 129
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " * Represents the attributes of a ToDo object, which is a sub-class of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Creates a ToDo object with a description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * The identity is also intialised as T, for all ToDo objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param description of the ToDo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.identity \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Recovery of a ToDo object based on the format of a task in the Duke.txt file that we save our information into."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Whether the task is done or not depends on the int value of the task when it is saved."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param intDone if task is done, the int value \u003d\u003d 1. If the task is not done, int value \u003d\u003d 0."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public ToDo(int intDone, String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        super(intDone, description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.identity \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        if (intDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Returns the string value of a ToDo object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return the identity of the ToDo task followed by the status icon and description."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Returns a string value to be saved in the Duke.txt file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return a string in the Duke.txt file format for a ToDo object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public String toTextFile() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return this.identity + \" | \" + done + \" | \" + this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 58
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " * Represents the items that affect the user interface of the program and handles the interaction with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    protected boolean isRunning;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Creates a UI object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.isRunning \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Prints out a welcome statement when users first open the Duke program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        System.out.println(\"Hello I\u0027m\\n\" + logo + \"\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Prints out a goodbye statement when the users enter bye, before the program ends."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        this.isRunning \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Prompts the user to enter into the program."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return the string that the user entered."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public String promptEntry() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return sc.next();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Returns the formatted date and time. If it is in the wrong format, it will return the string entered."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param dateAndTime String value of the date and time."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @return the formatted date and time, if it is in the correct format of dd/MM/yyyy hhmm"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public static String getFormattedDate(String dateAndTime) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        String result \u003d dateAndTime;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(dateAndTime);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            String day \u003d new SimpleDateFormat(\"dd\").format(date);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            String month \u003d new SimpleDateFormat(\"MMMMMMMMMMMMMMM\").format(date);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            String year \u003d new SimpleDateFormat(\"yyyy\").format(date);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            String time \u003d new SimpleDateFormat(\"h:mm a\").format(date).toLowerCase();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            String ordinalIndicator;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            int int_day \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            if (int_day \u003e\u003d 11 \u0026\u0026 int_day \u003c\u003d 13) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                ordinalIndicator \u003d \"th\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            } else if (int_day % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                ordinalIndicator \u003d \"st\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            } else if (int_day % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                ordinalIndicator \u003d \"nd\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            } else if (int_day % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                ordinalIndicator \u003d \"rd\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                ordinalIndicator \u003d \"th\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            result \u003d int_day + ordinalIndicator + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * Handles the commands entered by the user."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param command that the user entered."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     * @param taskList the current tasklist, to be updated with every command."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    public void handleCommand (String command, TaskList taskList) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        taskList.printList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        String task \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        if (!task.isEmpty()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            ToDo newTodo \u003d new ToDo(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            taskList.addTask(newTodo);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        String wholeTask \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        int index \u003d wholeTask.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        if (index \u003e 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            //what the task is"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            String description \u003d wholeTask.substring(0, index).trim();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            //when it is due by"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            String date \u003d wholeTask.substring(index + 4).trim();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            String f \u003d getFormattedDate(date);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            if (description.isEmpty() || date.isEmpty()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\" +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                        \" It must be in the format \u003cdescription\u003e /by \u003cdate/time\u003e \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                Deadline newDeadlineTask \u003d new Deadline(description, f);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                taskList.addTask(newDeadlineTask);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\" +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                    \" It must be in the format \u003cdescription\u003e /by \u003cdate/time\u003e \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        String eventAndDate \u003d sc.nextLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        int index2 \u003d eventAndDate.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        if (index2 \u003e 0) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            //what the task is"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            String eventDescr \u003d eventAndDate.substring(0, index2).trim();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            //when it is due by"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            String dateAndTime \u003d eventAndDate.substring(index2 + 4).trim();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            String f1 \u003d getFormattedDate(dateAndTime);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            if (eventDescr.isEmpty() || dateAndTime.isEmpty()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\" +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                        \" It must be in the format \u003cdescription\u003e /at \u003cstart and end of specific time\u003e \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                Event newEventTask \u003d new Event(eventDescr, f1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                taskList.addTask(newEventTask);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\" +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                    \" It must be in the format \u003cdescription\u003e /at \u003cstart and end of specific time\u003e \");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        int taskToBeDeleted \u003d sc.nextInt() -1;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        taskList.deleteTask(taskToBeDeleted);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        int taskNumber \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        taskList.completeTask(taskNumber);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    case \"find\":"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        String keyword \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        ArrayList\u003cTask\u003e found \u003d taskList.find(keyword);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        int n \u003d 1;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        if (found.isEmpty()){"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            System.out.println(\"None found\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            for (Task item : found) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                System.out.println(n + \".\" + item);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                                n++;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "            command \u003d promptEntry();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        //code exits here when the user enters the command \"bye\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 200
    }
  },
  {
    "path": "src/test/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void toTextFile() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"test the code\", \"tonight\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(\"D | 0 | test the code | tonight\", newDeadline.toTextFile());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"I need to test the code\", \"tonight\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(\"[D]\" + \"[\\u2718]\" + \" \" + \"I need to test the code (by: tonight)\", newDeadline.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"I need to test the code\", \"tonight\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(\"[\\u2718]\", newDeadline.getStatusIcon());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"I need to test the code\", \"tonight\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        newDeadline.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(\"[\\u2713]\", newDeadline.getStatusIcon());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 32
    }
  },
  {
    "path": "src/test/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void Duke() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 12
    }
  },
  {
    "path": "src/test/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void toTextFile() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        Event newEvent \u003d new Event(\"project meeting\", \"7th May\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(\"E | 0 | project meeting | 7th May\", newEvent.toTextFile());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        Event newEvent \u003d new Event(\"project meeting\", \"7th May\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(\"[E]\" + \"[\\u2718]\" + \" \" + \"project meeting (at: 7th May)\", newEvent.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        Event newEvent \u003d new Event(\"project meeting\", \"7th May\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(\"[\\u2718]\", newEvent.getStatusIcon());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        Event newEvent \u003d new Event(\"project meeting\", \"7th May\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        newEvent.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(\"[\\u2713]\", newEvent.getStatusIcon());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 32
    }
  },
  {
    "path": "src/test/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void toTextFile() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        ToDo newTodo \u003d new ToDo(\"I need to test the code\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(\"T | 0 | I need to test the code\", newTodo.toTextFile());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "   void testToString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        ToDo newTodo \u003d new ToDo(\"I need to test the code\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(\"[T]\" + \"[\\u2718]\" + \" \" + \"I need to test the code\", newTodo.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "   }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "   @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        ToDo newToDo \u003d new ToDo(\"I need to test the code\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "        assertEquals(\"[\\u2718]\", newToDo.getStatusIcon());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "   }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "   @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "       ToDo newToDo \u003d new ToDo(\"I need to test the code\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "       newToDo.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "       assertEquals(\"[\\u2713]\", newToDo.getStatusIcon());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "   }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshuaseetss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshuaseetss": 33
    }
  }
]
