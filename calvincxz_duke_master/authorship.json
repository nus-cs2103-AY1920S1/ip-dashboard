[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 17,
      "-": 15
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Task taskToAdd;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public AddCommand(Task taskToAdd) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskToAdd \u003d taskToAdd;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileNotFoundException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ui.print(\"Got it. I\u0027ve added this task: \\n\" + taskToAdd + \"\\nNow you have \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                + tasks.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 16
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 10
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super.symbol \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Date getDate() throws ParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        DateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Date date \u003d format.parse(by);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 27
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    int taskNumToDelete;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public DeleteCommand(int taskNumToDelete) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskNumToDelete \u003d taskNumToDelete;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileNotFoundException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task t \u003d tasks.deleteTask(taskNumToDelete);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ui.print(\"Noted. I\u0027ve removed this task: \\n\" + t + \"\\nNow you have \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                + tasks.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 16
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    int taskNumToMark;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public DoneCommand(int taskNumToMark) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskNumToMark \u003d taskNumToMark;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileNotFoundException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        tasks.doneTask(taskNumToMark);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ui.print(\"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + tasks.getList().get(taskNumToMark - 1));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * The Duke program implements an application that"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * acts like a digital notebook for the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * @author  Calvin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * @since   2019-08-20"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This constructor takes in the filePath and initiates the necessary"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * classes required."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param filePath the local directory of the file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method runs the application"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void run() throws FileNotFoundException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This is the main method which makes use of run method."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @exception FileNotFoundException On file not found error."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @see FileNotFoundException"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        new Duke(\"C:\\\\duke\\\\src\\\\main\\\\java\\\\data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 66,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Date date1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Date date2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super.symbol \u003d \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void getDate() throws ParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String[] date_arr \u003d at.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        DateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Date date1 \u003d format.parse(date_arr[0]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Date date2 \u003d format.parse(date_arr[0]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date1.setHours(Integer.parseInt(date_arr[1]) / 100);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date1.setMinutes(Integer.parseInt(date_arr[1]) % 100);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date2.setHours(Integer.parseInt(date_arr[2]) / 100);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date2.setMinutes(Integer.parseInt(date_arr[2]) % 100);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 32
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileNotFoundException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        //tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ui.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 16
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileNotFoundException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ui.print(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (t.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                ui.print(t.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 19
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileNotFoundException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        //tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ui.printList(tasks.getList());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to parse the user command the task list from disk."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param  fullCommand command which is read as a string by the UI."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Command command which can be executed by application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String[] input \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (input[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else if (input[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else if (input[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            int num \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new DoneCommand(num);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else if (input[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            int num \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new DeleteCommand(num);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else if (input[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new FindCommand(input[1].trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (input[1].equals(\"\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                throw new DukeException(\"The description of a \" + input[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            switch (input[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    t \u003d new Todo(input[1].trim());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                case \"deadline\": {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    String[] str \u003d input[1].trim().split(\"/\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    t \u003d new Deadline(str[0], str[1].substring(3));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                case \"event\": {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    String[] str \u003d input[1].trim().split(\"/\", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    t \u003d new Event(str[0], str[1].substring(3));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new AddCommand(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 48
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to load the task list from disk."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return ArrayList\u003cTask\u003e task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Scanner sc1 \u003d new Scanner(file);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        while (sc1.hasNextLine()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            String[] oldList \u003d sc1.nextLine().split(\" / \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            //System.out.println(Arrays.toString(oldList));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (oldList[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                t \u003d new Todo(oldList[2].trim());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                if (oldList[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    t \u003d new Deadline(oldList[2].trim(), oldList[3].trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    t \u003d new Event(oldList[2].trim(), oldList[3].trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (oldList[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            list.add(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to update current items in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param list the current task list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void updateList(ArrayList\u003cTask\u003e list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        File file \u003d new File(\"C:\\\\duke\\\\src\\\\main\\\\java\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        PrintWriter out \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Task t \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (t.symbol.equals(\"T\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                out.println(t.symbol + \" / \" + (t.isDone ? 1 : 0) + \" / \" + t.getDescription());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                out.println(t.symbol + \" / \" + (t.isDone ? 1 : 0) + \" / \" + t.getDescription() + \" / \" + t.getExtraInfo());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        out.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 62
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    protected String symbol;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used return status icon of a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return String status icon"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used return description of a task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return String description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to return extra information such as"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * the time of a task (if any)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return String extra information"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getExtraInfo() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (symbol.equals(\"T\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else if (symbol.equals(\"E\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Event t \u003d (Event) this;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return t.at;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Deadline t \u003d (Deadline) this;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return t.by;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to mark a task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "calvincxz": 61
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This is a constructor for TaskList"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to return the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return ArrayList\u003cTask\u003e the task list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to add a task to the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param taskToAdd the task to add"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void addTask(Task taskToAdd) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        list.add(taskToAdd);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to delete a task to the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param taskNumToDelete the task number to delete"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Task deleteTask(int taskNumToDelete) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return list.remove(taskNumToDelete - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to mark a task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param taskNumToMark the task number to mark"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void doneTask(int taskNumToMark) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task t \u003d list.get(taskNumToMark - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 57
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super.symbol \u003d \"T\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 12
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to print loading error to user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        System.out.println(\"File cannot be loaded.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to print welcome message to user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        System.out.println(\"________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to read user command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return String This returns user command as a string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void print(String msg) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to print current items in the list to user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param list the current task list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Task t \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            System.out.println(i + \".\" + t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to print welcome message to user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 64
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "T / 1 / read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "D / 1 / return book / June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "E / 1 / project meeting / Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "T / 0 / read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "T / 0 / aaaa"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "E / 0 / aaa / asds"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "T / 0 / readb"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 7
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void testGetList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        TaskList list \u003d new TaskList(test);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(test, list.getList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void testAddList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        test.add(new Task(\"x\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        TaskList list \u003d new TaskList(test);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(test, list.getList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 23
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(\"[T][\\u2718] todo\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                new Todo(\"todo\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "calvincxz": 15
    }
  }
]
