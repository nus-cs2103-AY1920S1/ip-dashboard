[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "D | 1 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "D | 0 | duker | times square"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Exception.IncorrectTaskNameException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Exception.EmptyDeadlineDescriptionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Exception.EmptyEventDescriptionException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Exception.EmptyTodoDescriptionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Util.Parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Util.Storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Util.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * Represents the main class for the project where the main method will run"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public static ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Constructs a Duke object which will initialise 1)storage, 2)tasks 3)Ui class.."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param filePath is the file directory for where duke.txt is saved"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public Duke(String filePath) throws Exception, DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            tasks \u003d new TaskList(storage.readFile());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            ui \u003d new Ui(tasks, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            throw new DukeException(\"File is empty\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * runs the Ui read input to take in data from user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void run() throws Exception{"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        ui.readInput();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        storage.closeFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 54,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * Handles basic Exceptions of the Duke Project"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 11
    }
  },
  {
    "path": "src/main/java/Exception/EmptyDeadlineDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * Handles Empty Deadline Description Exceptions of the Duke Project"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class EmptyDeadlineDescriptionException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public EmptyDeadlineDescriptionException(String errorMessage){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 11
    }
  },
  {
    "path": "src/main/java/Exception/EmptyEventDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * Handles Empty Event Descriptions Exceptions of the Duke Project"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class EmptyEventDescriptionException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public EmptyEventDescriptionException(String errorMessage){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Berttwm": 13
    }
  },
  {
    "path": "src/main/java/Exception/EmptyTodoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * Handles Empty Todo Descriptions Exceptions of the Duke Project"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class EmptyTodoDescriptionException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public EmptyTodoDescriptionException(String errorMessage){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 11
    }
  },
  {
    "path": "src/main/java/Exception/IncorrectTaskNameException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * Handles Incorrect Task Name Exceptions of the Duke Project"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class IncorrectTaskNameException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public IncorrectTaskNameException(String errorMessage){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 11
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * An object of a Deadline task which is also a child of a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Creates an instance of a Deadline task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param by is the date/time of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Getter for the by method"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @return a String of the by variable"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * overrides toString method"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @return formatted Deadline object (i.e. [D][O] task1 (by: tonight)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 39
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * An object of an Event task which is also a child of a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Creates an instance of an Event task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param at is the date/time of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Getter for the at method"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @return a String of the at variable"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * overrides toString method"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @return formatted Event object (i.e. [D][O] task1 (by: tonight)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 39
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * An object of a Task task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Creates an instance of a Task task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Checks if the task if done. returns a string representing the state of"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * object \"done-ness\"."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @return \"O\" if task is done and \"X\" if task is not done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        return (isDone ? \"O\" : \"X\"); //O represents tick and X represents cross as it doesn\u0027t work for me"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Marks object as done regardless of whether it was already done or not."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void doneJob(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Getter for Task object description"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @return description of task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Setter for Task object descriptions"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param description refers to description of task object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Overrides toString method"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @return String of task object. (i.e. \"[O] do task\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 64
    }
  },
  {
    "path": "src/main/java/Tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * Acts as a list of tasks which can be manipulated through"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * create/read/delete/update operations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Constructor for TaskList object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param taskList is the ArrayList of tasks going to be stored"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Adds more tasks into TaskList once at a time"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param task to be stored"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Deletes 1 task from TaskList"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param itemNum is the index of the task to be deleted"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void deleteTask(int itemNum) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"  \" + taskList.get(itemNum));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        taskList.remove(itemNum);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Marks 1 task from TaskList as done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param itemNum is the index of the task to be marked as done"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void markTaskDone(int itemNum) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        taskList.get(itemNum).doneJob();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"  \" + taskList.get(itemNum));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Iterates though TaskList and provides a list of tasks stored."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void showAllTasks() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            System.out.print((i + 1) + \".\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            System.out.println(taskList.get(i));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            continue;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Getter for ArrayList of Tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @return ArrayList of Tasks"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Setter for ArrayList of Tasks"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * ArrayList of Tasks stored into TaskList"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void setTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 85
    }
  },
  {
    "path": "src/main/java/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * An object of a Todo task which is also a child of a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Creates an instance of a Todo task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param by is the date/time of the task. This"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * will be blank for a Todo task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public Todo(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * overrides toString method"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @return formatted Todo object (i.e. [D][O] task1 (by: tonight)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 31
    }
  },
  {
    "path": "src/main/java/Util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 10
    }
  },
  {
    "path": "src/main/java/Util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * Storage class to handle all interactions between saving, reading and writing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * the file onto local disk. The interactions will be based on what is stored on"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * TaskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private PrintWriter pw;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private BufferedWriter bw;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private FileWriter fw;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private ArrayList\u003cTask\u003e storedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Constructs a Storage object to interact with given file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param filePath represents the file path/directory for which the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * writer/reader interacts with"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public Storage(String filePath) throws Exception{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            if(!file.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            scanner \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            System.out.println(\"Error in reading file\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        fw \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Reads all data from the file filePath"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @return ArrayList of tasks to be stored under TaskList"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public ArrayList\u003cTask\u003e readFile() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            String str \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            String[] strArr \u003d str.split(\" \\\\| \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            for(int i \u003d 0; i\u003cstrArr.length; i++){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    //for Todo"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    if (strArr[i].equals(\"T\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        Todo task \u003d new Todo(strArr[2], \"by\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        if(strArr[1].equals(\"1\")) task.doneJob();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        storedList.add(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    //for Deadline"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    if (strArr[i].equals(\"D\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        Deadline task \u003d new Deadline(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        if(strArr[1].equals(\"1\")) task.doneJob();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        storedList.add(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    //for Event"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    if (strArr[i].equals(\"E\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        Event task \u003d new Event(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        if(strArr[1].equals(\"1\")) task.doneJob();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        storedList.add(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        return storedList;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Closes off both the scanner and printwrite instances."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void closeFile() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Deletes the file in filePath and rewrites the entire file through iterating"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * the inputted TaskList"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param taskList is the object for which the method will get data from"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void rewriteWriter(TaskList taskList) throws Exception{"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            Task task \u003d taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            String taskType \u003d taskList.getTaskList().get(i).toString().substring(1,2) +\" | \";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            String doneType \u003d \"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            if(taskList.getTaskList().get(i).toString().substring(4,5).equals(\"O\")) doneType \u003d \"1 | \";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            else doneType \u003d \"0 | \";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            String after \u003d taskList.getTaskList().get(i).toString().substring(7);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            String desc \u003d taskList.getTaskList().get(i).getDescription();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            String atby \u003d \"\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            if(taskList.getTaskList().get(i) instanceof Todo) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                atby \u003d \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            } else if(taskList.getTaskList().get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                String[] strArr \u003d after.split(\" \\\\(by:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                atby \u003d \" |\" + strArr[1].replace(\")\", \"\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            } else if(taskList.getTaskList().get(i) instanceof Event) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                String[] strArr \u003d after.split( \" \\\\(at:\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                atby \u003d \" |\" + strArr[1].replace(\")\", \"\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                throw new DukeException(\"task instance not declared yet\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            if(i !\u003d 0) str +\u003d \"\\n\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            str +\u003d taskType + doneType + desc + atby;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        fw \u003d new FileWriter(new File(this.filePath), false);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(str);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.flush();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        fw \u003d new FileWriter(new File(this.filePath), true);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Write a Todo task into the file from filePath"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param task the Todo task which will be analysed"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void writeTodo(Task task) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String status \u003d \"\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        if(task.getStatusIcon().equals(\"O\")) status \u003d \"1\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        else status \u003d \"0\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.println();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(\"T | \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(status + \" | \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(task.getDescription());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.flush();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Write a Deadline task into the file from filePath"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param task the Deadline task which will be analysed"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void writeDeadline(Deadline task) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String status \u003d \"\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        if(task.getStatusIcon().equals(\"O\")) status \u003d \"1\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        else status \u003d \"0\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.println();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(\"D | \");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(status + \" | \");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(task.getDescription() + \" | \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(task.getBy());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.flush();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Write a Event task into the file from filePath"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param task the Event task which will be analysed"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void writeEvent(Event task) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String status \u003d \"\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        if(task.getStatusIcon().equals(\"O\")) status \u003d \"1\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        else status \u003d \"0\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.println();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(\"D | \");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(status + \" | \");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(task.getDescription() + \" | \");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.print(task.getAt());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        pw.flush();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 183
    }
  },
  {
    "path": "src/main/java/Util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Exception.IncorrectTaskNameException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Exception.EmptyDeadlineDescriptionException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Exception.EmptyEventDescriptionException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import Exception.EmptyTodoDescriptionException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * Handles the User Interface for the program where the user will interact with"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * by inputting data into the console. The class will then take this input and"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " * interact with the associated TaskList and Storage classes"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Berttwm"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private TaskList tasksList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * To store the several suffixed that will be used in a month starting from"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * 0 ending at 31. (i.e 2nd, 11th, 23rd)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    static String[] suffixes \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            { \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    \"th\", \"st\" };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public Ui(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        this.tasksList \u003d taskList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * take in input from user and then perform relevant methods to read/write"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * into local storage and save into TaskList"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Takes in only the follow inputs (bye, list, done, delete, todo, deadline, event)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void readInput() throws Exception, DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        showWelcome();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        while(scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            if(input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                showExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            if(input.equals(\"list\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                tasksList.showAllTasks();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            if((input.length() \u003e 5) \u0026\u0026 input.substring(0, 5).equals(\"done \")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                showDone(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            if((input.length() \u003e 7) \u0026\u0026 input.substring(0, 7).equals(\"delete \")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                showDelete(input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            if((input.length() \u003e 5) \u0026\u0026 input.substring(0, 5).equals(\"find \")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                showFind(input);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                // just to catch wrong input"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    input.substring(0,4).equals(\"todo\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    input.substring(0,8).equals(\"deadline\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    input.substring(0,5).equals(\"event\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                } catch(Exception e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                //handles the todo, deadline and event tasks"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                if(input.substring(0,4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        input.substring(5,6);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    } catch(Exception e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, todo cannot be empty\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    showTodo(input);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                if(input.substring(0,8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        input.substring(9,10);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    } catch (Exception e){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    showDeadline(input);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                if(input.substring(0,5).equals(\"event\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        input.substring(6,7);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    } catch (Exception e){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    showEvent(input);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * shows Welcome message when called"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * shows Exit message when called"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * shows done message when called and performs rewrite on storage"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * and done on that task in TaskList"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void showDone(String input) throws Exception{"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        int itemIndex \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        // close if item number don\u0027t exist"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        if((itemIndex + 1) \u003e tasksList.getTaskList().size()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            System.out.println(\"failed to done item, please try again\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            tasksList.markTaskDone(itemIndex);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            storage.rewriteWriter(tasksList);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * shows delete message when called and performs rewrite on storage"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * and delete that task from TaskList"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void showDelete(String input) throws Exception{"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        int itemIndex \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        if((itemIndex + 1) \u003e tasksList.getTaskList().size()) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            System.out.println(\"failed to delete item, please try again.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            System.out.println(\"  \" + tasksList.getTaskList().get(itemIndex));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            tasksList.getTaskList().remove(itemIndex);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            storage.rewriteWriter(tasksList);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            System.out.println(\"Now you have \" + tasksList.getTaskList().size() + \" in the list.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * shows todo message when called and performs read on storage"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * and appends a todo task in TaskList"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void showTodo(String input){"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String inputAdd \u003d input.substring(5);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        Todo todo \u003d new Todo(inputAdd, \"\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        tasksList.addTask(todo);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        storage.writeTodo(todo);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"  \" + todo);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * shows deadline message when called and performs read on storage"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * and appends a deadline task in TaskList"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void showDeadline(String input) throws Exception{"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String inputAddArr[] \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String inputAdd1 \u003d inputAddArr[0].substring(9);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String inputAdd2 \u003d readDate(inputAddArr[1]);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        Deadline deadline \u003d new Deadline(inputAdd1, inputAdd2);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        tasksList.addTask(deadline);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        storage.writeDeadline(deadline);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"  \" + deadline);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * shows event message when called and performs read on storage"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * and appends a event task in TaskList"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void showEvent(String input) throws Exception{"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String inputAddArr[] \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String inputAdd1 \u003d inputAddArr[0].substring(6);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String inputAdd2 \u003d readDate(inputAddArr[1]);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        Event event \u003d new Event(inputAdd1, inputAdd2);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        tasksList.addTask(event);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        storage.writeEvent(event);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(\"  \" + event);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * Reads an input in the stipulated format and returns a string of the"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * expected date format"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @param input format of date input (i.e 2/12/2019 1800)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     * @return a string of a formatted Date. (i.e 2nd of December 2019, 1800hours)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public String readDate(String input) throws Exception{"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        DateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        Date d \u003d formatter.parse(input);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        DateFormatSymbols dfs \u003d new DateFormatSymbols();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        System.out.println(d);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String[] dateArr \u003d d.toString().split(\" \");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String day \u003d ((d.getDay() + 1) + suffixes[d.getDay() + 1]);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String month \u003d (dfs.getMonths()[d.getMonth()]);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String year \u003d (dateArr[5]);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String incorrectTime \u003d dateArr[3].substring(0, 5).replace(\":\", \"\").trim();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        return day + \" of \" + month + \" \" + year + \", \" + incorrectTime + \"hours\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void showFind(String input) throws Exception {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String toMatch \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        TaskList tempTaskList \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        for(int i \u003d 0; i \u003c tasksList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            String desc \u003d tasksList.getTaskList().get(i).getDescription();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            if((toMatch.length() \u003c desc.length()) \u0026\u0026 desc.contains(toMatch)) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                tempTaskList.addTask(tasksList.getTaskList().get(i));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        for(int i \u003d 0; i \u003c tempTaskList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            System.out.print((i + 1) + \".\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "            System.out.println(tempTaskList.getTaskList().get(i));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 244
    }
  },
  {
    "path": "src/test/java/Tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        Deadline test1 \u003d new Deadline(\"do job\", \"7pm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String output1 \u003d test1.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        assertEquals(\"[D][O] do job (by: 7pm)\" ,output1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        Deadline test2 \u003d new Deadline(\"do nothing\", \"8pm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String output2 \u003d test2.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        assertEquals(\"[D][O] do nothing (by: 8pm)\" ,output2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 19
    }
  },
  {
    "path": "src/test/java/Tasks/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        Todo test1 \u003d new Todo(\"do job\", \"7pm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String output1 \u003d test1.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        assertEquals(\"[T][O] do job\" ,output1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        Todo test2 \u003d new Todo(\"do nothing\", \"8pm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        String output2 \u003d test2.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "        assertEquals(\"[T][O] do nothing\" ,output2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Berttwm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Berttwm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Berttwm": 20
    }
  }
]
