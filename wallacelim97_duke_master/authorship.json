[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 29,
      "-": 12
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.user.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * A simple chatbot which provides basic to-do-list functions"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * @author  Wallace Lim"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private String filePath \u003d \"src\\\\main\\\\java\\\\data\\\\tasks.txt\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Sole constructor, loads previously stored tasks if available"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        storage \u003d new Storage(this.filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            this.tasks \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        storage \u003d new Storage(this.filePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        String dukeText \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                ui.lnBreak(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 189,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"Launching\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"Launched\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 49
    }
  },
  {
    "path": "src/main/java/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "T/false/read books/null"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "E/false/reading club /12-12-2129 0900"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 2
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.user.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    String dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public AddDeadlineCommand(String description, String dateTime) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ui.confirmDeadlineAdded(tasks.addTask(new Task(\u0027D\u0027, description, dateTime)), tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 28
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.user.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    String dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public AddEventCommand(String description, String dateTime) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ui.confirmEventAdded(tasks.addTask(new Task(\u0027E\u0027, description, dateTime)), tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 29
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.user.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    String todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public AddTodoCommand(String todo) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        if (todo.equals(\"\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            throw new DukeException(\"    ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.todo \u003d todo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ui.confirmTodoAdded(tasks.addTask(new Task(\u0027T\u0027, this.todo)), tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 31
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.user.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * Interface to be implemented by various user commands"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    abstract public void execute (TaskList tasks, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 15
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.user.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    int idx;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public DeleteCommand(int idx) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ui.confirmDelete(tasks.delete(idx));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.user.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ui.sayBye();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 18
    }
  },
  {
    "path": "src/main/java/duke/command/FaultyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.user.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class FaultyCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    DukeException e;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public FaultyCommand(DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.e \u003d e;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ui.showError(e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 26
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.user.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    String toFind;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public FindCommand(String toFind) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.toFind \u003d toFind;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        TaskList matched \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        for (Task t : tasks.getTasks()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            if (t.getDescription().contains(this.toFind) || t.getDetails().contains(this.toFind)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                matched.addTask(t);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ui.listTasks(matched);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.user.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ui.listTasks(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 18
    }
  },
  {
    "path": "src/main/java/duke/command/SetDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.user.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class SetDoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    int idx;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public SetDoneCommand(int idx) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        ui.confirmDone(tasks.getTask(this.idx).setDone());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 25
    }
  },
  {
    "path": "src/main/java/duke/data/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * This class is responsible for loading previously stored tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Loads previously stored task list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * @return The task list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * @throws FileNotFoundException if file cannot be found"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public TaskList loadTasks () throws FileNotFoundException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        File f \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        Scanner fs \u003d new Scanner(f);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        while(fs.hasNextLine()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            String[] task \u003d fs.nextLine().split(\"/\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            char type \u003d task[0].charAt(0);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            boolean done \u003d task[1].equals(\"true\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            String desc \u003d task[2];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            if (type \u003d\u003d \u0027e\u0027 || type \u003d\u003d \u0027d\u0027) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                String det \u003d task[3];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                list.addTask(new Task(type, done, desc, det));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                list.addTask(new Task(type, done, desc));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Updates the file where tasks are stored to sync with the latest task list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * @param list User\u0027s task list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * @throws IOException If file cannot be written over"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void saveTasks(TaskList list) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        FileWriter f \u003d new FileWriter(this.filepath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        for (Task t : list.getTasks()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            f.write(String.format(\"%c/%s/%s/%s\\n\", t.getType(), t.isDone(), t.getDescription(), t.getDetails()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        f.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 60
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * Exception for when user input is invalid"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class DukeException extends InputMismatchException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 19
    }
  },
  {
    "path": "src/main/java/duke/object/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.object;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * Represents a user\u0027s task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private char type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public Task(char type, String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public Task(char type, String description, String details) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(details, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public Task(char type, boolean done, String description) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public Task(char type, boolean done, String description, String details) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return (isDone ? \"O\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public Task setDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return this.details;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public char getType () {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public boolean isDone () {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        if (this.details \u003d\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            return String.format(\"[%c][%s] %s\", this.type, this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        } else if (this.type \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            return String.format(\"[%c][%s] %s at %s\", this.type, this.getStatusIcon(), this.description, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\").format(this.dateTime));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            return String.format(\"[%c][%s] %s by %s\", this.type, this.getStatusIcon(), this.description, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\").format(this.dateTime));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 78
    }
  },
  {
    "path": "src/main/java/duke/object/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.object;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * Represents a user\u0027s task list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public Task addTask(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public Task getTask(int idx) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return this.tasks.get(idx);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void setDone(int idx) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        this.tasks.get(idx).setDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public Task delete(int idx) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return this.tasks.remove(idx);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        StringBuilder ls \u003d new StringBuilder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            ls.append(String.format(\"    %d. %s\\n\", i, this.tasks.get(i - 1)));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return ls.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 51
    }
  },
  {
    "path": "src/main/java/duke/user/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.object.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * This class is responsible for printing output in the user\u0027s console"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    static final String lnBreak \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Displays a welcome message"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        return this.sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Displays an exit message"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void sayBye() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void listTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.print(tasks.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void confirmDone(Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    \" + task.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void confirmTodoAdded(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task:\\n    \" + task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    You now have \" + taskList.getSize() + \" tasks.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void confirmDeadlineAdded(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this deadline:\\n    \" + task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    You now have \" + taskList.getSize() + \" tasks.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void confirmEventAdded(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this event:\\n    \" + task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    You now have \" + taskList.getSize() + \" tasks.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void confirmDelete(Task task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void sayEmptyList() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(\"    \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void showError(DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(e.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public void lnBreak() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        System.out.println(lnBreak);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 98
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.command.SetDoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.command.FaultyCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " * This class is responsible for parsing user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * Parses user input and returns a Command object accordingly"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * @param input User\u0027s input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     * @return appropriate Command object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        String[] command \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        switch (command[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            int idx \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            return new SetDoneCommand(idx);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                return new AddTodoCommand(command[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                return new FaultyCommand(new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                String[] dl \u003d command[1].split(\"/\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                return new AddDeadlineCommand(dl[0], dl[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                return new FaultyCommand(new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                String[] ev \u003d command[1].split(\"/\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                return new AddEventCommand(ev[0], ev[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                return new FaultyCommand(new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                int i \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                return new DeleteCommand(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                return new FaultyCommand(new DukeException(\"☹ OOPS!!! Please specify which task to delete.\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                return new FindCommand(command[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                return new FaultyCommand(new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            return new FaultyCommand(new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 72
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 19
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "javac -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wallacelim97"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "wallacelim97": 23
    }
  }
]
