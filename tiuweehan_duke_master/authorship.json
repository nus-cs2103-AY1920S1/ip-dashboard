[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    mainClassName \u003d \"duke.Main\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 26,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.commands.EventCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.commands.TodoCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.consoles.Console;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.consoles.CliConsole;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.enums.CommandEnum;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.TextStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * The entry point to the Duke program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param args The input arguments to the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Declare an Console interface"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Console console \u003d new CliConsole();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Print the introduction"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        console.print(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Declare a scanner to read the input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Storage storage \u003d new TextStorage(\"./duke_data.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Declare an array to store the list of messages"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        List\u003cTask\u003e tasks \u003d storage.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Read Eval Print Loop"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        replLoop:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // Read the next line and trim the whitespaces around it"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                String line \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // Get all inputs by splitting on a whitespaces delimiter"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                String[] inputs \u003d line.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // If there are no inputs, skip the current loop iteration and wait for another input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                if (inputs.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // Declaring and initializing variables for use in switch statement"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                String[] details \u003d new String[] {};"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Task newTask \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                int index \u003d -1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // The first value in the inputs array is the command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // Retrieve the command and get its enum value."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // Throw a DukeException if there is no corresponding enum value."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                CommandEnum commandEnum \u003d null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    commandEnum \u003d CommandEnum.valueOf(inputs[0].toUpperCase());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Command command \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                switch (commandEnum) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    command \u003d new ByeCommand(line, console, storage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break replLoop;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    command \u003d new ListCommand(line, console, storage, tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    command \u003d new DoneCommand(line, console, storage, tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    command \u003d new DeleteCommand(line, console, storage, tasks);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    command \u003d new TodoCommand(line, console, storage, tasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    command \u003d new DeadlineCommand(line, console, storage, tasks);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    command \u003d new EventCommand(line, console, storage, tasks);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // Execute the command"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                console.print(e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 105,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/commands/BasicCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.consoles.Console;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public abstract class BasicCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected String line;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected Console console;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected BasicCommand(String line, Console console, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.console \u003d console;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Gets all inputs for the command in the form of a string array."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return all the inputs for the command in the form of a string array."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected String[] getInputs() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return this.line.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public abstract void execute() throws DukeException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Checks if the input array has the correct number of arguments."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param inputs The inputs array."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param correctNumberOfArguments The correct number of arguments for the command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException The error that is thrown when command array has the wrong number of arguments."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected static void checkIfCorrectNumberOfArguments("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            String[] inputs,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            int correctNumberOfArguments"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        int numberOfArguments \u003d inputs.length - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (numberOfArguments \u003c correctNumberOfArguments) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Insufficient arguments for this command.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } else if (numberOfArguments \u003e correctNumberOfArguments) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There are too many arguments for this command.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 48
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.consoles.Console;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class ByeCommand extends BasicCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public ByeCommand(String line, Console console, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line, console, storage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d getInputs();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        checkIfCorrectNumberOfArguments(inputs,0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Print a message before closing Duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        console.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute() throws DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 7
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.consoles.Console;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DeadlineCommand extends TaskCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public DeadlineCommand(String line, Console console, Storage storage, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line, console, storage, tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there is no input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (line.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Split the line by a regex and store the information in the details"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] details \u003d line.split(\"deadline\\\\s*\", 2)[1].split(\"\\\\s+/by\\\\s+\", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if input is invalid"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (details.length \u003c 2 || details[0].isEmpty() || details[1].isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description or the deadline for this task is empty.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Create a new task using the information stored in details"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Task task \u003d new DeadlineTask(details[0], details[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Add the new task to the list of tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Print a message confirming the addition of the task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        console.print("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Now you have \" + getNumberOfTasks() + \" tasks in the list.\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 45
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.consoles.Console;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DeleteCommand extends TaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public DeleteCommand(String line, Console console, Storage storage, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line, console, storage, tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d getInputs();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        checkIfCorrectNumberOfArguments(inputs, 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Get the index of the task in the list of tasks and remove the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if the argument is not a number or if there is no task at given index."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            index \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            newTask \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The argument should be a number.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no task at that index.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Print a message confirming that the task is removed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        console.print("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Noted. I\u0027ve removed this task: \","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                newTask.toString(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 44
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.consoles.Console;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DoneCommand extends TaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public DoneCommand(String line, Console console, Storage storage, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line, console, storage, tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d getInputs();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        checkIfCorrectNumberOfArguments(inputs, 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Get the index of the task in the list of tasks and retrieve the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if the argument is not a number or if there is no task at given index."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            index \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The argument should be a number.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no task at that index.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Print a message confirming that the task is marked as done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        console.print("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Nice! I\u0027ve marked this task as done: \","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                tasks.get(index).toString()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 42
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.consoles.Console;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.EventTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.EventWithEndDateTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class EventCommand extends TaskCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public EventCommand(String line, Console console, Storage storage, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line, console, storage, tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there is no input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (line.equals(\"event\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Split the line by a regex and store the information in the details"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] details \u003d line.split(\"event\\\\s*\", 2)[1].split(\"\\\\s+/at\\\\s+\", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if input is invalid"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (details.length \u003c 2 || details[0].isEmpty() || details[1].isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description or the date \u0026 time for this task is empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] dateTimes \u003d details[1].split(\"\\\\s+/to\\\\s+\", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Create a new task using the information stored in details"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Task task \u003d dateTimes.length \u003d\u003d 1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            ? new EventTask(details[0], dateTimes[0])"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            : new EventWithEndDateTask(details[0], dateTimes[0], dateTimes[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Add the new task to the list of tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Print a message confirming the addition of the task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        console.print("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Now you have \" + getNumberOfTasks() + \" tasks in the list.\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 51
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.consoles.Console;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class ListCommand extends TaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public ListCommand(String line, Console console, Storage storage, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line, console, storage, tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d getInputs();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        checkIfCorrectNumberOfArguments(inputs, 0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Print the list of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        printTasks(tasks, console);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Prints an list of tasks to a console."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param tasks The list of tasks to be printed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param console The console that the list of tasks should be printed to."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected static void printTasks(List\u003cTask\u003e tasks, Console console) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Create a new String array to store the lines"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] lines \u003d new String[tasks.size()];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            // Each line is prefixed with the item number"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            lines[i] \u003d (i + 1) + \".\" + tasks.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        console.print(lines);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 41
    }
  },
  {
    "path": "src/main/java/duke/commands/TaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.consoles.Console;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public abstract class TaskCommand extends BasicCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TaskCommand(String line, Console console, Storage storage, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line, console, storage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Gets the number of tasks in the list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return The number of tasks in the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected int getNumberOfTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public abstract void execute() throws DukeException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.consoles.Console;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.TodoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class TodoCommand extends TaskCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TodoCommand(String line, Console console, Storage storage, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line, console, storage, tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there is no input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (line.equals(\"todo\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Split the line by a regex and store the information in the details"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] details \u003d line.split(\"todo\\\\s*\", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Create a new task using the information stored in details"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Task task \u003d new TodoTask(details[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Add the new task to the list of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Print a message confirming the addition of the task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        console.print("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Now you have \" + getNumberOfTasks() + \" tasks in the list.\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 41
    }
  },
  {
    "path": "src/main/java/duke/consoles/CliConsole.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.consoles;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class CliConsole implements Console {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Prints an output to the command line including both the wrapper and the messages,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * separated by a newline. The wrapper adds a line to the top and bottom of the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * message and adds tab indentation."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param lines An array of messages to be wrapped."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void print(String...lines) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        for (String line: lines) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            System.out.println(\"\\t \" + line);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 18
    }
  },
  {
    "path": "src/main/java/duke/consoles/Console.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.consoles;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public interface Console {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Prints an output to the console."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param lines An array of messages to be wrapped."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void print(String...lines);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 10
    }
  },
  {
    "path": "src/main/java/duke/enums/CommandEnum.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.enums;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public enum CommandEnum {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    EVENT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 11
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private static final SimpleDateFormat DATE_FORMATTER \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Converts a string of format \"dd/MM/yyyy HH:mm\" into a java Date object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param dateTimeString An input string in the format dd/MM/yyyy HH:mm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return A datetime corresponding to the input string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException if the input dateTimeString is invalid"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static Date parseDateTime(String dateTimeString) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return DATE_FORMATTER.parse(dateTimeString);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"Invalid Date Time format! Format should be: dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static String convertDateTimeToString(Date date) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return DATE_FORMATTER.format(date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 30
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public interface Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void store(List\u003cTask\u003e tasks) throws DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public List\u003cTask\u003e load();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 14
    }
  },
  {
    "path": "src/main/java/duke/storage/TextStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.EventTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.EventWithEndDateTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.tasks.TodoTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class TextStorage implements Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected String fileLocation;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TextStorage(String fileLocation) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.fileLocation \u003d fileLocation;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void store(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            FileWriter fw \u003d new FileWriter(fileLocation);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                fw.write(task.toStorageFormat() + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"Cannot store tasks\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            String content \u003d Files.readString(Paths.get(fileLocation), StandardCharsets.US_ASCII);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            for (String taskStorageFormat : content.split(\"\\n\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                String[] taskDetails \u003d taskStorageFormat.split(\" \\\\| \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                switch (taskDetails[0]) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    task \u003d new TodoTask(taskDetails[2]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    task \u003d new DeadlineTask(taskDetails[2], taskDetails[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    if (taskDetails.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                        task \u003d new EventTask(taskDetails[2], taskDetails[3]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                        task \u003d new EventWithEndDateTask(taskDetails[2], taskDetails[3], taskDetails[4]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    throw new IOException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 75
    }
  },
  {
    "path": "src/main/java/duke/tasks/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    Date dueDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public DeadlineTask(String description, String dueDateTime) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.dueDateTime \u003d Parser.parseDateTime(dueDateTime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toStorageFormat() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return String.join("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \" | \","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            new String[] {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"D\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                getIsDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                super.description,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Parser.convertDateTimeToString(dueDateTime)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + Parser.convertDateTimeToString(dueDateTime) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 34
    }
  },
  {
    "path": "src/main/java/duke/tasks/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected Date startDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public EventTask(String description, String startDateTime) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.startDateTime \u003d Parser.parseDateTime(startDateTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toStorageFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return String.join("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \" | \","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            new String[] {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"E\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                getIsDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                super.description,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Parser.convertDateTimeToString(startDateTime) }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return \"[E]\" + getDetails() + \" (at: \" + Parser.convertDateTimeToString(startDateTime) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 32
    }
  },
  {
    "path": "src/main/java/duke/tasks/EventWithEndDateTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.commands.TaskCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class EventWithEndDateTask extends EventTask {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected Date endDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Constructor for the EventWithEndDateTask class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param startDateTime The start date \u0026 time of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param endDatetime The end date \u0026 time of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException If the start date \u0026 time is after the end date \u0026 time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public EventWithEndDateTask(String description, String startDateTime, String endDatetime) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(description, startDateTime);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.endDateTime \u003d Parser.parseDateTime(endDatetime);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (startDateTime.compareTo(endDatetime) \u003e 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"Start date \u0026 time cannot be after end date \u0026 time!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toStorageFormat() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return String.join("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \" | \","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            new String[] {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"E\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                getIsDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                super.description,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Parser.convertDateTimeToString(startDateTime),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Parser.convertDateTimeToString(endDateTime)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return \"[E]\" + getDetails() + \" (from: \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            + Parser.convertDateTimeToString(startDateTime) + \" to \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            + Parser.convertDateTimeToString(endDateTime) + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 48
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Checks if the task is done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return true if the task is done, otherwise return false."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Returns the status icon."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return the tick icon if task is done, otherwise returns a cross symbol."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return (getIsDone() ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public abstract String toStorageFormat();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Gets the details of the task as a string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return Details of the task as a string."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return getDetails();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 52
    }
  },
  {
    "path": "src/main/java/duke/tasks/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toStorageFormat() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return String.join(\" | \", new String[] { \"T\", getIsDone() ? \"1\" : \"0\", super.description });"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 17
    }
  }
]
