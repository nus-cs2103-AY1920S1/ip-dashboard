[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.5\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027 ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    version \u003d \"11.0.+\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "test {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Main\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "ooimingsheng": 52
    }
  },
  {
    "path": "config/travis/check-eof-newline.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "# Checks that all text files end with a newline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "ret\u003d0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "# Preserve filename with spaces by only splitting on newlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "IFS\u003d\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        echo \"ERROR:$filename:$line: no newline at EOF.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 18
    }
  },
  {
    "path": "config/travis/check-line-endings.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "# Checks for prohibited line endings."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "# Prohibited line endings: \\r\\n"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ret \u003d 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 20
    }
  },
  {
    "path": "config/travis/check-trailing-whitespace.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "# Checks for trailing whitespace"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        # Only warn for markdown files (*.md) to accomodate text editors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        # which do not properly handle trailing whitespace."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        # (e.g. GitHub web editor)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        if ($1 ~ /\\.md$/) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            severity \u003d \"WARN\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            severity \u003d \"ERROR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            ret \u003d 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        print severity, $1, $2, \" trailing whitespace.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 26
    }
  },
  {
    "path": "config/travis/deploy_github_pages.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "# Pushes files generated by Asciidoctor and associated files to gh-pages branch for commits to master branch."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "set -o errexit # exit with nonzero exit code if any line fails"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "if [ -z \"$GITHUB_TOKEN\" ]; then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "  echo \u0027GITHUB_TOKEN is not set up in Travis. Skipping deploy.\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "  exit 0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "fi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "set -o nounset # exit if variable is unset"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "cd build/docs/html5"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "git init"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "git config user.name \u0027Deployment Bot (Travis)\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "git config user.email \u0027deploy@travis-ci.org\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "git config credential.helper \u0027store --file\u003d.git/credentials\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "echo \"https://${GITHUB_TOKEN}:@github.com\" \u003e .git/credentials"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "git remote add upstream \"https://github.com/${TRAVIS_REPO_SLUG}.git\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "# Reset to gh-pages branch, or create orphan branch if gh-pages does not exist in remote."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "if git ls-remote --exit-code --heads upstream gh-pages; then"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    git fetch --depth\u003d1 upstream gh-pages"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    git reset upstream/gh-pages"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "elif [ $? -eq 2 ]; then # exit code of git ls-remote is 2 if branch does not exist"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    git checkout --orphan gh-pages"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "else # error occurred"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    exit $?"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "# Exit if there are no changes to gh-pages files."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "if changes\u003d$(git status --porcelain) \u0026\u0026 [ -z \"$changes\" ]; then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    echo \u0027No changes to GitHub Pages files; exiting.\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "git add -A ."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "git commit -m \"Rebuild pages at ${TRAVIS_COMMIT}\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "git push --quiet upstream HEAD:gh-pages"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 42
    }
  },
  {
    "path": "config/travis/run-checks.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "ret\u003d0 \u0026\u0026"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "for checkscript in \"$dir\"/check-*; do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    if ! \"$checkscript\"; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 11
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "T XXXDIVIDERXXX false XXXDIVIDERXXX 1sda"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "T XXXDIVIDERXXX true XXXDIVIDERXXX asd"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "T XXXDIVIDERXXX true XXXDIVIDERXXX catch"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "T XXXDIVIDERXXX false XXXDIVIDERXXX damn"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "E XXXDIVIDERXXX false XXXDIVIDERXXX wash rat XXXDIVIDERXXX backyard"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "List all tasks in the reminder system."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "### `list` - Lists all tasks in the reminder system."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Type in command list to display a list of all the tasks in the reminder system."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`Here are the tasks in your list:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      1.[T][X] 1sda"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      2.[T][done] asd"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      3.[T][done] catch"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      4.[T][X] damn"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      5.[E][X] wash rat (at: backyard)`   "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": " "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Add a task to the reminder system."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "### `todo` - Adds a generic task to the system"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "### `deadline` - Adds a task with a deadline to the system"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "### `event` - Adds a task with a venue to the system"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Type in the task type followed by the task description."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "For deadline and event types, please also type \"/by\" and \"/at\" respectively, followed by "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "deadline/event venue accordingly."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "This will add a task of the appropriate event type and description to the reminder system."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Example of usage 1: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`todo wash dog`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Expected outcome 1:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`[T][X] wash dog`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`Now you have 5 tasks in the list.`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Example of usage 2: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`deadline wash cat /by Sunday`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Expected outcome 2:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`[D][X] wash cat (by: Sunday)`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`Now you have 5 tasks in the list.`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Example of usage 3: "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`event wash rat /at backyard`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Expected outcome 3:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`[E][X] wash rat (at: backyard)`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`Now you have 5 tasks in the list.`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "### Feature 3"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Marks a task to the reminder system as completed."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "### `done` - Marks a task as completed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Type in command and the index of the task that has been completed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`done 5`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": " [D][done] wash cat (by: Sunday)`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "### Feature 4"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Removes a task from the reminder system."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "### `delete` - Removes a task from the reminder system"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Type in command and the index of the task that you want removed from the system."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`delete 5`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "[D][done] wash cat (by: Sunday)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Now you have 5 tasks in the list.`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "### Feature 5"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Finds tasks from the reminder system that contain a particular substring."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "### `find` - Finds tasks from the reminder system that contain a particular substring."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Type in command and the substring that you want to find in the task description."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`find ash`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "`Here are the tasks in your list:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "1.[E][X] wash rat (at: backyard)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "2.[T][X] wash cat`"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "ooimingsheng": 122
    }
  },
  {
    "path": "src/main/java/seedu/duke/ChatFxml/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.chatfxml;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Flips the dialog box such that the Image is on the left and text on the right."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Creates a dialog box containing the users profile picture and the user\u0027s message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param text text user has inputted."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param img user profile picture."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return dialog box containing the user\u0027s message and the users profile pic on the right."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Creates a dialog box containing the duke system\u0027s profile picture and its response user\u0027s message."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param text text user has inputted."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param img duke system\u0027s profile picture."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return dialog box containing the system\u0027s response to the user\u0027s message and with its profile pic on the left."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 69
    }
  },
  {
    "path": "src/main/java/seedu/duke/ChatFxml/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.chatfxml;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.Duke;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Image userPic \u003d new Image(this.getClass().getClassLoader().getResourceAsStream(\"images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Image dukePic \u003d new Image(this.getClass().getClassLoader().getResourceAsStream(\"images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Initialize the main window for the chat between user and duke system."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukePic)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /** Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                DialogBox.getUserDialog(input, userPic),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                DialogBox.getDukeDialog(response, dukePic)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 53
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.command.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private boolean isSystemRunning;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a duke reminder system with a particular storage filepath."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        isSystemRunning \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Initiates the duke reminder system and parses commands to update the reminder list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                ui.showError(\"Your command is meanning occurred.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Get welcome message."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return ui.getWelcome();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Parse message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param message inputted to duke system."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getResponse(String message) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        if (isSystemRunning) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                Command c \u003d Parser.parse(message);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                isSystemRunning \u003d !c.isExit();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                return c.getResultOfCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                return ui.getError(e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"System has already shut down.\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "ooimingsheng": 80
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        launch();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getClassLoader().getResource(\"view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            AnchorPane ap \u003d (AnchorPane) fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.security.DigestException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system to add a reminder when executed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskDescription the description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskType the type of task to be added to the record."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public AddCommand(String taskDescription, String taskType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Adds a task to the system."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        Task task \u003d tasks.addTask(taskDescription, taskType);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showAddMessage(task, tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super.resultMessage \u003d ui.getAddMessage(task, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system to terminate when executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Terminates the system."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        storage.saveTasks((tasks.getTaskList()), ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super.resultMessage \u003d ui.getGoodbye();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "abstract public class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected String[] params;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected String action;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected String resultMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param isExit whether the system should terminate after the current command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected Command(boolean isExit) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns whether the system should terminate after the current command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return whether the system should terminate after the current command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Does nothing."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    abstract public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the result of executing the command or the empty string if the command has not been executed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getResultOfCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return resultMessage;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private int taskNoToBeRemoved;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system to delete the task at taskNoToBeRemoved position"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * (one-based index) in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskNoToBeRemoved the one-based index position of the task in the task list to be deleted"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public DeleteCommand(int taskNoToBeRemoved) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskNoToBeRemoved \u003d taskNoToBeRemoved;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Delete the task at taskNoToBeRemoved position (one-based index) in the task list of the system."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assert taskNoToBeRemoved \u003e\u003d 0 \u0026\u0026 taskNoToBeRemoved \u003c tasks.getTaskList().size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        Task task \u003d tasks.removeTask(taskNoToBeRemoved);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showDeleteMessage(task, tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super.resultMessage \u003d ui.getDeleteMessage(task, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private int taskNoToBeChecked;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system to mark the task at taskNoToBeRemoved position"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * (one-based index) in the list as completed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskNoToBeChecked one-based index position of the task in the task list to be marked as completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public DoneCommand(int taskNoToBeChecked) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskNoToBeChecked \u003d taskNoToBeChecked;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Marks the task at taskNoToBeRemoved position (one-based index) in the task list of the system as completed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assert taskNoToBeChecked \u003e\u003d 0 \u0026\u0026 taskNoToBeChecked \u003c tasks.getTaskList().size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        Task task \u003d tasks.checkOffTask(taskNoToBeChecked);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showDoneMessage(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super.resultMessage \u003d ui.getDoneMessage(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String substring;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to find tasks with descriptions that contain the substring."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param substring the substring to be searched in the list of task descriptions."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public FindCommand(String substring) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.substring \u003d substring;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Prints a list of tasks that contain the substring in their task descriptions."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        List\u003cTask\u003e taskList \u003d tasks.findTasks(substring);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showTaskList(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super.resultMessage \u003d ui.getTaskList(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a command to the system to list all the tasks in the system."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Lists: all the tasks in the system."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param tasks the task list system involved in the command execution."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface system involved in the command execution."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param storage the storage system involved in the command execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        List\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        ui.showTaskList(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super.resultMessage \u003d ui.getTaskList(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import seedu.duke.task.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Parser has a private constructor to prevent the object from being created directly."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Parser() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the appropriate command depending on the string inputted to the system."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param input the input string read by the system."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the command the system needs to execute according to the input received by the system."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        int taskNo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String[] params \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String action \u003d params[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String substring \u003d params[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new FindCommand(substring);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            taskNo \u003d Integer.parseInt(params[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new DeleteCommand(taskNo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            taskNo \u003d Integer.parseInt(params[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new DoneCommand(taskNo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            taskType \u003d params[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            if (params.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a \" + taskType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            taskDescription \u003d params[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new AddCommand(taskDescription, taskType);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 52
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a uncompleted task with a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param by the deadline of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.by \u003d DukeDateFormatter.convertStringToDateIfPossible(by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a task with a deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param isDone whether the task has been completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param by the deadline of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the deadline of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the deadline of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/DukeDateFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class DukeDateFormatter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * DukeDateFormatter has a private constructor to prevent the object from being created directly."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private DukeDateFormatter() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Takes a string and tries to convert it into a date if possible."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param str the string that is attempted to be coverted into a date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return date format of the string if the string is of a \"d/M/yyyy HHmm\" format and the original string otherwise."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static String convertStringToDateIfPossible(String str) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            SimpleDateFormat format \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            Date date \u003d format.parse(str);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"d\u0027suffix\u0027 \u0027of\u0027 MMMM yyyy, h.mma\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            LocalDate localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return formatter.format(date)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    .replace(\"suffix\", getDayOfMonthSuffix(localDate.getDayOfMonth()))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    .replace(\".00\", \"\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    .replace(\"AM\", \"am\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    .replace(\"PM\", \"pm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } catch (ParseException exception) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the suffix of the integer n if it is between 1 and 31 and the empty string otherwise."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param n the integer value of the month (i.e. between 1 and 31)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the suffix of the integer n if it is between 1 and 31 and the empty string otherwise."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static String getDayOfMonthSuffix(final int n) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        if (!(n \u003e\u003d 1 \u0026\u0026 n \u003c\u003d 31)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"st\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"nd\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"rd\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 61
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a duke exception with a message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param msg the error message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a duke exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a uncompleted task with a venue."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param at the venue of the event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a uncompleted task with a venue."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param isDone whether the task has been completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param at the venue of the event task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the event venue of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the event venue of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getEventVenue() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static String DIVIDER \u003d \" XXXDIVIDERXXX \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a task storage system."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param filePath the file path to save and load task data of the system."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Loads the task data from the file at the file path if one exists."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return a list of the tasks loaded from the file located at the file path if one exists."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                String[] taskParams \u003d line.split(Storage.DIVIDER);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                Task task \u003d Task.taskFactory(taskParams);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Saves the task list to the file path or otherwise show a saving error."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskList the list of tasks to be saved to the file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param ui the user interface to show the saving error if there is an error when saving."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void saveTasks(List\u003cTask\u003e taskList, Ui ui) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        try (FileWriter writer \u003d new FileWriter(file);) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    writer.write(\"T\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    writer.write(\"D\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    writer.write(\"E\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                writer.write(DIVIDER + task.hasBeenDone() + DIVIDER + task.getDescription());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    writer.write(DIVIDER + ((Deadline) task).getDeadline());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                    writer.write(DIVIDER + ((Event) task).getEventVenue());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                writer.write(\"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            ui.showSavingError();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 72
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "abstract public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Factory that creates the appropriate task according to the function parameters."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskType the type of task to be created."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return an uncompleted task according to the taskType and description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static Task taskFactory(String description, String taskType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new ToDo(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String[] str \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String taskDescription \u003d str[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String by \u003d str[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new Deadline(taskDescription, by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String[] str \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String taskDescription \u003d str[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String at \u003d str[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new Event(taskDescription, at);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Factory that creates the appropriate task according to the function parameters."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskParams an array of the parameters of the task to be created of the following format:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     *      [taskType, isDone, taskDescription, by/at ?]."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return an uncompleted task according to the task params."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public static Task taskFactory(String[] taskParams) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String taskType \u003d taskParams[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        boolean isDone \u003d taskParams[1].equals(\"true\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String taskDescription \u003d taskParams[2];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new ToDo(taskDescription, isDone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String by \u003d taskParams[3];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new Deadline(taskDescription, isDone, by);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            String at \u003d taskParams[3];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return new Event(taskDescription, isDone, at);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor of a task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor of a task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param isDone whether the task has been completed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns whether the task has been completed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return whether the task has been completed."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Boolean hasBeenDone() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns a check icon if the task has been completed and a cross otherwise."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return a check icon if the task has been completed and a cross otherwise."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return (isDone ? \"done\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void checkOff() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns whether the task description contains the substring."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return whether the task description contains the substring."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public boolean descriptionContainsSubstr(String substr) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return description.contains(substr);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 120
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private HashSet\u003cString\u003e taskDescriptionDictionary \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String INDENT \u003d \"  \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a task list system with a list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskList the list of tasks the task list system is initialized with."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            taskDescriptionDictionary.add(task.getDescription());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a task list system with an empty list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the list of tasks from the task list system."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the list of tasks from the task list system."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns the size of the list of tasks from the task list system."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the size of the list of tasks from the task list system."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Adds a task of stipulated type to the task list system and returns it."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task to be added to the task system."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskType the task type of the task to be added to the task system."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the \"To Do\" task that was added to the task list system."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Task addTask(String description, String taskType) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        if (taskDescriptionDictionary.contains(description)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            throw new DukeException(description + \" is a duplicate task and already inside the task list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        taskDescriptionDictionary.add(description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        Task task \u003d Task.taskFactory(description, taskType);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Removes a task at the one-based position of taskNo from the list of tasks."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskNo the one-based index of the task to be removed from the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the task that was removed from the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Task removeTask(int taskNo) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return taskList.remove(taskNo - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Marks a task as completed at the one-based position of taskNo from the list of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskNo the one-based index of the task to be removed from the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return the task that was marked as completed from the task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Task checkOffTask(int taskNo) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        Task task \u003d taskList.get(taskNo - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        task.checkOff();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Returns a list of tasks from the tasks list whose description contains the stipulated substring."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param subStr the substring to be found in the task descriptions."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return a list of tasks from the tasks list whose description contains the stipulated substring."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public List\u003cTask\u003e findTasks(String subStr) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        List\u003cTask\u003e tasksWithSubstr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            if (task.descriptionContainsSubstr(subStr)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                tasksWithSubstr.add(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return tasksWithSubstr;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 97
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a uncompleted task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a uncompleted task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param isDone whether the task has been completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String INDENT \u003d \"     \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String SMALL_INDENT \u003d \"  \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String LOADING_ERROR_MESSAGE \u003d \"No task data found.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String SAVING_ERROR_MESSAGE \u003d \"Task data could not be saved.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String HELLO_MESSAGE \u003d \"Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String REQUEST_FOR_INPUT_MESSAGE \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String SHOW_LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private static final String DELETE_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Public constructor that returns a user interface to recieve input and return appropriate output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print loading error."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + LOADING_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Get loading error."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getLoadingError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return LOADING_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print saving error message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showSavingError() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + SAVING_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Get saving error message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getSavingError() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return SAVING_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print error message."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param errorMessage the error message to be printed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + errorMessage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Get error message."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getError(String errorMessage) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print welcome message."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + HELLO_MESSAGE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + REQUEST_FOR_INPUT_MESSAGE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Get welcome message."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getWelcome() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return HELLO_MESSAGE + \"\\n\" + REQUEST_FOR_INPUT_MESSAGE;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print goodbye message."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + BYE_MESSAGE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Get goodbye message."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getGoodbye() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return BYE_MESSAGE;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print all tasks in the task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param  taskList the list of tasks to be printed."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showTaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + SHOW_LIST_MESSAGE);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            System.out.println(INDENT + counter + \".\" + task);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Get all tasks in the task list in a message form."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param  taskList the list of tasks to be printed."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getTaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        String taskListMessage \u003d SHOW_LIST_MESSAGE;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            taskListMessage +\u003d \"\\n\" + counter + \".\" + task;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return taskListMessage;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print out a message to state that the task has been completed."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param task the task that has been completed."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showDoneMessage(Task task) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + DONE_MESSAGE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + SMALL_INDENT + task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Get done message."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getDoneMessage(Task task) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return DONE_MESSAGE + \"\\n\" + SMALL_INDENT + task;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    private String totakTasksMessage(TaskList taskList) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return \"Now you have \" + taskList.getTaskListSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print out a message to state that the task has been added to the task list."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param task the task that has been added."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskList the task list that the task has been added to."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showAddMessage(Task task, TaskList taskList)  {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + ADDED_MESSAGE);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + SMALL_INDENT + task);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + totakTasksMessage(taskList));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Get message stating that the task has been added to the task list."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param task the task that has been added."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskList the task list that the task has been added to."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getAddMessage(Task task, TaskList taskList)  {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return ADDED_MESSAGE + \"\\n\" + SMALL_INDENT +  task + \"\\n\" + totakTasksMessage(taskList);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print out a message to state that the task has been deleted from the task list."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param task the task that has been deleted."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskList the task list that the task has been deleted from."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showDeleteMessage(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + DELETE_MESSAGE);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + SMALL_INDENT + task);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(INDENT + totakTasksMessage(taskList));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Get message to state that the task has been deleted from the task list."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param task the task that has been deleted."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @param taskList the task list that the task has been deleted from."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String getDeleteMessage(Task task, TaskList taskList)  {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return DELETE_MESSAGE + \"\\n\" + SMALL_INDENT +  task + \"\\n\" + totakTasksMessage(taskList);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Read next line of input and return it as a string."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * @return next line of input as a string."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     * Print a line."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 201
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"170.0\" prefWidth\u003d\"500.0\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"150.0\" fitWidth\u003d\"200.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 12
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"680.0\" prefWidth\u003d\"565.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.chatfxml.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"442.0\" layoutY\u003d\"625.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"106.0\" text\u003d\"SEND\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            \u003cFont name\u003d\"Calibri\" size\u003d\"22.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      \u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"14.0\" layoutY\u003d\"625.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"411.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" layoutX\u003d\"15.0\" layoutY\u003d\"19.0\" prefHeight\u003d\"591.0\" prefWidth\u003d\"531.0\" vbarPolicy\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"588.0\" prefWidth\u003d\"518.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 24
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[D][\\u2718] return book (by: Sunday)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                     new Deadline(\"return book\", \"Sunday\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[D][\\u2713] return book (by: Sunday)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                     new Deadline(\"return book\", true, \"Sunday\").toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void testGetDeadline() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"Friday\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Deadline(\"return book\", \"Friday\").getDeadline());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"Later\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Deadline(\"returnsssss book\", true, \"Later\").getDeadline());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 23
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[E][\\u2718] party (at: my house)\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Event(\"party\", \"my house\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[E][\\u2713] party (at: my house)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Event(\"party\", true, \"my house\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void testGetVenue() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"tonight\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Event(\"return book\", \"tonight\").getEventVenue());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"CC\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new Event(\"returnsssss book\", true, \"CC\").getEventVenue());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 22
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[T][\\u2718] return book\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new ToDo(\"return book\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[T][\\u2713] return book\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new ToDo(\"return book\", true).toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "        assertEquals(\"[T][\\u2718] return book\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "                new ToDo(\"return book\", false).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 18
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 3
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "  [D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "1.[D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "  [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "1.[D][✓] do homework (by: no idea :-p)\t"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\Event.java ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\ToDo.java ..\\src\\main\\java\\ToDoList.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ooimingsheng"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ooimingsheng": 21
    }
  }
]
