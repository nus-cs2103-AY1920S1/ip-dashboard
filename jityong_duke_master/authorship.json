[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "run{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "//group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": "group \u0027\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 39,
      "-": 14
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "![Ui image](Ui.png)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "### Update tasks "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "* Todo tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "* Event tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "* Deadline tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "#### List tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "Lists all tasks in Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "#### Mark task as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "Marks completed task as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "#### Find task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "Finds tasks in the list of tasks that contains the provided keyword."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "#### Delete task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "Deletes unwanted task from list of tasks in Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "#### "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "### `todo` - Adds a Todo task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "Adds a Todo task into Duke, with a description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "Format: `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "Example usage: `todo Laundry`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "Expected outcome: `[T][✗] Laundry` will be added to list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "![Todo image](todo.png)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "### `event` Adds an Event task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "Adds an Event task into Duke, with a description, date and time."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "Format: `event \u003cdescription\u003e /at \u003cdate time\u003e (dd/MM/yyyy HHmm)`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": "Example usage: `event Career Fair /at 04/10/2019 1200`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "`[E][✗] Career Fair (at: 4th of October 2019, 12.00pm) ` will be added to the list of tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "![Event image](event.png)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "### `deadline` Adds a deadline task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "Adds a Deadline task into Duke, with a description, date and time."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "Format: `deadline \u003cdescription\u003e /by \u003cdate time\u003e (dd/MM/yyyy HHmm)`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "Example usage: `deadline Assignment 0 /by 20/09/2019 2359`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "Expected outcome: `[D][✗] Assignment 0 (by: 20th of September 2019, 11.59pm)`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "![Deadline image](image.png)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jityong"
        },
        "content": "### `list` Lists all tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jityong"
        },
        "content": "Lists all tasks in Duke with their description as well as date and time if applicable."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jityong"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jityong"
        },
        "content": "Example usage: `list`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jityong"
        },
        "content": "Expected outcome:\u003cbr/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jityong"
        },
        "content": "`1. [T][✗] Laundry` \u003cbr/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jityong"
        },
        "content": "`2. [E][✗] Career Fair (at: 4th of October 2019, 12.00pm)` \u003cbr/\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jityong"
        },
        "content": "`3. [D][✗] Assignment 0 (by: 20th of September 2019, 11.59pm)`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jityong"
        },
        "content": "![List image](list.png)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jityong"
        },
        "content": "### `done` Marks task as done"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jityong"
        },
        "content": "Marks task at the given index as done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jityong"
        },
        "content": "Format: `done \u003cindex\u003e`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jityong"
        },
        "content": "Example usage: `done 1`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jityong"
        },
        "content": "Expected outcome: \u003cbr/\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jityong"
        },
        "content": "`Nice! I\u0027ve marked this task as done:`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jityong"
        },
        "content": "`[T][✓] Laundry`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jityong"
        },
        "content": "![Done image](done.png)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jityong"
        },
        "content": "### `find` Finds task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jityong"
        },
        "content": "Finds tasks that contains given keywords."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jityong"
        },
        "content": "Format: `find \u003ckeywords\u003e`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jityong"
        },
        "content": "Example usage: `find Career`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jityong"
        },
        "content": "Expected outcome:\u003cbr/\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jityong"
        },
        "content": "`Here are the matching tasks in your list:` \u003cbr/\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jityong"
        },
        "content": "`1. [E][✗] Career Fair (at: 4th of October 2019, 12.00pm)`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jityong"
        },
        "content": "![Find image](find.png)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jityong"
        },
        "content": "### `delete` Deletes task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jityong"
        },
        "content": "Deletes task at the given index as done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jityong"
        },
        "content": "Format: `delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jityong"
        },
        "content": "Example usage: `delete 1` \u003cbr/\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jityong"
        },
        "content": "Expected outcome:\u003cbr/\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jityong"
        },
        "content": "`Noted. I\u0027ve removed this task:`\u003cbr/\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jityong"
        },
        "content": "`[T][✓] Laundry`\u003cbr/\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jityong"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jityong"
        },
        "content": "![Delete image](delete.png)"
      }
    ],
    "authorContributionMap": {
      "jityong": 98,
      "-": 15
    }
  },
  {
    "path": "list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "     1. [E][✗] Career Fair (at: 04th of October 2019, 12.00PM)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "     2. [D][✗] Assignment 0 (by: 20th of September 2019, 11.59PM)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "     "
      }
    ],
    "authorContributionMap": {
      "jityong": 3
    }
  },
  {
    "path": "output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "       [T][✗] what"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "jityong": 5
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": "        db.setMaxHeight(1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jityong"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jityong"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jityong"
        },
        "content": "        db.dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jityong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 66
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Main class that runs the Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Constructs a new Duke object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "            storage.load(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ui.setErrorResponse(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ui.printResponse();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Gets the welcome message on startup."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "      * @return welcome message, including list of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "        ui.setWelcomeResponse(\"Hello! I am Duke\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"These are your current tasks:\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "                this.tasks.listTasks());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return ui.getResponse();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Ui.print(\"Hello! I am Duke\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.tasks.listTasks();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": "                ui.setInput();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "                String input \u003d ui.getInput();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jityong"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jityong"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jityong"
        },
        "content": "                ui.printResponse();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jityong"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jityong"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jityong"
        },
        "content": "                ui.setErrorResponse(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jityong"
        },
        "content": "                ui.printResponse();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Gets the UI Duke is using."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return Ui object Duke is using"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Gets Duke\u0027s response on user\u0027s input."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param input user\u0027s input"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return Duke\u0027s response"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String getDukeResponse(String input) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jityong"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jityong"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ui.printResponse();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jityong"
        },
        "content": "            return ui.getResponse();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ui.setErrorResponse(e.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ui.printResponse();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jityong"
        },
        "content": "            return ui.getResponse();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jityong"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 101,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().welcomeMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "    void welcomeMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String message \u003d duke.getWelcomeMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "                DialogBox.getDukeDialog(message,dukeImage)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String response \u003d duke.getDukeResponse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 59
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.Actions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Adds a Task to the TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Actions action;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Constructs a new AddCommand object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param input  input from the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param action action to be performed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public AddCommand(String input, Actions action) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Detects anomalies for schedule clashes."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param currentTask task to be added."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param tasks list of existing tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return TaskList of Tasks that have schedule which clashes with the currentTask."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public TaskList detectAnomalies(Task currentTask, TaskList tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "        TaskList clashedTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (currentTask.getDateTime().equals(task.getDateTime())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "                clashedTasks.addTask(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return clashedTasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Executes the action to be performed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param tasks   current list of tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param ui      Ui object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param storage Storage object to save and load files."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "        TaskList clashedTasks \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jityong"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jityong"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jityong"
        },
        "content": "            //trim so that cannot pass with just spaces"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jityong"
        },
        "content": "            desc \u003d input.substring(4).trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (desc.equals(\"\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jityong"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jityong"
        },
        "content": "                task \u003d new Todo(desc);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jityong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jityong"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jityong"
        },
        "content": "            num \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jityong"
        },
        "content": "            //length \u003d\u003d 1 means only has \u0027deadline\u0027, and temp[1] equal /by means no desc as well"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (inputArr.length \u003d\u003d 1 || inputArr[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jityong"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else if (num \u003d\u003d -1) { //-1 means /by is not found"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jityong"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please type /by before inputting the deadline.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jityong"
        },
        "content": "                desc \u003d input.substring(9, num);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jityong"
        },
        "content": "                //trim so that cannot pass with just spaces"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jityong"
        },
        "content": "                String by \u003d input.substring(num + 3).trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jityong"
        },
        "content": "                //no input time after /by"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jityong"
        },
        "content": "                if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Please input a deadline after /by\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jityong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    task \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    clashedTasks \u003d detectAnomalies(task, tasks);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jityong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jityong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jityong"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jityong"
        },
        "content": "            num \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jityong"
        },
        "content": "            //length \u003d\u003d 1 means only has \u0027event\u0027, and temp[1] equal /at means no desc as well"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (inputArr.length \u003d\u003d 1 || inputArr[1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jityong"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else if (num \u003d\u003d -1) { //-1 means /at is not found"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jityong"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please type /at before inputting the time.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jityong"
        },
        "content": "                desc \u003d input.substring(6, num);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jityong"
        },
        "content": "                //trim so that cannot pass with just spaces"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jityong"
        },
        "content": "                String at \u003d input.substring(num + 3).trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jityong"
        },
        "content": "                //no input time after /at"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jityong"
        },
        "content": "                if (at.equals(\"\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Please input a time after /at\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jityong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jityong"
        },
        "content": "                    clashedTasks \u003d detectAnomalies(task, tasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jityong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jityong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jityong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jityong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jityong"
        },
        "content": "        // if task is still null do nothing"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jityong"
        },
        "content": "        assert task !\u003d null : \"Task is null, exceptions not handled.\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jityong"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jityong"
        },
        "content": "        if (clashedTasks \u003d\u003d null || clashedTasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ui.setAddTaskResponse(task, tasks.getSize());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ui.setClashedTaskResponse(task, clashedTasks, tasks.getSize());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jityong"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 123
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Constructs new Command object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param input input from user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Command(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "        assert input.length() \u003e 0 : \"invalid input\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Executes the action to be performed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param tasks   current list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param ui      Ui object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param storage Storage object to save and load files."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns boolean object isExit to determine if program should exit."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return exit condition is true or false."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Delete command that inherits from Command, deletes a task from TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Constructs a new DeleteCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param input input from user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Deletes a Task from the current TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param tasks   current list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param ui      Ui object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param storage Storage object to save and load files."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "            String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "            //no input number"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please input a valid number.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "            int num \u003d Integer.valueOf(inputArr[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "            //invalid num, will index out of bounds"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "            Task task \u003d tasks.getTask(num - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "            tasks.deleteTask(num - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ui.setDeleteResponse(task, tasks.getSize());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please input a valid number.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jityong": 51
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Exit command that inherits from Command to exit from the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Constructs a new ExitCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param input input from user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public ExitCommand(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Executes the command to exit from the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param tasks   current list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param ui      Ui object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param storage Storage object to save and load files."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "        ui.setExitResponse(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 34
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Executes the command to find a task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param tasks   current list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param ui      Ui object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param storage Storage object to save and load files."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String desc \u003d this.input.substring(4).trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "        if (desc.equals(\"\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a find cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (task.contains(desc)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "                result.append(\"     \" + i + \".\" + task + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "        ui.setFindResponse(result.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jityong": 37
    }
  },
  {
    "path": "src/main/java/duke/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.Actions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Update command that inherits from Command, updates the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Actions action;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Constructs a new UpdateCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param input  user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param action type of action to be performed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public UpdateCommand(String input, Actions action) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Executes the update command to either mark task as done or print all the tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param tasks   current list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param ui      Ui object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param storage Storage object to save and load files."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "            //no input number"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please input a valid number.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": "            num \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "            //invalid num, will index out of bounds"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (num \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please input a valid number.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "                Task task \u003d tasks.getTask(num - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "                ui.setDoneResponse(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ui.setListResponse(tasks.listTasks());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 63
    }
  },
  {
    "path": "src/main/java/duke/command/WrongCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Wrong command inherits from Command, refers to a command that is not recognised."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class WrongCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Constructs a new WrongCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public WrongCommand(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Prints a message to inform user that the command is wrong and not recognised by the program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param tasks   current list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param ui      Ui object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param storage Storage object to save and load files."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jityong": 35
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 7
    }
  },
  {
    "path": "src/main/java/duke/logic/Actions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Enum class for all the recognised actions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "public enum Actions {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "    BYE, DONE, TODO, DEADLINE, EVENT, DELETE, NONE, LIST, FIND"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 8
    }
  },
  {
    "path": "src/main/java/duke/logic/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.command.UpdateCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.command.WrongCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.Actions;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Parser class to parse user input into a Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns a Command based on user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param userInput user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return Command based on user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public static Command parse(String userInput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String input \u003d userInput.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String[] inputArr \u003d input.trim().split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Actions type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Command command \u003d new WrongCommand(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.BYE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new ExitCommand(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (inputArr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.DONE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new UpdateCommand(input, type);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.LIST;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new UpdateCommand(input, type);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (inputArr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.TODO;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new AddCommand(input, type);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (inputArr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.DEADLINE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new AddCommand(input, type);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (inputArr[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.EVENT;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new AddCommand(input, type);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (inputArr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.DELETE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new DeleteCommand(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else if (inputArr[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.FIND;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "            command \u003d new FindCommand(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "            type \u003d Actions.NONE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 59
    }
  },
  {
    "path": "src/main/java/duke/logic/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Represents an ArrayList of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Prints all the tasks in the TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "        int size \u003d this.tasks.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "        StringBuilder listOfTask \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "            listOfTask.append(i + 1 + \". \" + this.tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return (listOfTask.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns all the tasks in the TaskList in the form of an ArrayList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return the tasks in the TaskList in an ArrayList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Deletes a task from the list of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param index task to be deleted."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "            this.tasks.remove(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please input a valid number.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns the total number of tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return the total number of tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns a task at the given index."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param index index of task to be returned."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return task at the given index."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jityong"
        },
        "content": "            return this.tasks.get(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jityong"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please input a valid number.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 82
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Storage class to load and save the TaskList into the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public TaskList tasks \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Saves the TaskList object into a .tmp file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param tasks TaskList to be saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @throws Exception in case of file not found exception."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    //Solution below adapted from https://stackoverflow.com/questions/16111496/java-how-can-i-write-my-arraylist-to-a-file-and-read-load-that-file-to-the"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "            int size \u003d tasks.getSize();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "            //may have to catch error if no items in list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "            StringBuilder listOfTask \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "                listOfTask.append(i + 1 + \". \" + tasks.getTask(i) + \"\\n\" + \"     \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(new FileOutputStream(\"list.txt\", false));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "            writer.print(\"     \" + listOfTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(\"t.tmp\", false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": "            oos.writeObject(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Loads TaskList from a .tmp file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param tasks performs a deep copy of the loaded TaskList into this tasks parameter."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @throws Exception in case of file not found exception."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": "    //Solution below adapted from https://stackoverflow.com/questions/16111496/java-how-can-i-write-my-arraylist-to-a-file-and-read-load-that-file-to-the"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void load(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "            FileInputStream fis \u003d new FileInputStream(\"t.tmp\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jityong"
        },
        "content": "            TaskList temp \u003d new TaskList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jityong"
        },
        "content": "            temp \u003d (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jityong"
        },
        "content": "            for (Task task : temp.getTasks()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jityong"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jityong"
        },
        "content": "            ois.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jityong"
        },
        "content": "            File f \u003d new File(\"/t.tmp\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jityong"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jityong"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 74
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Deadline task that inherits from Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Constructs a new Deadline object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param task     description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param dateTime date and time of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Deadline(String task, String dateTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.dateTime \u003d Ui.toDateString(dateTime);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Gets the date and time of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return date and time of deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns a string representation of a Deadline object in the in the format of [D][✗] task (by: dateTime)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return a string representation of a Deadline object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + this.dateTime + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Event task that inherits from Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Constructs a new Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param task     description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param dateTime date and time of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Event(String task, String dateTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.dateTime \u003d Ui.toDateString(dateTime);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Gets the date and time of the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return date and time of event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns a string representation of an Event object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return a string representation of an Event object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + this.dateTime + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Task that can be in the form of Todo, Deadline or Event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private boolean status \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Constructs a new Task object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param task description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "        assert task.length() \u003e 0 : \"Invalid task name\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Marks a Task as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.status \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns the status of the Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return status of the Task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns description of the Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return description of the Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns a string representation of a Task object. Example: \"[x] task description\"."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return a string representation of a Task object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return task.contains(s);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String logo;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jityong"
        },
        "content": "        if (this.status \u003d\u003d false) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jityong"
        },
        "content": "            logo \u003d \"✗\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jityong"
        },
        "content": "            logo \u003d \"✓\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return \"[\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jityong"
        },
        "content": "                logo"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"] \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jityong"
        },
        "content": "                + this.getTask();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jityong": 78
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": " * Todo task that inherits from Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Constructs a new Todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public Todo(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns a string representation of the Todo object. Example: [T][✗] borrow book."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return a string representation of the Todo object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 27
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": " * User interaction class to take care of all user interactions in the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private String input \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private String[] inputArr;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Converts a date and time string from dd/mm/yy hh:mm format to Day of Month, Year hh.mm(am/pm) format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param dateTime date and time in dd/mm/yy hh:mm format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return Day of Month, Year hh.mm(am/pm) format. Example: 2nd of December 2019, 6pm."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public static String toDateString(String dateTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "            SimpleDateFormat parser \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "            SimpleDateFormat formatter \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (dateTime.split(\" \").length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "                parser \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "                formatter \u003d new SimpleDateFormat(\"dd MMMM yyyy, h.mma\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jityong"
        },
        "content": "                parser \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jityong"
        },
        "content": "                formatter \u003d new SimpleDateFormat(\"dd MMMM yyyy\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jityong"
        },
        "content": "            Date convertedDate \u003d parser.parse(dateTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jityong"
        },
        "content": "            String output \u003d formatter.format(convertedDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jityong"
        },
        "content": "            String[] outputArr \u003d output.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jityong"
        },
        "content": "            int day \u003d Integer.valueOf(outputArr[0]) % 10;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jityong"
        },
        "content": "            if (day \u003e 3 || day \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jityong"
        },
        "content": "                outputArr[0] +\u003d \"th of\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else if (day \u003d\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jityong"
        },
        "content": "                outputArr[0] +\u003d \"st of\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else if (day \u003d\u003d 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jityong"
        },
        "content": "                outputArr[0] +\u003d \"nd of\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jityong"
        },
        "content": "            } else if (day \u003d\u003d 3) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jityong"
        },
        "content": "                outputArr[0] +\u003d \"rd of\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jityong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jityong"
        },
        "content": "            String result \u003d String.join(\" \", outputArr);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jityong"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jityong"
        },
        "content": "        } catch (DateTimeException | ParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jityong"
        },
        "content": "            return dateTime;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Prints message wrapped in \"-------\"."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param message message before formatting with \"-----\"."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public static void print(String message) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jityong"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"    ------------------------------------------------------------\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        \"     \" + message + \"\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jityong"
        },
        "content": "                        \"    ------------------------------------------------------------\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Sets the input from the user."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setInput() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jityong"
        },
        "content": "        String newInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.input \u003d newInput;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.inputArr \u003d newInput.split(\" \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns input from the user."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return input from the user."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.input;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Returns input of user as a String array."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return input of user as a String array."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String[] getInputArr() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.inputArr;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jityong"
        },
        "content": "    private void setResponse(String response) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jityong"
        },
        "content": "        this.response \u003d response + \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Sets response for Add command."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param task task added."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param size size of TaskList after adding task."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setAddTaskResponse(Task task, int size) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jityong"
        },
        "content": "        setResponse(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jityong"
        },
        "content": "                task + \"\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Sets response for anomaly with adding tasks with clashed schedules."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param task         added task."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param clashedTasks TaskList of clashed tasks."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param size         size of TaskList after adding task."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setClashedTaskResponse(Task task, TaskList clashedTasks, int size) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jityong"
        },
        "content": "        StringBuilder clashedTasksStr \u003d new StringBuilder();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jityong"
        },
        "content": "        for (Task clashedTask : clashedTasks.getTasks()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jityong"
        },
        "content": "            clashedTasksStr.append(\"    \" + clashedTask + \"\\n\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jityong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jityong"
        },
        "content": "        setResponse(\"Take note, newly added task\u0027s schedule clashes with existing tasks:\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jityong"
        },
        "content": "                clashedTasksStr"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jityong"
        },
        "content": "                task + \"\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Sets response for List command."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param list list of task."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setListResponse(String list) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jityong"
        },
        "content": "        setResponse(\"Here are your tasks:\\n\" + list);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Sets response for Done command."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param task task to be marked as done."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setDoneResponse(Task task) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jityong"
        },
        "content": "        setResponse(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jityong"
        },
        "content": "                task);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Sets response for Find command."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param result result of the find command."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setFindResponse(String result) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jityong"
        },
        "content": "        setResponse(\"Here are the matching tasks in your list:\" + \"\\n\" + result);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Sets response for Exit command."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param message exit message."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setExitResponse(String message) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jityong"
        },
        "content": "        setResponse(message);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Sets response for Error messages."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param error error message."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setErrorResponse(String error) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jityong"
        },
        "content": "        setResponse(error);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Sets response for Welcome message."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param message welcome message."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setWelcomeResponse(String message) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jityong"
        },
        "content": "        setResponse(message);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Sets response for Delete message."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param task task to be deleted."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @param size size of TaskList after deletion."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void setDeleteResponse(Task task, int size) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jityong"
        },
        "content": "        setResponse(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jityong"
        },
        "content": "                task + \"\\n\""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \"Now you have \""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jityong"
        },
        "content": "                size"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jityong"
        },
        "content": "                +"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jityong"
        },
        "content": "                \" tasks in the list.\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Prints response in CLI."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public void printResponse() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jityong"
        },
        "content": "        print(response);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jityong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * Gets the UI response."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jityong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jityong"
        },
        "content": "     * @return UI response attribute."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jityong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jityong"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jityong"
        },
        "content": "        return this.response;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 233
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.geometry.Rectangle2D?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003cfx:root fx:id\u003d\"box\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"135.0\" prefWidth\u003d\"401.0\" style\u003d\"-fx-background-radius: 100;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: #5CCFFE#5CCFFE #5CCFFE#5CCFFE; -fx-background-radius: 10; -fx-min-width: 100;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"120.0\" fitWidth\u003d\"145.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "         \u003cviewport\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "            \u003cRectangle2D /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "         \u003c/viewport\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jityong": 22
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.scene.control.TitledPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"601.0\" prefWidth\u003d\"399.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"-1.0\" layoutY\u003d\"553.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"47.0\" prefWidth\u003d\"316.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"-1.0\" AnchorPane.rightAnchor\u003d\"84.0\" AnchorPane.topAnchor\u003d\"553.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"317.0\" layoutY\u003d\"556.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "      \u003cTitledPane alignment\u003d\"CENTER\" collapsible\u003d\"false\" prefHeight\u003d\"549.0\" prefWidth\u003d\"400.0\" text\u003d\"DUKE\" \u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "              \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"371.0\" prefWidth\u003d\"237.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "                  \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "                      \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"508.0\" prefWidth\u003d\"373.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "                  \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "              \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "            \u003cFont name\u003d\"Marker Felt Thin\" size\u003d\"24.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "      \u003c/TitledPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jityong": 29
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.logic.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "        import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "    void parse() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "        assertTrue(parser.parse(\"bye\") instanceof Command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 14
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "    void getTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Task task \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "        assertEquals(\"test\", task.getTask());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "    void getStatus() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Task task \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "        assertEquals(false, task.getStatus());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Task task \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "        assertTrue(task.getStatus());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "        Task task \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "        assertEquals(\"[✗] \" + task.getTask(), task.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jityong": 33
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": "     Hello! I am Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "jityong": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "jityong": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jityong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jityong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jityong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jityong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jityong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jityong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jityong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jityong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jityong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jityong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jityong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jityong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jityong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jityong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jityong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jityong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jityong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jityong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jityong"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jityong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jityong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jityong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jityong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jityong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jityong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jityong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jityong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jityong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jityong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jityong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jityong": 34
    }
  }
]
