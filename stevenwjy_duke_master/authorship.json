[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "run {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    archiveVersion \u003d \"0.1.0\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 25,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.InputReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.OutputWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private InputReader inputReader \u003d new InputReader();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private OutputWriter outputWriter \u003d new OutputWriter();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Duke(String filePath) throws Exception {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.taskManager \u003d new TaskManager(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Run duke chat bot. This function will trigger reading from \u003ccode\u003eSystem.in\u003c/code\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * and printing output to \u003ccode\u003eSystem.out\u003c/code\u003e. Initial data will be loaded from the"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * \u003ccode\u003efilePath\u003c/code\u003e that is specified upon initialization of \u003ccode\u003eDuke\u003c/code\u003e class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        outputWriter.showHeader();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                String inputLine \u003d inputReader.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    Command command \u003d Command.parseCommand(inputLine);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    command.execute(outputWriter, taskManager);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    if (ExitCommand.isExit(command)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                        outputWriter.showFooter();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    outputWriter.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            outputWriter.showError(\"Program is terminated due to unexpected behavior ... \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    + \"Error: \" + e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Default main function for \u003ccode\u003eDuke\u003c/code\u003e class. Calling this function will run a chat bot with"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * default task data at \u0027data/task.txt\u0027. If there is no such file, the program will create an empty"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param args Arguments that are provided upon running the program. Those arguments will not give"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *             any effect towards the program execution."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            System.out.println(\"Failed to run the main program, error: \" + e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 58,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.exceptions.CommandExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.OutputWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String deadlineInfo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public AddDeadlineCommand(String taskDescription, String deadlineInfo) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.deadlineInfo \u003d deadlineInfo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void execute(OutputWriter outputWriter, TaskManager taskManager) throws CommandExecutionException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        Deadline deadline \u003d new Deadline(taskDescription, deadlineInfo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            taskManager.addTask(deadline);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            outputWriter.notifyAddTask(deadline, taskManager.getNumberOfTasks());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(\"Unknown error occurred while executing \u0027deadline\u0027 command\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.exceptions.CommandExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.OutputWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String eventInfo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public AddEventCommand(String taskDescription, String eventInfo) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.eventInfo \u003d eventInfo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void execute(OutputWriter outputWriter, TaskManager taskManager) throws CommandExecutionException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        Event event \u003d new Event(taskDescription, eventInfo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            taskManager.addTask(event);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            outputWriter.notifyAddTask(event, taskManager.getNumberOfTasks());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(\"Unknown error occurred while executing \u0027event\u0027 command\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.exceptions.CommandExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.OutputWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public AddToDoCommand(String taskDescription) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void execute(OutputWriter outputWriter, TaskManager taskManager) throws CommandExecutionException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        ToDo todo \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            taskManager.addTask(todo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            outputWriter.notifyAddTask(todo, taskManager.getNumberOfTasks());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(\"Unknown error occurred while executing \u0027todo\u0027 command\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.exceptions.CommandExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.OutputWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public abstract void execute(OutputWriter outputWriter, TaskManager taskManager)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throws InvalidCommandException, CommandExecutionException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Convert a string into \u003ccode\u003eCommand\u003c/code\u003e. Calling this function might return different types of"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * class that extends \u003ccode\u003eCommand\u003c/code\u003e depending on the string provided in the parameter."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param s String representation of the command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @return A command that is represented by the given string in the parameter."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @throws InvalidCommandException An exception that is returned if the string provided in the parameter"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *                                 does not follow a valid command format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public static Command parseCommand(String s) throws InvalidCommandException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String[] commandParts \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        if (commandParts.length \u003c 2) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            if (commandParts[0].matches(\"^(done|delete)$\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                throw new InvalidCommandException(\"You must provide a task number for \u0027\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                        + commandParts[0] + \"\u0027 command!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            } else if (commandParts[0].matches(\"^(todo|event|deadline|find)$\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                throw new InvalidCommandException(\"You must provide a description for \u0027\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                        + commandParts[0] + \"\u0027 command!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        switch (commandParts[0]) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(commandParts[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                if (commandParts[0].matches(\"done\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    return new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    return new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                throw new InvalidCommandException(\"Task number must be an integer!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new AddToDoCommand(commandParts[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            String[] eventParams \u003d commandParts[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            if (eventParams.length \u003c 2) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                throw new InvalidCommandException(\"The description of an event must contain \u0027 /at \u0027.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new AddEventCommand(eventParams[0], eventParams[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            String[] deadlineParams \u003d commandParts[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            if (deadlineParams.length \u003c 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                throw new InvalidCommandException(\"The description of a deadline must contain \u0027 /by \u0027.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new AddDeadlineCommand(deadlineParams[0], deadlineParams[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new FindCommand(commandParts[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\\\"\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 71
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.exceptions.CommandExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.OutputWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void execute(OutputWriter outputWriter, TaskManager taskManager)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throws InvalidCommandException, CommandExecutionException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            Task removedTask \u003d taskManager.removeTask(taskNumber);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            outputWriter.notifyRemoveTask(removedTask, taskManager.getNumberOfTasks());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new InvalidCommandException(\"Task number does not exist\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(\"Unknown error occurred while executing \u0027delete\u0027 command\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.exceptions.CommandExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.OutputWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void execute(OutputWriter outputWriter, TaskManager taskManager)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throws InvalidCommandException, CommandExecutionException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            taskManager.markAsDone(taskNumber);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            outputWriter.notifyTaskDone(taskManager.getTask(taskNumber));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new InvalidCommandException(\"Task number does not exist\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(\"Unknown error occurred while executing \u0027done\u0027 command\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.OutputWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void execute(OutputWriter outputWriter, TaskManager taskManager) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public static boolean isExit(Command c) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return (c instanceof ExitCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.exceptions.CommandExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.OutputWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void execute(OutputWriter outputWriter, TaskManager taskManager) throws CommandExecutionException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            List\u003cTask\u003e foundList \u003d taskManager.findTasks(keyword);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            outputWriter.showTasksFound(foundList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(\"Unknown error occurred while executing \u0027find\u0027 command\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.commands.exceptions.CommandExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.OutputWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void execute(OutputWriter outputWriter, TaskManager taskManager) throws CommandExecutionException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            outputWriter.showTasks(taskManager.getTasks());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new CommandExecutionException(\"Unknown error occurred while executing \u0027list\u0027 command\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/exceptions/CommandExecutionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class CommandExecutionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public CommandExecutionException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/io/InputReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class InputReader {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public InputReader() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public String nextLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/io/OutputWriter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class OutputWriter {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private static String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private static String tab \u003d \"     \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private PrintStream out \u003d System.out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Shows a header that is printed at the start of the chat bot."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void showHeader() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(tab + \"Hello! I\u0027m Duke\\n\" + \"     What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Shows a footer that is printed when the chat bot is about to terminate."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void showFooter() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(tab + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Shows a notification to the user that a task has been successfully marked as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param task The task that has been marked as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void notifyTaskDone(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(tab + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(tab + \"  \" + task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Shows a notification to the user that a new task has been successfully added to the task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param task          The task that has been successfully added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param numberOfTasks The new number of tasks in the task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void notifyAddTask(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(tab + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(tab + \"  \" + task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.printf(\"%sNow you have %d tasks in the list.\\n\", tab, numberOfTasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Shows a notification to the user that a task has been successfully removed from the task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param task          The task that has been successfully removed."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param numberOfTasks The new number of tasks in the task list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void notifyRemoveTask(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(tab + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(tab + \"  \" + task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.printf(\"%sNow you have %d tasks in the list.\\n\", tab, numberOfTasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Shows the list of tasks to the user."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param tasks List of tasks that is stored by the chat bot."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void showTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(tab + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        int number \u003d 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            out.printf(\"%s%d.%s\\n\", tab, number, task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            number +\u003d 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Show list of tasks that match the keyword of a \u0027find\u0027 command."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param tasks List of tasks that match the keyword of a \u0027find\u0027 command."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void showTasksFound(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(tab + \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        int number \u003d 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            out.printf(\"%s%d.%s\\n\", tab, number, task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            number +\u003d 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Show an error message to the user that is caught during the program execution."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param errorMessage A description of the error that is caught by the program."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(tab + \"☹ OOPS!!! \" + errorMessage);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 113
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String timeDescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Constructor for \u003ccode\u003eDeadline\u003c/code\u003e that represents one of the possible task types."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * By default, the task will not be marked as done upon initialization."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param description     Description of the \u003ccode\u003eDeadline\u003c/code\u003e task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param timeDescription An information that specifies the deadline of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Deadline(String description, String timeDescription) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.DEADLINE, description, false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        DateTimeFormatter targetFormatter \u003d DateTimeFormatter"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                .ofLocalizedDateTime(FormatStyle.LONG, FormatStyle.SHORT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        if (timeDescription.matches(\"[0-9]{2}/[0-9]{2}/[0-9]{4} [0-9]{2}:[0-9]{2}\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                this.timeDescription \u003d LocalDateTime.parse(timeDescription, formatter).format(targetFormatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Deadline(String description, String timeDescription, boolean done) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.DEADLINE, description, done);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return \"[\" + getTaskIcon() + \"][\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                + getDescription() + \" (by: \" + timeDescription + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getDataRepresentation() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return getTaskIcon() + \" | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + timeDescription;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 50
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String timeDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Constructor for \u003ccode\u003eEvent\u003c/code\u003e that represents one of the possible task types."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * By default, the task will not be marked as done upon initialization."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param description     Description of the \u003ccode\u003eEvent\u003c/code\u003e task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param timeDescription An information regarding the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Event(String description, String timeDescription) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.EVENT, description, false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Event(String description, String timeDescription, boolean done) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.EVENT, description, done);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return \"[\" + getTaskIcon() + \"][\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                + getDescription() + \" (at: \" + timeDescription + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getDataRepresentation() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return getTaskIcon() + \" | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + timeDescription;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 33
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.exceptions.InvalidTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    Task(TaskType type, String description, boolean done) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    static Task parseTask(String s) throws InvalidTaskException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String[] components \u003d s.split(\" \\\\| \", 3);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        if (components.length \u003c 3) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new InvalidTaskException(\"Unsupported format of task representation in String, \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    + \"number of components: \" + components.length);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        boolean taskIsDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        switch (components[1]) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"0\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            taskIsDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            taskIsDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new InvalidTaskException(\"Unsupported task completion status: \" + components[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        switch (components[0]) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new ToDo(components[2], taskIsDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            String[] deadlineInfo \u003d components[2].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            if (deadlineInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                throw new InvalidTaskException(\"Invalid Deadline task format, doesn\u0027t contain time description\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new Deadline(deadlineInfo[0], deadlineInfo[1], taskIsDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            String[] eventInfo \u003d components[2].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            if (eventInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                throw new InvalidTaskException(\"Invalid Event task format, doesn\u0027t contain time description\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new Event(eventInfo[0], eventInfo[1], taskIsDone);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new InvalidTaskException(\"Unsupported task type: \" + components[0]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    abstract String getDataRepresentation();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getTaskIcon() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return type.getTaskIcon();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return (done ? \"O\" : \"X\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 78
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private TaskStorage taskStorage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public TaskManager(String filePath) throws Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        taskStorage \u003d new TaskStorage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        tasks \u003d taskStorage.loadTasks();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void addTask(Task task) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        taskStorage.saveTasks(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Removes a task from the list of tasks that is stored by Duke chat bot."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param taskNumber The index of the task in the list that will be removed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @return The task that has been removed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @throws IOException An error if Duke chat bot fails to save the changes to the data file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Task removeTask(int taskNumber) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        Task removedTask \u003d tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        taskStorage.saveTasks(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void markAsDone(int taskNumber) throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        tasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        taskStorage.saveTasks(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Find tasks that match the specified keyword."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param keyword A keyword that is searched in the task description."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @return List of tasks that match the specified keyword."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public List\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        List\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                foundList.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return foundList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 66
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/TaskStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.exceptions.InvalidTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "class TaskStorage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    TaskStorage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        File directory \u003d new File(String.valueOf(Path.of(filePath).getParent()));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        if (!directory.isDirectory()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            directory.mkdirs();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        if (!file.isFile()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    List\u003cTask\u003e loadTasks() throws IOException, InvalidTaskException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        FileReader fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            Task task \u003d Task.parseTask(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    void saveTasks(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        PrintWriter printWriter \u003d new PrintWriter(bufferedWriter);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            printWriter.println(task.getDataRepresentation());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        printWriter.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    TODO(\"T\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    DEADLINE(\"D\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    EVENT(\"E\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String icon;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    TaskType(String icon) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.icon \u003d icon;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getTaskIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return icon;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * Constructor for \u003ccode\u003eToDo\u003c/code\u003e that represents one of the possible task types."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * By default, the task will not be marked as done upon initialization."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     * @param description     Description of the \u003ccode\u003eToDo\u003c/code\u003e task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.TODO, description, false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public ToDo(String description, boolean done) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.TODO, description, done);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return \"[\" + getTaskIcon() + \"][\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getDataRepresentation() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return getTaskIcon() + \" | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/exceptions/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class InvalidTaskException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public InvalidTaskException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 7
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void toString_isNotDone_stringReturned() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String description \u003d \"example deadline\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String deadlineInfo \u003d \"next Monday\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String expectedValue \u003d \"[D][X] \" + description + \" (by: \" + deadlineInfo + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, deadlineInfo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        assertEquals(expectedValue, deadline.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void toString_isDone_stringReturned() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String description \u003d \"example deadline\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String deadlineInfo \u003d \"next Monday\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String expectedValue \u003d \"[D][O] \" + description + \" (by: \" + deadlineInfo + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, deadlineInfo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        deadline.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        assertEquals(expectedValue, deadline.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void toString_timeFormat_stringReturned() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String description \u003d \"example deadline\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String deadlineInfo \u003d \"02/01/2019 22:10\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String expectedValue \u003d \"[D][X] \" + description + \" (by: January 2, 2019, 10:10 PM)\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, deadlineInfo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        assertEquals(expectedValue, deadline.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 38
    }
  },
  {
    "path": "src/test/java/seedu/duke/tasks/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void toString_isNotDone_stringReturned() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String description \u003d \"example event\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String eventInfo \u003d \"random house\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String expectedValue \u003d \"[E][X] \" + description + \" (at: \" + eventInfo + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        Event event \u003d new Event(description, eventInfo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        assertEquals(expectedValue, event.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void toString_isDone_stringReturned() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String description \u003d \"example event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String eventInfo \u003d \"random Monday\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String expectedValue \u003d \"[E][O] \" + description + \" (at: \" + eventInfo + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        Event event \u003d new Event(description, eventInfo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        event.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        assertEquals(expectedValue, event.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 28
    }
  },
  {
    "path": "src/test/java/seedu/duke/tasks/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void toString_isNotDone_stringReturned() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String description \u003d \"example todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String expectedValue \u003d \"[T][X] \" + description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        ToDo toDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        assertEquals(expectedValue, toDo.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void toString_isDone_stringReturned() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String description \u003d \"example todo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String expectedValue \u003d \"[T][O] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        ToDo toDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        toDo.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        assertEquals(expectedValue, toDo.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 26
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     1.[T][✘] borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "if ! javac -sourcepath ../src/main/java -Xlint:none -d ../bin ../src/main/java/seedu/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 34
    }
  }
]
