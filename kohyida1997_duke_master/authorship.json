[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "run{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 29,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "T|1|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "D|0|return book|6/6/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "E|0|project meeting|6/8/2019 0000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "T|1|join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "E|1|Workshop|26/7/2020 1500"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 5
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class that serves as the main driver for the Duke application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that specifies file path to load storage from."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param filepath File path to load storage from."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        ui.printLogoAndGreet();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String command \u003d ui.readLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        while (!isDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                isDone \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            } catch (DukeException de) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                ui.printDukeError(de.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (!isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                command \u003d ui.readLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        //exit program"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        ui.closeInput();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        if (storage.storageUpdated()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                ui.printWritingChanges();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                storage.writeToDisk(taskList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                ui.printDoneWriting();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            } catch (DukeException de) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                ui.showWritingError();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Runs the main Duke program."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 71,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class to represent command to exit Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns true because this is an exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return True indicating this is a command to exit Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Executes the command to exit Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param taskList List of Tasks to be modified by command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param ui Ui object to be called by the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param storage Storage object to be called by the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 31
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Abstract class that represents a command given by the User for Duke to execute."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Executes the command that is intended by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param taskList List of Tasks to be modified by command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param ui Ui object to be called by the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param storage Storage object to be called by the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns true if the command is to exit Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return True or false depending if command is a ByeCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class representing a command to add a new Deadline to the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private Deadline newTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that initializes the description, date and timing of new"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Deadline to be added."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param description Description of deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param date Date of Deadline to be completed by."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param timing Timing of Deadline to be completed by."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public DeadlineCommand(String description, String date, String timing) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.newTask \u003d new Deadline(description, date, timing);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Executes the command to add the new Deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param taskList List of Tasks to be modified by command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param ui Ui object to be called by the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param storage Storage object to be called by the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        ui.printGotIt(newTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        ui.printNumTasks();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        storage.setChangedTrue();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns false as this is not an exit command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return False as not exit command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 48
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class representing user command to delete task at a specific index."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int toDelete;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor to initialize index of Task to delete from the List of Tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param toDelete Index to Delete at."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public DeleteCommand(int toDelete) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.toDelete \u003d toDelete;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param taskList List of Tasks to be modified by command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param ui Ui object to be called by the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param storage Storage object to be called by the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (toDelete \u003e\u003d taskList.size() || toDelete \u003c 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS! duke.task.Task \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        + (toDelete + 1) + \" doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                Task curr \u003d taskList.get(toDelete);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                ui.printDeleted(curr);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                taskList.deleteTask(toDelete);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                ui.printNumTasks();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                storage.setChangedTrue();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            ui.printDukeError(de.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns false as this is not an exit command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return False as not exit command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 57
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class representing user\u0027s command to mark a Task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int toComplete;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor to initialize index of task to mark as completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param toComplete Index of Task to complete."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public DoneCommand(int toComplete) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.toComplete \u003d toComplete;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Executes the Done command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param taskList List of Tasks to be modified by command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param ui Ui object to be called by the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param storage Storage object to be called by the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (toComplete \u003e\u003d taskList.size() || toComplete \u003c 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                throw new DukeException(\"OOPS! duke.task.Task \" + (toComplete + 1) + \" doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            Task curr \u003d taskList.get(toComplete);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            taskList.get(toComplete).setTaskCompleted();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            ui.printNice(curr);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            storage.setChangedTrue();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            ui.printDukeError(de.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns false as this is not an exit command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return False as not exit command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 53
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class representing user command to add new Event into list of Tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private Event newTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that initializes the description, date and timing of new"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Event to be added."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param description Description of Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param date Date of Event to attend."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param timing Timing of Event to attend."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public EventCommand(String description, String date, String timing) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.newTask \u003d new Event(description, date, timing);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Executes the command to add new Event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param taskList List of Tasks to be modified by command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param ui Ui object to be called by the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param storage Storage object to be called by the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        ui.printGotIt(newTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        ui.printNumTasks();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns false as this is not an exit command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return False as not exit command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 47
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class representing user\u0027s command to Find tasks via a keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private String toFind;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor specifying keyword to search by."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param toFind Keyword to find."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public FindCommand(String toFind) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.toFind \u003d toFind;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns false as is not exit command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return False as is not exit command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Executes the find command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param taskList TaskList of Tasks to find keyword in."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param ui Ui to print matching Tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param storage Storage to modify."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            Task currTask \u003d taskList.get(i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String[] descriptionTokens \u003d currTask.getDescription().split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            boolean isMatching \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            for (int j \u003d 0; j \u003c descriptionTokens.length; j++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                if (descriptionTokens[j].strip().equalsIgnoreCase(toFind)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    isMatching \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (isMatching) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                matchingTasks.addTask(currTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        if (matchingTasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            ui.printMatching(matchingTasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            ui.printNoMatching();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 62
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class representing user\u0027s command to list all Tasks currently tracked by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns false as this is not an exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return False as not exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Executes the command to list all tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param taskList List of Tasks to be modified by command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param ui Ui object to be called by the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param storage Storage object to be called by the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        ui.printTasks(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 31
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class representing user\u0027s command to add new To-do to list of Tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private Todo newTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor specifying description of new To-do task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param taskDescription Description of To-do task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public TodoCommand(String taskDescription) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        newTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Executes the command to add new To-do task to list of Tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param taskList List of Tasks to be modified by command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param ui Ui object to be called by the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param storage Storage object to be called by the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        ui.printGotIt(newTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        ui.printNumTasks();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        storage.setChangedTrue();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns false as this is not an exit command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return False as not exit command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 46
    }
  },
  {
    "path": "src/main/java/duke/datetime/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.datetime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Represents a date in the format Day/Month/Year."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private String dateString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static String[] MONTHS \u003d {\"January\", \"February\", \"March\", \"April\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        \"May\", \"June\", \"July\", \"August\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that specifies the String to represent as a"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Date object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param dateString String to parse into Date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Date(String dateString) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.dateString \u003d dateString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String[] tokens \u003d dateString.split(\"/\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.day \u003d Integer.parseInt(tokens[0]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.month \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.year \u003d Integer.parseInt(tokens[2]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns the initial String representation before parsing."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Initial String before it was parsed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return dateString;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns String representation of the Date object, using the names of the Months."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return String representation of this Date object in English."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String toReturn;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        if (day % 10 \u003d\u003d 2 \u0026\u0026 day !\u003d 12) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            toReturn \u003d day + \"nd\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } else if (day % 10 \u003d\u003d 3 \u0026\u0026 day !\u003d 13) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            toReturn \u003d day + \"rd\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } else if (day % 10 \u003d\u003d 1 \u0026\u0026 day !\u003d 11) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            toReturn \u003d day + \"st\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            toReturn \u003d day + \"th\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        toReturn \u003d toReturn + \" of \" + MONTHS[month - 1] + \" \" + year;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 59
    }
  },
  {
    "path": "src/main/java/duke/datetime/Timing.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.datetime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Represents a timing in the 24-hour clock format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Timing {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int minute;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private String timeString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private boolean meridiemFlag \u003d false; //to check whether AM or PM"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor the specifies the timing to be represented."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param timeString String representing timing, to be parsed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Timing(String timeString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.timeString \u003d timeString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        int timeInt \u003d Integer.parseInt(timeString);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.minute \u003d timeInt % 100;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.hour \u003d timeInt / 100;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        if (this.hour \u003e\u003d 12) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            meridiemFlag \u003d true; //means it is PM not AM"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns the initial string representing the timing before it was parsed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Initial string representation of the timing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return timeString;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns string representation of this timing in 12-hour clock format."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return 12-hour clock representation of this timing"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String toReturn \u003d (hour \u003d\u003d 0 || hour \u003d\u003d 12) ? \"12\" : hour % 12 + \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        if (minute !\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            toReturn \u003d toReturn + \".\" + minute;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String meridiem \u003d meridiemFlag ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return toReturn + meridiem;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 52
    }
  },
  {
    "path": "src/main/java/duke/dukeexception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class that handles the exceptions thrown by the Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that specifies the exception message associated with"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * this instance."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param message Error message to be printed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 16
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class to handle parsing of user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns the command that is intended by the user\u0027s input String."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param toParse User input String to be parsed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Command that is to be executed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @throws DukeException if input String toParse is not recognized"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *     or in the wrong format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public static Command parse(String toParse) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String[] tokens \u003d toParse.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String commandType \u003d tokens[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Command commandToReturn;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String dateString \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String timeString \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String toAdd \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            commandToReturn \u003d new ListCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            //\"done\" logic"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (tokens.length \u003c 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please specify task to complete\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            int toComplete \u003d Integer.parseInt(tokens[1]) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            commandToReturn \u003d new DoneCommand(toComplete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            //\"delete\" logic"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (tokens.length \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please specify task to delete\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            int toDelete \u003d Integer.parseInt(toParse.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            commandToReturn \u003d new DeleteCommand(toDelete);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            //toodo logic"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            for (int j \u003d 1; j \u003c tokens.length; j++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                toAdd \u003d toAdd + tokens[j] + \" \";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            commandToReturn \u003d new TodoCommand(toAdd.trim());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            //\"deadline\" logic"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            boolean dateFlag \u003d false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            //Check if both date and time are specified"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (toParse.split(\"/by\")[1].trim().split(\" \").length !\u003d 2) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! duke.datetime.Date and \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        + \"duke.datetime.Timing not specified correctly!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            for (int m \u003d 1; m \u003c tokens.length; m++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                if (tokens[m].equals(\"/by\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    dateFlag \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    if (dateFlag \u003d\u003d false) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        toAdd \u003d toAdd + tokens[m] + \" \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        if (m \u003d\u003d tokens.length - 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            timeString \u003d tokens[m];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            dateString \u003d tokens[m];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            commandToReturn \u003d new DeadlineCommand(toAdd.trim(), dateString.trim(), timeString.trim());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            //\"event\" logic"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            boolean timeFlag \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            //Check if both date and time are specified"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (toParse.split(\"/at\")[1].trim().split(\" \").length !\u003d 2) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! duke.datetime.Date and\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        + \" duke.datetime.Timing not specified correctly!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            for (int z \u003d 1; z \u003c tokens.length; z++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                if (tokens[z].equals(\"/at\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    timeFlag \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    if (timeFlag \u003d\u003d false) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        toAdd \u003d toAdd + tokens[z] + \" \";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        if (z \u003d\u003d tokens.length - 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            timeString \u003d tokens[z];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            dateString \u003d tokens[z];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            commandToReturn \u003d new EventCommand(toAdd.trim(), dateString.trim(), timeString.trim());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            commandToReturn \u003d new ByeCommand();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if (toParse.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                throw new DukeException(\"Cannot perform search with no keyword!\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String keyword \u003d toParse.split(\"find\")[1].strip();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            commandToReturn \u003d new FindCommand(keyword);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            //unrecognized command"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return commandToReturn;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 136
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Represents the internal storage of the computer that the User is loading from"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * and writing into."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /** File path associated with this Storage. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private boolean storageIsChanged \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that specifies the file path to load from and write into."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param filePath File Path associated with this Storage object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Marks that there are changes to the file path, and needs over-writing."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void setChangedTrue() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        storageIsChanged \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns a true or false indicating whether storage has been updated."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Status of storage."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public boolean storageUpdated() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return storageIsChanged;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Loads the Task data from this Storage\u0027s file path into an ArrayList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return ArrayList containing all Tasks from file path."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @throws DukeException If File is corrupted or in wrong format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            ArrayList\u003cTask\u003e toReturn \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            BufferedReader fileinput \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String fileData \u003d fileinput.readLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            while (fileData !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                String[] fileTokens \u003d fileData.split(\"\\\\|\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                String taskType \u003d fileTokens[0];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                int doneFlag \u003d Integer.parseInt(fileTokens[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                String taskDesc \u003d fileTokens[2];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                String taskDate;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                String taskTime;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                String[] dateTimeTokens;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    toReturn.add(new Todo(taskDesc, doneFlag));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    dateTimeTokens \u003d fileTokens[3].split(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    taskDate \u003d dateTimeTokens[0];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    taskTime \u003d dateTimeTokens[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    toReturn.add(new Deadline(taskDesc, taskDate, taskTime, doneFlag));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    dateTimeTokens \u003d fileTokens[3].split(\" \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    taskDate \u003d dateTimeTokens[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    taskTime \u003d dateTimeTokens[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    toReturn.add(new Event(taskDesc, taskDate, taskTime, doneFlag));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                fileData \u003d fileinput.readLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            fileinput.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            return toReturn;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            throw new DukeException(\"Error loading from specified file path\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Writes the new tasklist data into this Storage\u0027s file path."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param tasklist List of Tasks to write into file path."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @throws DukeException If writing process fails"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void writeToDisk(TaskList tasklist) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String lineToWrite;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            for (int k \u003d 0; k \u003c tasklist.size(); k++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                Task curr \u003d tasklist.get(k);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                int doneFlag \u003d curr.getDoneStatus() ? 1 : 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                if (curr instanceof Todo) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    lineToWrite \u003d \"T\" + \"|\" + doneFlag + \"|\" + curr.getDescription();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                } else if (curr instanceof Deadline) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    Deadline currDeadline \u003d (Deadline) curr;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    lineToWrite \u003d \"D\" + \"|\" + doneFlag + \"|\" + currDeadline.getDescription() + \"|\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            + currDeadline.getDate().getDateString() + \" \""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            + currDeadline.getTiming().getTimeString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    Event currEvent \u003d (Event) curr;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    lineToWrite \u003d \"E\" + \"|\" + doneFlag + \"|\" + currEvent.getDescription() + \"|\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            + currEvent.getDate().getDateString() + \" \""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            + currEvent.getTiming().getTimeString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                fw.write(lineToWrite + System.lineSeparator());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            throw new DukeException(\"Error writing to specified file path\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 131
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.datetime.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.datetime.Timing;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Represents an actual deadline that the user has to meet."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private Timing timing;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that specifies description, completion status"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * and timing of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param description Description of deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param date Date of deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param timing Timing of deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param done Completion status of deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Deadline(String description, String date, String timing, int done) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.timing \u003d new Timing(timing);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns date of the deadline. Represented"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * as a Date object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Date of deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns timing of the deadline. Represented"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * as a Timing object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Timing of deadline."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Timing getTiming() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that specifies description"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * and timing of the deadline."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param description Description of deadline."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param date Date of deadline."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param timing Timing of deadline."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Deadline(String description, String date, String timing) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.timing \u003d new Timing(timing);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns string representation of current Deadline, indicating"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * timing and completion status."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return String representation of deadline."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                + date.toString() + \", \" + timing.toString() + \")\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 76
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.datetime.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.datetime.Timing;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Represents an actual event that the user has to attend or complete."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private Timing timing;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that specifies description, completion status"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * and timing of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param date Date of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param timing Timing of Event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param done Completion status of event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Event(String description,String date, String timing, int done) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.timing \u003d new Timing(timing);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns date of the event. Represented"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * as a Date object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Date of event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns timing of the event. Represented"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * as a Timing object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Timing of event."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Timing getTiming() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that specifies description"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * and timing of the event."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param date Date of event."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param timing Timing of Event."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Event(String description, String date, String timing) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.timing \u003d new Timing(timing);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns string representation of current Event, indicating"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * timing and completion status."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return String representation of event."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                + date.toString() + \", \" + timing.toString() + \")\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 76
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Represents an actual task that is to be completed by the User."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /** Total number of tasks tracked by Duke. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor specifying the description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Task is not completed by default."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param description Description of task being created."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor specifying description and completion status of"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * the Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param description Description of task being created."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param done Completion status of task: 1 \u003d done; 0 \u003d not done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Task(String description, int done) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        if (done \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns an icon represent completion status of Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Either tick or X symbols as a String."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // Tick or Cross Symbol"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Marks the Task as completed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void setTaskCompleted() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns the completion status of Task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Completion status of Task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns description of Task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Description of Task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns String representation of Task, indicating"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * its completion status."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return String representation of Task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 83
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class represents a List of Tasks that the user has to complete."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private ArrayList\u003cTask\u003e tasksList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that initializes an empty list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that specifies the list of tasks this TaskList represents."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param tasksList ArrayList of tasks to be represented."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.tasksList \u003d tasksList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Adds the task t to the list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param t Task to add."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        tasksList.add(t);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Deletes a task at an specific index of the TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param index Index to delete at."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        tasksList.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks--;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns a Task at a specific index of the TaskList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param index Index of task to get."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Task at specific index."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return tasksList.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns the current size of the TaskList."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return Size of TaskList."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return tasksList.size();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns a String representation of the entire TaskList."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return String representation for every task in the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String toReturn \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        int size \u003d tasksList.size();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            Task curr \u003d tasksList.get(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            toReturn \u003d toReturn + (i + 1) + \".\" + curr.toString() + \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return toReturn.trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 79
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Represents an actual to-do task that is to be done by the User."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that specifies description of the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * To-do task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param description Description of To-do."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor that specifies description of the"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * To-do task and completion of status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param description Description of To-do."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param done Completion status of To-do"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Todo(String description, int done) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Returns string representation of current To-do, indicating"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * completion status."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return String representation of To-do."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 41
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " * Class that serves as UI, handles all user inputs and outputs."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /** Messages that will be printed by the Ui object. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static final String GREET \u003d \"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static final String GOODBYE \u003d \"Bye. Hope to see you again!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static final String NICE_ADDED \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static final String GOT_IT \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static final String DELETED \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static final String TASKS \u003d \"Here are your tasks in your list:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static final String MATCHING \u003d \"Here are your matching tasks in your list\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static final String NO_MATCHING \u003d \"There are no matching tasks!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /** Object to scan user input. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private BufferedReader userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Class constructor to create new Ui object and initialize BufferedReader"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * to scan user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.userInput \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    * Prints the total number of tasks that the user has so far."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printNumTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(\"Now you have \" + Task.totalTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    * Prints the Duke logo and greeting message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printLogoAndGreet() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(GREET);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints the Duke goodbye message."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(GOODBYE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints message to indicate successful completion of task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param doneTask Task that has just been completed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printNice(Task doneTask) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(NICE_ADDED);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(doneTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints message to indicate successful addition of task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param newTask New Task that has just been added."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printGotIt(Task newTask) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(GOT_IT);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(\" \" + newTask.toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints message to indicate successful deletion of task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param deletedTask Task that has been deleted."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printDeleted(Task deletedTask) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(DELETED);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(deletedTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Reads user\u0027s input for Duke to process."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @return User\u0027s input as a String."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            return userInput.readLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            showReadingError();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints an error message when reading input fails."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private void showReadingError() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.err.println(\"Error reading user input\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints an error message when closing input stream fails."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private void showCloseInputError() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.err.println(\"Error close user input stream\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints all the tasks that Duke has recorded so far."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param tasklist TaskList containing all Tasks to print."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printTasks(TaskList tasklist) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(TASKS);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(tasklist.toString());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Closes user input stream."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void closeInput() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            userInput.close();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            showCloseInputError();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints all matching tasks."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printMatching(TaskList taskList) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(MATCHING);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(taskList.toString());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints message indicating no matching tasks."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printNoMatching() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(NO_MATCHING);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints an error message when loading from Storage fails."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.err.println(\"Error loading from specified file path\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints an error message when writing to file path fails."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void showWritingError() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.err.println(\"Error writing to specified file path\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints message indicating writing process started."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printWritingChanges() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(\"Writing new changes to disk...\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints message indicating successful writing to file path."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printDoneWriting() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(\"Writing done!\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * Prints error message of DukeException caught."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     * @param errorMessage Error Message to be printed."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void printDukeError(String errorMessage) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.err.println(errorMessage);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 191
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void parse_unrecognizedCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            new Parser().parse(\"FE92D6ECB6AEC0000AC130DEBE41577B701ABACC96E63EF139564B999B284B33\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", de.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void parse_deadlineTooFewArguments_exceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            new Parser().parse(\"deadline\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a deadline cannot be empty.\", de.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void parse_eventTooFewArguments_exceptionThrown() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            new Parser().parse(\"event\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a event cannot be empty.\", de.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 41
    }
  },
  {
    "path": "src/test/java/duke/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void load_invalidFilePath_exceptionThrown() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            new Storage(\"data/wrongFile.txt\").load();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            assertEquals(\"Error loading from specified file path\", de.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 19
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void completeTask_success() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task t \u003d new Todo(\"Todo1\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        t.setTaskCompleted();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        assertEquals(t.getDoneStatus(), true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        t \u003d new Event(\"Event1\", \"1/1/1900\", \"0000\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        t.setTaskCompleted();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        assertEquals(t.getDoneStatus(), true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        t \u003d new Deadline(\"Deadline1\", \"1/1/1900\", \"0000\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        t.setTaskCompleted();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        assertEquals(t.getDoneStatus(), true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 22
    }
  }
]
