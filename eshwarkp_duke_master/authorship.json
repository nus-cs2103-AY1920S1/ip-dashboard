[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 28,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "# A Simple User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### Feature 1 - List"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### `list`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Prints the list containing all tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`1.[T][+] test`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### Feature 2 - Todo"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### `todo`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Adds a todo task to the list, a todo has no specific date or time."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`todo test`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`[T][-] test`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`Now you have 1 task in the list.`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### Feature 3 - Deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### `deadline`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Adds a deadline task to the list, a deadline has a specific due date and time."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`deadline return book /by 2/12/2019 1800`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`[D][-] return book (by: 2/12/2019 1800)`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### Feature 4 - Event"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### `event`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Adds an event task to the list, a event will take place at specific date and time."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`event project meeting /at 12/12/2019 1800`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`[E][-] project meeting (at: 12/12/2019 1800)`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### Feature 5 - Done"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### `done`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Marks the task at the specified index as completed."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`Nice! I\u0027ve marked this task as done:`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`[T][+] test`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### Feature 6 - Find"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### `find`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Finds any tasks containing the given keyword."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`Here are the matching tasks in your list:`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`1.[D][-] return book (by: 2/12/2019 1800)`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### Feature 7 - Delete"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### `delete`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Removes the task at the specified index from the list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`Noted. I\u0027ve removed this task:`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`[E][-] project meeting (at: 12/12/2019 1800)`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### Feature 8 - Bye"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### `bye`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### Feature 9 - Help"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "### `help`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Provides a summary of available commands to the user."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "`Welcome to Help Page`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "..."
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 158,
      "-": 13
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "T | + | test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "T | + | walk"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "D | + | return book  | 12/12/2019 2030"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "T | - | test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "D | - | return book  | 2/12/2019 1800"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "E | - | project meeting  | 12/12/2019 1800"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 6
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * Represents a user command. A \u003ccode\u003eAddCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * with a valid task creation command e.g., \u003ccode\u003eevent test code /at 14/09/2019 0830\u003c/code\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return ui.addTaskMessage(tasks, task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 19
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * Represents a user command. A \u003ccode\u003eByeCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * with a valid exit command e.g., \u003ccode\u003ebye\u003c/code\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return ui.byeMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 16
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * Represents the overall command class. A \u003ccode\u003eCommand\u003c/code\u003e object inherits"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * from this abstract command class. e.g., \u003ccode\u003ebye, delete #index\u003c/code\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 12
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * Represents the date and time for events and deadlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * A \u003ccode\u003eDateTime\u003c/code\u003e object will be created to represent"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * the date and time of tasks. e.g., \u003ccode\u003eevent test code /at 14/09/2019 0830\u003c/code\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public DateTime (String input){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void setDateAndTime() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            date \u003d formatter.parse(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            throw new DukeException(\"Invalid time and date format. Please enter in dd/MM/yyyy HHmm format\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Date getDateAndTime() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return this.input;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 38
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * Represents a deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * with a valid task creation command e.g., \u003ccode\u003edeadline homework /by 14/09/2019 0830\u003c/code\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected DateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Deadline(String description, DateTime by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super.changeToFileFormat(\u0027D\u0027, description, by);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 19
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            tasks.removeTask(index);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return ui.removeTaskMessage(tasks, task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return \"OOPS!!! That task in not in the list!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 19
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            task.setDone(true);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return ui.doneTaskMessage(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return \"OOPS!!! That task in not in the list!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFromFile());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    String getResponse(String input) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return ui.byeMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return Parser.parse(input).execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 27,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"OOPS!!!\" + this.message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 11
    }
  },
  {
    "path": "src/main/java/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public ErrorCommand(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected DateTime at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Event(String description, DateTime at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super.changeToFileFormat(\u0027E\u0027, description, at);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at +\")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 14
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private TaskList foundTaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        foundTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            if (tasks.getTask(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                foundTaskList.addTask(tasks.getTask(i));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (foundTaskList.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return ui.findTaskMessage(foundTaskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return \"OOPS!!! No matches found!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 24
    }
  },
  {
    "path": "src/main/java/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        StringBuilder help \u003d new StringBuilder();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        help.append(\"Welcome to Help Page\\n\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        help.append(\"----------------------\\n\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        help.append(\"*Commands, Descriptions and Examples Below:*\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        help.append(\"list : Displays all items in list.\\n\" + \"Example - list\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        help.append(\"todo : A task with no specific date and time.\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                \"Example - todo homework\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        help.append(\"deadline : A task that is due by specific date and time.\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                \"Example - deadline return book /by 2/12/2019 1800\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        help.append(\"event : A task occurring at a specific date and time\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                \"Example - event project meeting /at 12/12/2019 1800\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        help.append(\"done : Marks task at specified index in the list as completed.\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                \"Example - done 1\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        help.append(\"find : Finds a task that contains the keyword given.\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                \"Example - find book\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        help.append(\"delete : Removes task at specified index from the list.\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                \"Example - delete 3\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        help.append(\"bye : Terminates the program.\\n\" + \"Example - bye\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return help.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 26
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 7
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return ui.printList(tasks);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Duke duke \u003d new Duke(\"./duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            stage.setTitle(\"DukeBot\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        scrollPane.setFitToHeight(true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                DialogBox.getDukeDialog(ui.showWelcome(), dukeImage));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private void handleUserInput() throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 54
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String command \u003d getCommand(fullCommand);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            DateTime dateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    return new ListCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    description \u003d getDescription(fullCommand, command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    index \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    return new DoneCommand(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    description \u003d getDescription(fullCommand, command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    return new AddCommand(new Todo(description));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    description \u003d getDescription(fullCommand, command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    dateTime \u003d getDateAndTime(fullCommand, command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    return new AddCommand(new Deadline(description, dateTime));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    description \u003d getDescription(fullCommand, command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    dateTime \u003d getDateAndTime(fullCommand, command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    return new AddCommand(new Event(description, dateTime));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    description \u003d getDescription(fullCommand, command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    index \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    return new DeleteCommand(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    description \u003d getDescription(fullCommand, command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    return new FindCommand(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    return new ByeCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    return new HelpCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return new ErrorCommand(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public static String getCommand(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            int index \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            command \u003d input.substring(0, index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            command \u003d input;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public static String getDescription(String input, String command) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String action \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (input.contains(\" \") \u0026\u0026 input.contains(\"/\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            int index \u003d input.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String removeCommand \u003d input.substring(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String[] split \u003d removeCommand.split(\"/\", 2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            action \u003d split[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } else if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            action \u003d split[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (action.equals(\"\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            throw new DukeException(\"The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return action;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public static DateTime getDateAndTime(String input, String command) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String detail \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        DateTime dateTime;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (input.contains(\" \") \u0026\u0026 input.contains(\"/\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            int index \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String removeCommand \u003d input.substring(index);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            String[] split \u003d removeCommand.split(\"/\", 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            index \u003d split[1].indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            detail \u003d split[1].substring(index);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (detail.equals(\"\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            throw new DukeException(\"The time and date of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            dateTime \u003d new DateTime(detail);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            dateTime.setDateAndTime();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 102
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFromFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        readFileContents();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void readFileContents() throws FileNotFoundException{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        File f \u003d new File(this.filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            readAsObject(s.nextLine());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void writeToFile(TaskList tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ArrayList\u003cTask\u003e updatedTaskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            for (Task task : updatedTaskList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                String text \u003d task.getFileFormat();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                fw.write(text + System.lineSeparator());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void readAsObject(String item) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Task task \u003d new Task(\"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        char type \u003d item.charAt(0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String[] split \u003d item.split(\" \\\\| \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        boolean isValidTask \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                task \u003d new Todo(split[2]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                task \u003d new Deadline(split[2], new DateTime(split[3]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                task \u003d new Event(split[2], new DateTime(split[3]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                System.out.println(\"OOPS!!! There is an invalid task in the file!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                isValidTask \u003d false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (isValidTask) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            if (split[1].equals(\"+\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                task.setDone(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 73
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected char fileFormatType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected String fileFormatDescription;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected DateTime fileFormatDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String getDescription() { return this.description; }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return (isDone ? \"+\" : \"-\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void changeToFileFormat(char type, String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.fileFormatType \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.fileFormatDescription \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void changeToFileFormat(char type, String description, DateTime dateTime) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.fileFormatType \u003d type;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.fileFormatDescription \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.fileFormatDateTime \u003d dateTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String getFileFormat() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        if (fileFormatType \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return fileFormatType + \" | \" + getStatusIcon() + \" | \" + fileFormatDescription;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            return fileFormatType + \" | \" + getStatusIcon() + \" | \" + fileFormatDescription + \" | \" + fileFormatDateTime.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 47
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 33
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        super.changeToFileFormat(\u0027T\u0027, description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 12
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    private static final String DIVIDER \u003d \"________________________________________\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"    \" + DIVIDER;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return DIVIDER + \"  \\nWelcome to Duke!\\n\" + DIVIDER"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                + \" \\nIf you require any assistance,\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                \"   \\nplease type (help) to see a list of valid commands.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"    No previous data found!\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String printList(TaskList tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            output.append(\"\\n    \" + index + \".\" + tasks.getTask(i));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String doneTaskMessage(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"    Nice! I\u0027ve marked this task as done:\\n\" + \"    \" + task;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String addTaskMessage(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"    Got it. I\u0027ve added this task:\\n\" + \"    \" + task +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                \"\\n    Now you have \" + taskList.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String removeTaskMessage(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"    Noted. I\u0027ve removed this task:\\n\" + \"    \" + task +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "                \"\\n    Now you have \" + taskList.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String findTaskMessage(TaskList taskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String output \u003d printList(taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"    Here are the matching tasks in your list:\" + output;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public String byeMessage() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        return \"    Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 58
    }
  },
  {
    "path": "src/main/java/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "D | + | return book  | 2/12/2019 1800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "T | - | test"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "E | - | go home  | 14/09/1995 2030"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 3
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 19
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void getTaskListTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        TaskList taskList \u003d new TaskList(testList);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        assertEquals(testList, taskList.getTaskList());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void addTaskTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Task testTask \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        testList.add(testTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        taskList.addTask(testTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        assertEquals(testList, taskList.getTaskList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void removeTaskTest() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Task testTask \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        testList.add(testTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        TaskList taskList \u003d new TaskList(testList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        taskList.removeTask(0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        assertEquals(testList, taskList.getTaskList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void getTaskTest() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Task testTask \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        testList.add(testTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        TaskList taskList \u003d new TaskList(testList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        assertEquals(testTask, taskList.getTask(0));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void getSizeTest() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Task testTask \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        testList.add(testTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        TaskList taskList \u003d new TaskList(testList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        assertEquals(testList.size(), taskList.getSize());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 51
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        String todo \u003d \"[T][-] test\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        Task testTask \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "        assertEquals(todo, testTask.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 12
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eshwarkp"
        },
        "content": "T | + | test"
      }
    ],
    "authorContributionMap": {
      "eshwarkp": 1
    }
  }
]
