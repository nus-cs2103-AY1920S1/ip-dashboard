[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    String dueDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public Deadline (String task, String dueDate) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public Deadline (String task, String dueDate, boolean complete) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        super(task, complete);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public String toStringForFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String isComplete \u003d this.complete ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return \"D | \" + isComplete + \" | \" + task + \" | \" + dueDate; "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Abhiman2211": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public Duke(String filePath) throws IOException, DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        ui.showGreetingMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        while (! input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "                parser.processCommand(input, taskList, ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            } "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "                System.err.println(e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            finally {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "                input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Duke duke \u003d new Duke(\"/Users/abhimanyadav/Desktop/Duke/duke/src/main/java/dukeTasks.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Abhiman2211": 36,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Abhiman2211": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    String timeline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public Event (String task, String timeline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.timeline \u003d timeline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public Event (String task, String timeline, boolean complete) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        super(task, complete);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.timeline \u003d timeline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public String toStringForFile() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String isComplete \u003d complete ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return \"E | \" + isComplete + \" | \" + task + \" | \" + timeline; "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timeline + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Abhiman2211": 24
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static String getMonth(String month) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        int monthIndex \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (monthIndex \u003e 12) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The month you inputted is not valid.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return new DateFormatSymbols().getMonths()[monthIndex - 1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void validateHour(int hour) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (hour \u003e 24 || hour \u003c 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The time you inputted is not valid.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void validateMinute(int minute) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (minute \u003e 59 || minute \u003c 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The time you inputted is not valid.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static String parseTime(String timeDetail) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        int hour \u003d (Integer.parseInt(timeDetail)/100);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        validateHour(hour);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String actualHour \u003d hour % 12 \u003d\u003d 0 ? \"12\" : String.valueOf(hour % 12); "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        int minute \u003d Integer.parseInt(timeDetail) % 100;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        validateMinute(minute);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String meridiem \u003d hour \u003e\u003d 12 \u0026\u0026 hour \u003c 24 ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String processedMinute \u003d minute \u003d\u003d 0 ? \"\" : \".\" + String.valueOf(minute);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return actualHour + processedMinute + meridiem;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static String parseDate(String dateDetail) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String[] dateBreakup \u003d dateDetail.split(\"/\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String month \u003d getMonth(dateBreakup[1]);    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        int lastDigitOfDay \u003d Integer.parseInt(dateBreakup[0]) % 10;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String dayEnding \u003d lastDigitOfDay \u003d\u003d 1 ? \"st\" : lastDigitOfDay \u003d\u003d 2 ? \"nd\" : "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "                lastDigitOfDay \u003d\u003d 3 ? \"rd\" : \"th\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return dateBreakup[0] + dayEnding + \" of \" + month + \" \" + dateBreakup[2]; "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static String processDeadlineDate(String dateDetails) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String date \u003d dateDetails.split(\" \")[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String time \u003d dateDetails.split(\" \")[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return parseDate(date) + \", \" + parseTime(time);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static String processEventDate(String dateDetails) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String date \u003d dateDetails.split(\" \")[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String time \u003d dateDetails.split(\" \")[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String[] timeDetails \u003d time.split(\"-\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return parseDate(date) + \", \" + parseTime(timeDetails[0]) + \"-\" + parseTime(timeDetails[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public void processCommand(String input, TaskList taskList, Ui ui, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String[] command \u003d input.split(\" \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (command[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            ui.printTasks(taskList.getTaskList());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        } else if (command[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            deleteTask(input, taskList, storage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        } else if (command[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            taskDone(input, taskList, storage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            addTask(input, taskList, storage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void deleteTask(String input, TaskList taskList, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String[] command \u003d input.split(\" \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (command.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The index of task to be deleted must be mentioned.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "                taskList.deleteTask(Integer.parseInt(command[1]), storage);;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            } "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The index of task to be deleted must be a number.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void taskDone(String input, TaskList taskList, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String[] command \u003d input.split(\" \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (command.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The completed task\u0027s index must be mentioned.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "                taskList.markAsDone(Integer.parseInt(command[1]), storage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            } "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The completed task\u0027s index must be a number.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void addToDo(String details, TaskList list, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Task task \u003d new ToDos(details);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        list.addTask(task, storage);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Ui.addSuccess(task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void addDeadline(String details, TaskList list, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String[] detAsArr \u003d details.split(\" /by \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Ui.validateDeadlineDetails(detAsArr);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String deadline \u003d detAsArr[0];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String dueDetail \u003d detAsArr[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Task task \u003d new Deadline(deadline, processDeadlineDate(dueDetail));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        list.addTask(task, storage);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Ui.addSuccess(task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void addEvent(String details, TaskList list, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String[] detAsArr \u003d details.split(\" /at \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Ui.validateEventDetails(detAsArr);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String event \u003d detAsArr[0];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String dueDetail \u003d detAsArr[1];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Task task \u003d new Event(event, processEventDate(dueDetail));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        list.addTask(task, storage);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Ui.addSuccess(task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void addTask(String input, TaskList list, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String[] inputAsArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Ui.validateDetail(inputAsArr);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String command \u003d inputAsArr[0];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String rest \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            addToDo(rest, list, storage);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            addDeadline(rest, list, storage);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            addEvent(rest, list, storage);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(\"Now you have \" + list.getTaskList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Abhiman2211": 145
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static Task createTaskFromFile (String s) throws DukeException{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String[] command \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        boolean isPending \u003d command[1].equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        switch (command[0]) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            return new ToDos(command[2], isPending);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            return new Deadline(command[2], command[3], isPending);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            return new Event(command[2], command[3], isPending);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"Uncategorizable task.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public void addTaskToFile(Task task) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        fw.write(task.toStringForFile() + System.lineSeparator());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        Scanner scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            list.add(createTaskFromFile(scan.nextLine()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        scan.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public void writeToFile(String filePath, ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            fw.write(t.toStringForFile() + System.lineSeparator());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "     * @return the filePath"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Abhiman2211": 64
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    Boolean complete;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    String done \u003d \"[✓] \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    String pending \u003d \"[✗] \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.complete \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public Task(String task, boolean isPending) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.complete \u003d isPending;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public String toStringForFile () {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return \"wrong because of this\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (this.complete) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            return done + task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            return pending + task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.complete \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(this.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Abhiman2211": 37
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "     * @return the taskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public void addTask (Task task, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        storage.addTaskToFile(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public void deleteTask(int index, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            this.taskList.get(index - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The item specified does not exist.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(taskList.get(index - 1).toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        this.taskList.remove(index - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        storage.writeToFile(storage.getFilePath(), taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public void markAsDone(int index, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            taskList.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            storage.writeToFile(storage.getFilePath(), taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        } "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The item specified does not exist.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Abhiman2211": 48
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public ToDos (String task) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public ToDos (String task, boolean complete) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        super(task, complete);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public String toStringForFile() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        String isComplete \u003d this.complete ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return \"T | \" + isComplete + \" | \" + task; "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Abhiman2211": 22
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public void showGreetingMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public void printTasks(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            System.out.println(i + \".\" + task.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            i +\u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void validateDetail(String[] detail) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (detail.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        } else if (! detail[0].equals(\"todo\") \u0026\u0026 ! detail[0].equals(\"event\") \u0026\u0026! detail[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        } else if (detail.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a \" + detail[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void validateHour(String[] detail) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (detail.length !\u003d 2) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The due date of a deadline must be specified.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void validateDeadlineDetails(String[] detail) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (detail.length !\u003d 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The due date of a deadline must be specified.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void validateEventDetails(String[] detail) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        if (detail.length !\u003d 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The timeline of an event must be specified.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    public static void addSuccess(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "        System.out.println(\"\\t\" + task.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Abhiman2211": 60
    }
  },
  {
    "path": "src/main/java/dukeTasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "D | 0 | return book | 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "E | 1 | attend party | 4th of June 2019, 6.30pm-10.30pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "T | 0 | meet parents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "D | 0 | return book | 22nd of November 2019, 7pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Abhiman2211"
        },
        "content": "T | 1 | meet friends"
      }
    ],
    "authorContributionMap": {
      "Abhiman2211": 5
    }
  }
]
