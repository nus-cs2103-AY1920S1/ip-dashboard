[
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 1 | new book"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 2
    }
  },
  {
    "path": "src/main/java/duke/DateTimeHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DateTimeHelper {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private static final String[] ordinals \u003d {  \"0th\",  \"1st\",  \"2nd\",  \"3rd\",  \"4th\",  \"5th\",  \"6th\",  \"7th\",  \"8th\",  \"9th\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            \"10th\", \"11th\", \"12th\", \"13th\", \"14th\", \"15th\", \"16th\", \"17th\", \"18th\", \"19th\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            \"20th\", \"21st\", \"22nd\", \"23rd\", \"24th\", \"25th\", \"26th\", \"27th\", \"28th\", \"29th\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            \"30th\", \"31st\" };"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public static String convertDateToString(String dateAndTime) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String date \u003d dateAndTime.split(\" \")[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String time \u003d dateAndTime.split(\" \")[1];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return parseDate(date) + \", \" + parseTime(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private static String parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        format.setLenient(false);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            format.parse(date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            throw new DukeException(\"Invalid date format\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String[] ddmmyyyy \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String month \u003d (Month.of(Integer.parseInt(ddmmyyyy[1]))).toString().toLowerCase();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return ordinals[Integer.parseInt(ddmmyyyy[0])] + \" of \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                + month.substring(0,1).toUpperCase()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                + month.substring(1)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                + \" \" + ddmmyyyy[2];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private static String parseTime(String time) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(time);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (!(time.matches(\"([0-1][0-9][0-5][0-9])\") || time.matches(\"(2[0-3][0-5][0-9])\"))) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            throw new DukeException(\"Invalid time format, must be between 0000 and 2359\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        int timeInt \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (timeInt \u003c 100) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return formatTime(timeInt + 1200, \"am\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (timeInt \u003c 1200 ){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return formatTime(timeInt, \"am\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (timeInt \u003c 1300) { // \u0026\u0026 timeInt \u003e\u003d 1200"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return formatTime(timeInt, \"pm\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }else { // \u003e 1300 pm"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return formatTime(timeInt - 1200, \"pm\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private static String formatTime(int timeInt, String ampm) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (timeInt % 100 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return (timeInt / 100) + ampm;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return (timeInt / 100) + \".\" + (timeInt % 100) + ampm;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 67
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        new Duke(\"/Users/stephenchua/duke/src/main/data/duke.txt\").run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "scwaterbear": 40
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                fullCommand \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Todos must have a description\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new AddCommand(new Todo(fullCommand));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                fullCommand \u003d fullCommand.substring(9);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Deadlines must have a description\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            String[] arguments \u003d fullCommand.split(\"/by\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            if (arguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Deadlines must have exactly one deadline\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new AddCommand(new Deadline(arguments[0].trim(), DateTimeHelper.convertDateToString(arguments[1].trim())));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                fullCommand \u003d fullCommand.substring(6);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Events must have a description\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            String[] arguments \u003d fullCommand.split(\"/at\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            if (arguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Events must have exactly one time\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new AddCommand(new Event(arguments[0].trim(), DateTimeHelper.convertDateToString(arguments[1].trim())));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.matches(\"delete ([1-9]|[1-9][0-9]|100)\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            int deleteIndex \u003d Integer.parseInt(fullCommand.substring(7));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new DeleteCommand(deleteIndex - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.matches(\"done ([1-9]|[1-9][0-9]|100)\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            int displayNumber \u003d Integer.parseInt(fullCommand.substring(5));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new DoneCommand(displayNumber - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new UnknownCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 65
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        f \u003d new File(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            if (!f.createNewFile()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "//                System.out.println(\"New file created\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "//            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "//                System.out.println(\"File already exists\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                //read file contents into List"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                FileReader fr \u003d new FileReader(f);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                String line;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                while((line \u003d br.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    String[] lines \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    boolean isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    if (lines[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        isDone \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        isDone \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    if (lines[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        tasks.add(new Todo(lines[2], isDone));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    } else if (lines[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        tasks.add(new Deadline(lines[2], lines[3], isDone));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    } else if (lines[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        tasks.add(new Event(lines[2],lines[3], isDone));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        System.out.println(\"Corrupted data.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            throw new DukeException(\"There has been an IOException while creating the data file.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void saveDataToFile(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        //write to a completely new file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            FileWriter fw \u003d new FileWriter(f, false);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            Iterator\u003cTask\u003e itr \u003d tasks.iterator();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            while (itr.hasNext()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                String s \u003d itr.next().dataFormat();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                fw.write(s + \"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            throw new DukeException(\"Unable to write to datafile.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 82
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    Scanner s;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    //WHY IS THIS GIVING PROBLEMS?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "       return s.nextLine().trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(\"Error loading data from file\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 35
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    Task t;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public AddCommand(Task t) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.t \u003d t;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        tasks.addTask(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            System.out.println(\"Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        persistState(tasks, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 31
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    protected void persistState(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        storage.saveDataToFile(tasks.getAllTasks());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 19
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        Task t \u003d tasks.removeTask(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            System.out.println(\"Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        persistState(tasks, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            Task t \u003d tasks.setIsDone(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! There is no task number \" + (index + 1));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        persistState(tasks, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public ExitCommand() { }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        tasks.printTasks();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 12
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public UnknownCommand() {}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String errorDescription;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public DukeException(String errorDescription) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(errorDescription);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.errorDescription \u003d errorDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return errorDescription;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String dataFormat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"D\" + super.dataFormat() + \" | \" + by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String dataFormat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"E\" + super.dataFormat() + \" | \" + at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    protected void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String dataFormat() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        int isDoneInt;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            isDoneInt \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            isDoneInt \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \" | \" + isDoneInt + \" | \" + description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 39
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            System.out.println((i + 1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Task setIsDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            tasks.get(index).isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return tasks.get(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! There is no task number \" + (index + 1));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Task removeTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return tasks.remove(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! There is no task number \" + (index + 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String dataFormat() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"T\" + super.dataFormat();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 21
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void some_test_name(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        Duke d \u003d new Duke();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 12
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void format_of_test_name(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        Storage storage \u003d new Storage(\"/Users/stephenchua/duke/src/main/data/duke.txt\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "//        assertEquals(2, storage.tasks.to);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 12
    }
  }
]
