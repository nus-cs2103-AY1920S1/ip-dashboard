[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "T|1| read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "D|0| return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "D|1| return book | 2nd of December 0019, 6:00pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "E|1| return book | 2nd of December 0019, 7:00pm"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 4
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Runs the entire logic of the program. showWelcome() displays the duke logo and greets"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * the user. isExit boolean ensures that the while loop doesn\u0027t end until the user input of"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * \"bye\" is encountered. User\u0027s input will be read through the ui and then parsed to give"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * a Command object. The specific command will then be executed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * This method has try and catch blocks within to help with catching both DukeException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * and ParseException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Runs the main method to load the duke.txt file into the program and then calls the run method"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public static void main(String[] args) throws DukeException, ParseException{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        new Duke(\"/Users/lawnce/Desktop/duke/data/duke.txt\").run();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 63,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.initials.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Creates new deadline task using a TaskList, Ui and Storage, it will then be added into the taskArrayList that"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * was loaded into the TaskList as param."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param tasks the TaskList to be used"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param ui the Ui to be used"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param storage the Storage to be used"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @throws ParseException if the date is not able to be parsed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        int end2 \u003d ui.getRemainingWords().indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        if (end2 \u003e 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String description2 \u003d ui.getRemainingWords().substring(1, ui.getRemainingWords().indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String time2 \u003d ui.getRemainingWords().substring(end2 + 4).trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            if (time2.isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                throw new DukeException(\"☹OOPS!!! Wrong format\u0027\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                Deadline k \u003d new Deadline(description2, makeDate(time2));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                tasks.add(k);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                storage.writeData();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                System.out.println(k);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                System.out.println(\"Now you have \" + tasks.getTaskArrayList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            throw new DukeException(\"☹OOPS!!! Wrong format\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns true or false regarding whether this method will end the while loop in the duke method run()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return false or true"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String makeDate(String input) throws ParseException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String ordinalIndicator;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        Date date \u003d DATE_FORMAT.parse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String day \u003d new SimpleDateFormat(\"dd\").format(date);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String month \u003d new SimpleDateFormat(\"MMMMMMMMMMM\").format(date);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String year \u003d new SimpleDateFormat(\"yyyy\").format(date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String time \u003d new SimpleDateFormat(\"h:mma\").format(date).toLowerCase();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        int int_day \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        if (int_day \u003e\u003d 11 \u0026\u0026 int_day \u003c\u003d 13) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ordinalIndicator \u003d \"th\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else if (int_day % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ordinalIndicator \u003d \"st\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else if (int_day % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ordinalIndicator \u003d \"nd\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else if (int_day % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ordinalIndicator \u003d \"rd\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ordinalIndicator \u003d \"th\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String outputDate \u003d int_day + ordinalIndicator + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return outputDate;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 81
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Creates new deadline task using a TaskList, Ui and Storage, it will then be added into the taskArrayList that"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * was loaded into the TaskList as param."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param tasks the TaskList to be used"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param ui the Ui to be used"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param storage the Storage to be used"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        if (ui.getRemainingWords().isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            throw new DukeException(\"☹OOPS!!! Wrong format\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        int position \u003d Integer.parseInt(ui.getRemainingWords().trim());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(tasks.getTaskArrayList().get(position-1));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        tasks.delete(position-1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        storage.writeData();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getTaskArrayList().size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns true or false regarding whether this method will end the while loop in the duke method run()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return false or true"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 39
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Creates new deadline task using a TaskList, Ui and Storage, it will then be added into the taskArrayList that"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * was loaded into the TaskList as param."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param tasks the TaskList to be used"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param ui the Ui to be used"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param storage the Storage to be used"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        index \u003d Integer.parseInt(ui.getRemainingWords().trim());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        tasks.getTaskArrayList().get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        storage.writeData();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(tasks.getTaskArrayList().get(index - 1));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns true or false regarding whether this method will end the while loop in the duke method run()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return false or true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 35
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.initials.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Creates new deadline task using a TaskList, Ui and Storage, it will then be added into the taskArrayList that"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * was loaded into the TaskList as param."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param tasks the TaskList to be used"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param ui the Ui to be used"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param storage the Storage to be used"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @throws ParseException if the date is not able to be parsed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, ParseException{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        int end \u003d ui.getRemainingWords().indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        if (end \u003e 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String description \u003d ui.getRemainingWords().substring(1, ui.getRemainingWords().indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String time \u003d ui.getRemainingWords().substring(end + 4).trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            if (time.isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                throw new DukeException(\"☹OOPS!!! Wrong format\u0027\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                Event m \u003d new Event(description, makeDate(time));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                tasks.add(m);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                storage.writeData();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                System.out.println(m);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                System.out.println(\"Now you have \" + tasks.getTaskArrayList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            throw new DukeException(\"☹OOPS!!! Wrong format\u0027\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns true or false regarding whether this method will end the while loop in the duke method run()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return false or true"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String makeDate(String input) throws ParseException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String ordinalIndicator;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        Date date \u003d DATE_FORMAT.parse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String day \u003d new SimpleDateFormat(\"dd\").format(date);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String month \u003d new SimpleDateFormat(\"MMMMMMMMMMM\").format(date);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String year \u003d new SimpleDateFormat(\"yyyy\").format(date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String time \u003d new SimpleDateFormat(\"h:mma\").format(date).toLowerCase();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        int int_day \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        if (int_day \u003e\u003d 11 \u0026\u0026 int_day \u003c\u003d 13) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ordinalIndicator \u003d \"th\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else if (int_day % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ordinalIndicator \u003d \"st\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else if (int_day % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ordinalIndicator \u003d \"nd\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else if (int_day % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ordinalIndicator \u003d \"rd\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ordinalIndicator \u003d \"th\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String outputDate \u003d int_day + ordinalIndicator + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return outputDate;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 82
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Creates new deadline task using a TaskList, Ui and Storage, it will then be added into the taskArrayList that"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * was loaded into the TaskList as param."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param tasks the TaskList to be used"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param ui the Ui to be used"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param storage the Storage to be used"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns true or false regarding whether this method will end the while loop in the duke method run()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return false or true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 31
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.initials.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    String toFind;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    ArrayList\u003cTask\u003e toPrintArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Creates new deadline task using a TaskList, Ui and Storage, it will then be added into the taskArrayList that"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * was loaded into the TaskList as param."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param tasks the TaskList to be used"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param ui the Ui to be used"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param storage the Storage to be used"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        toFind \u003d ui.getRemainingWords().trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        ArrayList\u003cTask\u003e arrayList \u003d tasks.getTaskArrayList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        int j \u003d arrayList.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        for (int i \u003d 0; i \u003c arrayList.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            Task currentTask \u003d arrayList.get(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String currentLine \u003d currentTask.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            if (currentLine.contains(toFind)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                toPrintArrayList.add(currentTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        printArrayList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void printArrayList() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        for (int i \u003d 0; i \u003c toPrintArrayList.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            System.out.println(i + 1 + \".\" + toPrintArrayList.get(i).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Creates new deadline task using a TaskList, Ui and Storage, it will then be added into the taskArrayList that"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * was loaded into the TaskList as param."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param tasks the TaskList to be used"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param ui the Ui to be used"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param storage the Storage to be used"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTaskArrayList().size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            System.out.println(i + 1 + \".\" + tasks.getTaskArrayList().get(i));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns true or false regarding whether this method will end the while loop in the duke method run()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return false or true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 35
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.initials.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Creates new deadline task using a TaskList, Ui and Storage, it will then be added into the taskArrayList that"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * was loaded into the TaskList as param."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param tasks the TaskList to be used"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param ui the Ui to be used"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param storage the Storage to be used"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String remaining \u003d ui.getRemainingWords().trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            if (remaining.equals(\"\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                throw new DukeException(\"☹OOPS!!! The Description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            Todo t \u003d new Todo(remaining.substring(0));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            storage.writeData();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getTaskArrayList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns true or false regarding whether this method will end the while loop in the duke method run()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return false or true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 49
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 8
    }
  },
  {
    "path": "src/main/java/duke/initials/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.initials;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns a string that represents deadline that can be input into the txt file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * This method transforms the task into the specific format for the txt file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return the data for this task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return \"D\" + \"|\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                (isDone ? \"1\" : \"0\") + \"| \" + description + \"| \" + this.by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 25
    }
  },
  {
    "path": "src/main/java/duke/initials/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.initials;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns a string that represents deadline that can be input into the txt file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * This method transforms the task into the specific format for the txt file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return the data for this task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return \"E\" + \"|\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                (isDone ? \"1\" : \"0\") + \"| \" + description + \"| \" + this.at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 25
    }
  },
  {
    "path": "src/main/java/duke/initials/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.initials;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Changes the isDone boolean on tasks to true, this will affect the icon seen in the txt file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * as well as on the list within the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public abstract String getData();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return \u0027[\u0027 + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 30
    }
  },
  {
    "path": "src/main/java/duke/initials/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.initials;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns a string that represents deadline that can be input into the txt file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * This method transforms the task into the specific format for the txt file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return the data for this task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return \"T\" + \"|\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                (isDone ? \"1\" : \"0\") + \"| \" + description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 23
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Reads the first word of user input as command and recognises what type of command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * the user is looking for"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param command first word of user input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return new Command object based on what the user input is"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @throws DukeException if the user\u0027s input is not recognised"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            case (\"list\"):"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            case (\"bye\"):"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            case (\"done\"):"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                return new DoneCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            case (\"delete\"):"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                return new DeleteCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            case (\"deadline\"):"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                return new DeadlineCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            case (\"todo\"):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                return new TodoCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            case (\"event\"):"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                return new EventCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            case (\"find\") :"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                return new FindCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                throw new DukeException(\"☹OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 49
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.initials.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.initials.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.initials.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.initials.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns an ArrayList\u003cduke.task.Task\u003e that will be taken in by a TaskList object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        readData();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Reads the txt file that is read by the FileReader. For every single task in the"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * file, it adds them into the taskArrayList and updates the list every time the program"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * is loaded"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void readData() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            FileReader fileReader \u003d new FileReader(\"/Users/lawnce/Desktop/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                    taskArrayList.add(createTask(line));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                bufferedReader.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Writes data into the txt file whenever the task list changes"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void writeData() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(\"/Users/lawnce/Desktop/duke/data/duke.txt\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            for (Task task : taskArrayList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                bufferedWriter.write(task.getData());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Creates specific task based on the command word scanned from user input. Used in the readData()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * method to read the txt file and add the lines of String as tasks"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param text user input"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return task that will be added into the taskArrayList"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public Task createTask(String text) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        String[] splitWords \u003d text.split(\"\\\\|\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        if (splitWords[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String todoText \u003d splitWords[2].substring(1); //substring to remove space"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            Todo todo \u003d new Todo(todoText);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            if (splitWords[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            return todo;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else if (splitWords[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String deadlineText \u003d splitWords[2].substring(1); //substring to remove space"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String deadlineTime \u003d splitWords[3].substring(1); //substring to remove space"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            Deadline deadline \u003d new Deadline(deadlineText, deadlineTime);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            if (splitWords[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                deadline.markAsDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } else { //event scenario"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String eventText \u003d splitWords[2].substring(1); //substring to remove space"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            String eventTime \u003d splitWords[3].substring(1); //substring to remove space"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            Event event \u003d new Event(eventText, eventTime);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            if (splitWords[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 105
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.initials.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Constructs an instance of TaskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param taskArrayList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskArrayList) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        if (taskArrayList \u003d\u003d null) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            throw new DukeException(\"ArrayList is not loaded\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        this.taskArrayList \u003d taskArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Constructs an instance of TaskList with no params"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Deletes a specific task in the list based on the index in the array"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        taskArrayList.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Adds a specific task into the list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        taskArrayList.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns the taskArrayList that is an attribute of this specific TaskList Object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return a ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskArrayList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 53
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    String divider;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    String logo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    String commandType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    String remainingWords;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(\"What can I do for you\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Prints out the divider that is to be used for each command or output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        divider \u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Reads user input with commandType being the type of command and remainingWords"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * to be the remaining words from the user input that will be used in creation of more"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Task objects. Remaining words can also be Integers in the case of done and delete commands"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return only the commandType so that it can be parsed by the Parser"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        commandType \u003d scanner.next();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        remainingWords \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Returns the remainingWords scanned in readCommand()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public String getRemainingWords() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        return remainingWords;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Prints out the errorMessage directly"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * @param errorMessage String to be printed"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     * Prints out the loadingMessage"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        System.out.println(\"Loading Error\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 72
    }
  },
  {
    "path": "src/main/test/duke/command/DeadlineCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import duke.initials.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "class DeadlineCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    void makeDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        DeadlineCommand deadlineCommand \u003d new DeadlineCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            assertEquals(\"18th of December 2019, 6:00pm\", deadlineCommand.makeDate(\"18/12/19\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } catch(ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    void makeDate_wrongDate_ParseException() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        DeadlineCommand deadlineCommand \u003d new DeadlineCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            deadlineCommand.makeDate(\"Sunday\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        } catch(ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "            assertEquals(\"Unparseable date: \u0027Sunday\u0027\", e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 31
    }
  },
  {
    "path": "src/main/test/duke/initials/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "package duke.initials;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    void getData() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        Event event \u003d new Event(\"read book\", \"18th of February 2019, 6:00pm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "        assertEquals(\"E|0| read book| 18th of February 2019, 6:00pm\", event.getData());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lawncegoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lawncegoh": 14
    }
  }
]
