[
  {
    "path": "src/main/java/AException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fps"
        },
        "content": "public class AException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fps"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fps"
        },
        "content": "    public void emptyToDoException(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fps"
        },
        "content": "    public void emptyDeadlineException(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\t☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fps"
        },
        "content": "    public void emptyByException(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\t☹ OOPS!!! The date and time of deadline not specified.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fps"
        },
        "content": "    public void emptyEventException(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\t☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fps"
        },
        "content": "    public void emptyAtException(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\t☹ OOPS!!! The date and time of event not specified.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fps"
        },
        "content": "    public void dontUnderstand(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fps"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fps": 26
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fps"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fps"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fps"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fps"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fps"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fps"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fps"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fps"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fps"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fps": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fps"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fps"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fps"
        },
        "content": "    static void printline(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fps"
        },
        "content": "        String line \u003d  \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fps"
        },
        "content": "    static void printnewline(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fps"
        },
        "content": "    static void takeInput(Task t, int i){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fps"
        },
        "content": "        printline();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\t\\t\" + t);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\tNow you have \" + i + \" tasks in the list\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fps"
        },
        "content": "        printline();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fps"
        },
        "content": "    static void printList(LinkedList\u003cTask\u003e li){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fps"
        },
        "content": "        printline();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fps"
        },
        "content": "        for(int i \u003d 0; i \u003c li.size(); i++){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fps"
        },
        "content": "            int j \u003d i+1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fps"
        },
        "content": "            System.out.println(\"\\t\" + j + \". \" + li.get(i));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fps"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fps"
        },
        "content": "        printline();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fps"
        },
        "content": "    static void printDone(Task task){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fps"
        },
        "content": "        printline();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fps"
        },
        "content": "        printline();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fps"
        },
        "content": "    static void printDelete(Task task, int i){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fps"
        },
        "content": "        printline();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\tNow you have \" + i + \" tasks in the list\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fps"
        },
        "content": "        printline();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fps"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fps"
        },
        "content": "        String name \u003d \"Duke\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fps"
        },
        "content": "        printline();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\tHello, I\u0027m \" + name);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fps"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fps"
        },
        "content": "        printline();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fps"
        },
        "content": "        //LinkedList used to store all the String given by the user;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fps"
        },
        "content": "        LinkedList\u003cTask\u003e li \u003d new LinkedList\u003cTask\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fps"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fps"
        },
        "content": "            printnewline();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fps"
        },
        "content": "            String echo \u003d scan.next();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fps"
        },
        "content": "            if(echo.equals(\"bye\")){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fps"
        },
        "content": "                // if bye, then end the program"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fps"
        },
        "content": "                printline();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fps"
        },
        "content": "                System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fps"
        },
        "content": "                printline();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fps"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fps"
        },
        "content": "            } else if(echo.equals(\"list\")){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fps"
        },
        "content": "                //if list, print the list of tasks"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fps"
        },
        "content": "                scan.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fps"
        },
        "content": "                printList(li);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fps"
        },
        "content": "            } else if(echo.equals(\"done\")){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fps"
        },
        "content": "                //if done, change the task status and tell them what they have completed"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fps"
        },
        "content": "                int taskNum \u003d scan.nextInt();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fps"
        },
        "content": "                //scan.nextLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fps"
        },
        "content": "                //System.out.println(taskNum);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fps"
        },
        "content": "                int taskNumb \u003d taskNum - 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fps"
        },
        "content": "                Task change \u003d li.get(taskNumb);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fps"
        },
        "content": "                change.completed();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fps"
        },
        "content": "                printDone(change);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fps"
        },
        "content": "            } else if (echo.equals(\"delete\")){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fps"
        },
        "content": "                int taskNum \u003d scan.nextInt();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fps"
        },
        "content": "                int taskNumb \u003d taskNum - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fps"
        },
        "content": "                "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fps"
        },
        "content": "                printDelete(li.get(taskNumb), li.size() - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fps"
        },
        "content": "                li.remove(taskNumb);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fps"
        },
        "content": "            }else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fps"
        },
        "content": "                Task newTask \u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fps"
        },
        "content": "                String actual \u003d  \"\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fps"
        },
        "content": "                String error \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fps"
        },
        "content": "                if (echo.equals(\"todo\")){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fps"
        },
        "content": "                    actual \u003d  scan.nextLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fps"
        },
        "content": "                    if(actual.isEmpty()){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fps"
        },
        "content": "                        error \u003d \"emptyToDo\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fps"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fps"
        },
        "content": "                    newTask \u003d  new ToDo(actual);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fps"
        },
        "content": "                } else if (echo.equals(\"deadline\")){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fps"
        },
        "content": "                    String help \u003d scan.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fps"
        },
        "content": "                    String task \u003d \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fps"
        },
        "content": "                    String time \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fps"
        },
        "content": "                    if(help.isEmpty()){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fps"
        },
        "content": "                        error \u003d \"emptyDeadline\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fps"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fps"
        },
        "content": "                        int slashInt \u003d help.indexOf(\"/by\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fps"
        },
        "content": "                        //System.out.println(slashInt);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fps"
        },
        "content": "                        //time \u003d help.substring();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fps"
        },
        "content": "                        if(slashInt \u003d\u003d -1){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fps"
        },
        "content": "                            error \u003d \"emptyBy\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fps"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fps"
        },
        "content": "                            time \u003d help.substring(slashInt +3);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fps"
        },
        "content": "                            task \u003d help.substring(0, slashInt);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fps"
        },
        "content": "                            if (task.equals(\" \")){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fps"
        },
        "content": "                                error \u003d \"emptyDeadline\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fps"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fps"
        },
        "content": "                                //System.out.println(task);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fps"
        },
        "content": "                                newTask \u003d new Deadline(task, time);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fps"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fps"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fps"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fps"
        },
        "content": " "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fps"
        },
        "content": "                } else if(echo.equals(\"event\")){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fps"
        },
        "content": "                    String help \u003d scan.nextLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fps"
        },
        "content": "                    String task \u003d \"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fps"
        },
        "content": "                    String time \u003d \"\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fps"
        },
        "content": "                    if(help.isEmpty()){"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fps"
        },
        "content": "                        error \u003d \"emptyEvent\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fps"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fps"
        },
        "content": "                        int slashInt \u003d help.indexOf(\"/at\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fps"
        },
        "content": "                        //System.out.println(slashInt);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fps"
        },
        "content": "                        //time \u003d help.substring();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fps"
        },
        "content": "                        if(slashInt \u003d\u003d -1){"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fps"
        },
        "content": "                            error \u003d \"emptyAt\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fps"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fps"
        },
        "content": "                            time \u003d help.substring(slashInt + 3);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fps"
        },
        "content": "                            task \u003d help.substring(0, slashInt);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fps"
        },
        "content": "                            if (task.equals(\" \")){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fps"
        },
        "content": "                                error \u003d \"emptyEvent\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fps"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fps"
        },
        "content": "                                //System.out.println(task);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fps"
        },
        "content": "                                newTask \u003d new Event(task, time);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fps"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fps"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fps"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fps"
        },
        "content": "                }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fps"
        },
        "content": "                //handle all errors"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fps"
        },
        "content": "                if (!error.isEmpty() || newTask \u003d\u003d null){"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fps"
        },
        "content": "                    AException ee \u003d  new AException();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fps"
        },
        "content": "                    printline();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fps"
        },
        "content": "                    if (error.equals(\"emptyToDo\")){"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fps"
        },
        "content": "                        ee.emptyToDoException();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fps"
        },
        "content": "                    } else if (error.equals(\"emptyDeadline\")){"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fps"
        },
        "content": "                        ee.emptyDeadlineException();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fps"
        },
        "content": "                    } else if (error.equals(\"emptyBy\")){"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fps"
        },
        "content": "                        ee.emptyByException();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fps"
        },
        "content": "                    } else if (error.equals(\"emptyEvent\")){"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fps"
        },
        "content": "                        ee.emptyEventException();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fps"
        },
        "content": "                    } else if (error.equals(\"emptyAt\")){"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "fps"
        },
        "content": "                        ee.emptyAtException();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "fps"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "fps"
        },
        "content": "                        ee.dontUnderstand();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "fps"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "fps"
        },
        "content": "                    printline();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "fps"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "fps"
        },
        "content": "                    li.add(newTask);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "fps"
        },
        "content": "                    takeInput(newTask, li.size());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "fps"
        },
        "content": "                }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "fps"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "fps"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fps": 178,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fps"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fps"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fps"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fps"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fps"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fps"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fps"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fps"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fps"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fps": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fps"
        },
        "content": "public class Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fps"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fps"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fps"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fps"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fps"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fps"
        },
        "content": "    //get the completion status of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fps"
        },
        "content": "    public String taskCompletion(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fps"
        },
        "content": "        String status \u003d getStatusIcon();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fps"
        },
        "content": "        return (\"[\" + status + \"] \" + description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fps"
        },
        "content": "    //Change task to completed;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fps"
        },
        "content": "    public void completed(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fps"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fps"
        },
        "content": "    //get the tick or cross"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fps"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fps"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fps"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fps"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fps"
        },
        "content": "        String status \u003d getStatusIcon();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fps"
        },
        "content": "        return (\"[\" + status + \"]\" + description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fps"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fps": 31
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fps"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fps"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fps"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fps"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fps"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fps"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fps"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fps"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fps"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fps": 11
    }
  }
]
