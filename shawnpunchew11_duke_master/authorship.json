[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "run{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "test {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 32,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.MainWindow;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        displayPicture.setClip(new Circle(37.5, 35, 30));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 66
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.repos.TaskRepo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private ListManager listManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private TaskRepo repo;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * Main method that drives the running of the app. Creates new UI/Storage and ListManagers"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param filePath to access a pre-existing list (if-any)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        repo \u003d new TaskRepo(storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * method to ask the UI to ask user for input and change String input into Command class."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private String run(String input) throws IOException, ParseException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        Command c \u003d Parser.parse(input, formatter);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output \u003d c.execute(repo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    String getResponse(String input) throws IOException, ParseException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "       if (!this.isExit) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "           return this.run(input);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "       } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "           return \"Program has already terminated.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 78
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Main() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String welcomeMessage \u003d \"\\tHello! I\u0027m Duke\\n\\tWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, dukeImage));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private void handleUserInput() throws IOException, ParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 57
    }
  },
  {
    "path": "src/main/java/duke/ResponseGen.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class ResponseGen {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ResponseGen() {}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public static String addResponse(List\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d \"\\tGot it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d \"\\t  \" + listOfTasks.get(listOfTasks.size() - 1) + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d \"\\tNow you have \" + listOfTasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public static String deleteResponse (List\u003cTask\u003e listOfTasks, Task removed) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d \"\\tNoted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d \"\\t  \" + removed.toString() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d \"\\tNow you have \" + listOfTasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public static String doneResponse(List\u003cTask\u003e listOfTasks, int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        listOfTasks.get(index - 1).done \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d \"\\tNice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d \"\\t  [✓] \" + listOfTasks.get(index - 1).name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public static String findResponse(List\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (listOfTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return \"None of the tasks match!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            for (int j \u003d 0; j \u003c listOfTasks.size(); j++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output.append(\u0027\\t\u0027);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output.append(j + 1).append(\".\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output.append(listOfTasks.get(j).toString()).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public static String listResponse(List\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (listOfTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return \"You have nothing on your to-do list!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output.append(\"\\tHere are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            for (int j \u003d 0; j \u003c listOfTasks.size(); j++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output.append(\u0027\\t\u0027);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output.append(j + 1).append(\".\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output.append(listOfTasks.get(j).toString()).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output.append(\"\\tYou have \").append(listOfTasks.size()).append(\" tasks!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 65
    }
  },
  {
    "path": "src/main/java/duke/backend/ListManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class ListManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ArrayList\u003cTask\u003e actualList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ListManager(SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.actualList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.formatter \u003d formatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ListManager(ArrayList\u003cTask\u003e taskList, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.actualList \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.formatter \u003d formatter;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * Add Command that creates the different Tasks based on the first word."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param fullCommand full String command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param splitCommand output of java.split(fullCommand)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String add(String fullCommand, String[] splitCommand) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        switch (splitCommand[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        case \"t\": {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String[] stringBreaker \u003d fullCommand.split(\"t\", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            if (!stringBreaker[1].equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                ToDos todo \u003d new ToDos(stringBreaker[1], this.formatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                actualList.add(todo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d \"\\tGot it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d \"\\t  \" + this.actualList.get(this.actualList.size() - 1) + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d \"\\tNow you have \" + this.actualList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                //Should throw exception here"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                System.out.println(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        case \"d\": {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String newString \u003d fullCommand.substring(9);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String[] stringBreaker \u003d newString.split(\"/by\", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Date date \u003d formatter.parse(stringBreaker[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Deadlines deadline \u003d new Deadlines(stringBreaker[0], formatter, date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                actualList.add(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d \"\\tGot it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d \"\\t  \" + this.actualList.get(this.actualList.size() - 1) + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d \"\\tNow you have \" + this.actualList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        case \"e\": {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String newString \u003d fullCommand.substring(6);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String[] stringBreaker \u003d newString.split(\"/at\", 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Date date \u003d formatter.parse(stringBreaker[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Events event \u003d new Events(stringBreaker[0], formatter, date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                actualList.add(event);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d \"\\tGot it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d \"\\t  \" + this.actualList.get(this.actualList.size() - 1) + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d \"\\tNow you have \" + this.actualList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            //Throw exception here"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * Iterates through the list and prints out each item."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String iterate() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (this.actualList.isEmpty()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"\\tYou have nothing on your to-do list!\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"\\tHere are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            for (int i \u003d 0; i \u003c actualList.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d \u0027\\t\u0027;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d (i + 1) + \".\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d actualList.get(i).toString() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"COMMAND LIST\\nt [taskname] : creates a todo \\nd [taskname] /by [dd/mm/yyyy hhmm]: creates a new deadline\\n\" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                \"e [taskname] /at [dd/mm/yyy hhmm]: creates a new event\\nlist: displays list of tasks\\n\" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                \"find [query]: searches for all tasks containing query in taskname\\ndelete [index]: deletes task of that index\\n\" +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                \"done [index]: sets task of that index to done\\nbye: terminate the program\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * Sets a task within the list (of given index) as completed."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param index index of task stored within the list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String done(int index) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (index \u003c\u003d actualList.size()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            actualList.get(index - 1).done \u003d true;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"\\tNice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"\\t  [✓] \" + actualList.get(index - 1).name;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"\\tTask does not exist!\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * removes task of given index from the list."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param index index of task stored within the list."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String delete(int index) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        Task removed \u003d this.actualList.remove(index - 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d \"\\tNoted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d \"\\t  \" + removed.toString() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d \"\\tNow you have \" + actualList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * searches through the list and outputs every task in which its name contains the query."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param query String query to search for tasks."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String find(String query) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (this.actualList.isEmpty()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"\\tYou have nothing on your to-do list!\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            for (int i \u003d 0; i \u003c actualList.size(); i++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                if (actualList.get(i).name.contains(query)) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    tempList.add(actualList.get(i));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            if (tempList.isEmpty()) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                output +\u003d \"\\tSorry no tasks matched your query!\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                for (int j \u003d 0; j \u003c tempList.size(); j++) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    output +\u003d \u0027\\t\u0027;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    output +\u003d (j + 1) + \".\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    output +\u003d tempList.get(j).toString() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 168
    }
  },
  {
    "path": "src/main/java/duke/backend/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        checkFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * Checks given filepath, if file exists, creates ArrayList of tasks from that file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * If it does not exist, an empty ArrayList is created."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @return new ArrayList of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @throws FileNotFoundException in the event that file does not exist in given directory."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            FileInputStream fis \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            Task[] arrayOfTasks \u003d (Task[]) ois.readObject();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return new ArrayList\u003c\u003e(Arrays.asList(arrayOfTasks));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            throw new IOException(\"Error!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * method that saves current list in ListManager to a text file in given directory."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @throws IOException to handle if there is no text to be written in."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void save(List\u003cTask\u003e listOfTasks) throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(file);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            oos.writeObject(listOfTasks.toArray(new Task[0]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * simple boolean flag to tell UI that the program is exiting."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param num 0 for no exit, 1 for exit."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @return boolean on whether to quit the program."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private boolean isDone(int num) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (num \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private void checkFile() throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (!this.file.exists()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            save(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 75
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ResponseGen;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.repos.TaskRepo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public AddCommand(String fullCommand, String[] splitCommand, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String execute(TaskRepo taskRepo) throws ParseException, IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        switch (splitCommand[0]) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        case \"t\": {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                String[] stringBreaker \u003d fullCommand.split(\"t\", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Task output \u003d new ToDos(stringBreaker[1], this.formatter);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                taskRepo.create(output);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        case \"d\": {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                String newString \u003d fullCommand.substring(9);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                String[] stringBreaker \u003d newString.split(\"/by\", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Date date \u003d formatter.parse(stringBreaker[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Task output \u003d new Deadlines(stringBreaker[0], formatter, date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                taskRepo.create(output);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            } catch (ParseException | IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        case \"e\": {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                String newString \u003d fullCommand.substring(6);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                String[] stringBreaker \u003d newString.split(\"/at\", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Date date \u003d formatter.parse(stringBreaker[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Task output \u003d new Events(stringBreaker[0], formatter, date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                taskRepo.create(output);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            } catch (ParseException | IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return ResponseGen.addResponse(taskRepo.getAll());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 67
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.repos.TaskRepo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    String[] splitCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Command(String fullCommand, String[] splitCommand, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.splitCommand \u003d splitCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.formatter \u003d formatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public abstract String execute(TaskRepo taskRepo) throws ParseException, IOException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ResponseGen;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.repos.TaskRepo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public DeleteCommand(String fullCommand, String[] splitCommand, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String execute(TaskRepo taskRepo) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            int index \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            Task removed \u003d taskRepo.delete(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return ResponseGen.deleteResponse(taskRepo.getAll(), removed);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 35
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ResponseGen;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.repos.TaskRepo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public DoneCommand(String fullCommand, String[] splitCommand, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String execute(TaskRepo taskRepo) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            int index \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            taskRepo.done(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return ResponseGen.doneResponse(taskRepo.getAll(), index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return \"Error!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.repos.TaskRepo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ExitCommand(String fullCommand, String[] splitCommand, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String execute(TaskRepo taskRepo) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return \"\\nBye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 26
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ResponseGen;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.repos.TaskRepo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public FindCommand(String fullCommand, String[] splitCommand, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String execute(TaskRepo taskRepo) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        List\u003cTask\u003e queriedList \u003d taskRepo.find(this.splitCommand[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return ResponseGen.findResponse(queriedList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 28
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.repos.TaskRepo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public HelpCommand(String fullCommand, String[] splitCommand, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String execute(TaskRepo taskRepo) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return \"COMMAND LIST\\nt [taskname] : creates a todo \\nd [taskname] /by [dd/mm/yyyy hhmm]: creates a new deadline\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                \"e [taskname] /at [dd/mm/yyy hhmm]: creates a new event\\nlist: displays list of tasks\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                \"find [query]: searches for all tasks containing query in taskname\\ndelete [index]: deletes task of that index\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                \"done [index]: sets task of that index to done\\nbye: terminate the program\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 27
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ResponseGen;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.repos.TaskRepo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ListCommand(String fullCommand, String[] splitCommand, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String execute(TaskRepo taskRepo) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return ResponseGen.listResponse(taskRepo.getAll());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 27
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * method that handles input, takes in a String and adds its allocated Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param fullCommand String input from user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @return Command based on the first word of String command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @throws IllegalArgumentException if the command is not one of the valid ones."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public static Command parse(String fullCommand, SimpleDateFormat formatter) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \", 0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        switch (splitCommand[0]) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            case \"t\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            case \"d\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            case \"e\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                return new AddCommand(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                return new DoneCommand(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                return new ListCommand(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                return new ExitCommand(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                return new DeleteCommand(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                return new FindCommand(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                return new HelpCommand(fullCommand, splitCommand, formatter);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                throw new IllegalArgumentException(\"Invalid Command\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 38
    }
  },
  {
    "path": "src/main/java/duke/repos/Repository.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.repos;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public interface Repository\u003cT\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    List\u003cT\u003e getAll();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    void create(T entity) throws IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    List\u003cTask\u003e find(String query);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    Task delete(int index) throws IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    void done(int index) throws IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 18
    }
  },
  {
    "path": "src/main/java/duke/repos/TaskRepo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.repos;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class TaskRepo implements Repository\u003cTask\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private List\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public TaskRepo(Storage storage) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.listOfTasks \u003d storage.load();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public List\u003cTask\u003e getAll() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void create(Task task) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        listOfTasks.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        storage.save(listOfTasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Task delete(int index) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        Task removed \u003d listOfTasks.remove(index - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        storage.save(listOfTasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return removed;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public List\u003cTask\u003e find(String query) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return listOfTasks.stream()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                .filter(task -\u003e task.name.contains(query))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void done(int index) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        listOfTasks.get(index - 1).done \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        storage.save(listOfTasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * constructor for Deadlines. accesses name and formatter from parent."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param name String name."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param formatter formatter for date and time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param date date object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Deadlines(String name, SimpleDateFormat formatter, Date date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(name, formatter);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.type \u003d \"[D]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        assert date !\u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * Overrides toString method to reflect appropriate form of printing task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @return String output of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[✓] \" + this.name + \"(by:\" + formatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[X] \" + this.name + \"(by:\" + formatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 38
    }
  },
  {
    "path": "src/main/java/duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * constructor for Deadlines. accesses name and formatter from parent."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param name String name."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param formatter formatter for date and time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param date date object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Events(String name, SimpleDateFormat formatter, Date date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(name, formatter);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.type \u003d \"[E]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        assert date !\u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * Overrides toString method to reflect appropriate form of printing task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @return String output of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[✓] \" + this.name + \"(at:\" + formatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[X] \" + this.name + \"(at:\" + formatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Boolean done;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * defines a generic constructor for all Task subclasses."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param name String name."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     * @param formatter DateTime formatter."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    Task(String name, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.formatter \u003d formatter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 21
    }
  },
  {
    "path": "src/main/java/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ToDos(String name, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(name, formatter);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.type \u003d \"[T]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[✓]\" + this.name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[X]\" + this.name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 22
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" opacity\u003d\"0.8\" style\u003d\"-fx-background-color: #add8e6;-fx-background-radius: 10 10 10 10;\" text\u003d\"     \" textAlignment\u003d\"JUSTIFY\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "         \u003cInsets left\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "      \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "         \u003cInsets left\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "      \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 20
    }
  }
]
