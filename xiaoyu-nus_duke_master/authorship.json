[
  {
    "path": "runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Deadline(String description, String by, boolean done) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Deadline finish() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Deadline(description,by,true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Listener listener \u003d new Listener();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Sheet sheet \u003d new Sheet();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        listener.start(sheet);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "xiaoyu-nus": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private String s;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public DukeException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    this.s \u003d s;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return Formatter.LINE + Formatter.INDENT + s.toString() + \"\\n\" + Formatter.LINE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 16
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected String span;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Event(String description, String span) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.span \u003d span;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Event(String description, String span, boolean done) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.span \u003d span;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Event finish() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Event(description, span,true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + span + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 23
    }
  },
  {
    "path": "src/main/java/Formatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Formatter {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String LINE \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String INDENT \u003d \"     \";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String WELCOME \u003d LINE + INDENT + \"Hello! I\u0027m Duke\\n\" + INDENT + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            + LINE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String DONE \u003d \"Nice! I\u0027ve marked this task as done: \\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String GOT \u003d \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String LIST \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String UNKNOWN \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String REMOVE \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 12
    }
  },
  {
    "path": "src/main/java/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class IllegalCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public IllegalCommandException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 6
    }
  },
  {
    "path": "src/main/java/Listener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Listener {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Sheet sheet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void start(Sheet sheet) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.sheet \u003d sheet;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.print(Formatter.WELCOME);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        while(sc.hasNext()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String command \u003d sc.next();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                System.out.print(Formatter.LINE + Formatter.INDENT + Formatter.GOODBYE + \"\\n\" + Formatter.LINE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                this.sheet.showList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            } else if (command.equals(\"delete\")|| command.equals(\"done\"))) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                int index \u003d sc.nextInt();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                this.sheet.delete(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    int index \u003d sc.nextInt();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    if (index \u003e this.sheet.numOfTask) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        if (this.sheet.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            throw new TaskNotFoundException(\"☹ OOPS!!! The list is empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            throw new TaskNotFoundException(\"☹ OOPS!!! The list contains only \" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                                    this.sheet.numOfTask + (this.sheet.numOfTask \u003d\u003d 1 ? \" task.\" : \" tasks.\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    if (index \u003c 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        throw new TaskNotFoundException(\"☹ OOPS!!! Do we have non-positive tasks?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    this.sheet.markAsDone(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } catch (TaskNotFoundException tfe){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    System.out.printf(tfe.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } catch (InputMismatchException ime) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    System.out.printf("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            Formatter.LINE + Formatter.INDENT +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                                    \"☹ OOPS!!! I cannot recognise that task index. :-(\" + \"\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                                    + Formatter.LINE );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    sc.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            } else if (command.equals(\"todo\")){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    String description \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    if (description.isBlank()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        throw new MissingDescriptionException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    Task todoTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    this.sheet.add(todoTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    System.out.printf(e.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    String next;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    String description \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    while (!(next \u003d sc.next()).equals(\"/by\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        description +\u003d \" \" + next;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    String by \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    if (by.isBlank()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        throw new MissingDescriptionException("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                                \"☹ OOPS!!! The deadline cannot be empty.\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        );"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    Task dlTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    this.sheet.add(dlTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } catch (MissingDescriptionException dl) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    System.out.printf(dl.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } finally {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            } else if (command.equals(\"event\")){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    String next;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    String description \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    while (!(next \u003d sc.next()).equals(\"/at\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        description +\u003d \" \" + next;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    String span \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    if (span.isBlank()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        throw new MissingDescriptionException(\"☹ OOPS!!! The event time cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    Task eventTask \u003d new Event(description, span);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    this.sheet.add(eventTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } catch (MissingDescriptionException mde) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    System.out.printf(mde.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } finally {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    throw new IllegalCommandException(Formatter.UNKNOWN);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } catch (IllegalCommandException ice) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    System.out.printf(ice.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 106
    }
  },
  {
    "path": "src/main/java/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class MissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public MissingDescriptionException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 6
    }
  },
  {
    "path": "src/main/java/Sheet.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Sheet {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public int numOfTask \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.print(Formatter.LINE + Formatter.INDENT + Formatter.GOT + Formatter.INDENT + \"  \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.numOfTask++;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.count();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(Formatter.LINE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.list.remove(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.print(Formatter.LINE + Formatter.INDENT + Formatter.REMOVE + Formatter.INDENT + \"  \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + this.list.get(index - 1).toString() + \"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.numOfTask--;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.count();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(Formatter.LINE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private void count() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (this.list.size() \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            System.out.printf(Formatter.INDENT + \"Now you have %d task in the list.\\n\", numOfTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            System.out.printf(Formatter.INDENT + \"Now you have %d tasks in the list.\\n\", numOfTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return this.list.isEmpty();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return this.list.get(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void markAsDone(int num) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task target \u003d this.list.get(num - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.list.set(num - 1,target.finish());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(Formatter.LINE + Formatter.INDENT + Formatter.DONE + Formatter.INDENT +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                this.list.get(num - 1).toString() + \"\\n\" + Formatter.LINE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.print(Formatter.LINE + Formatter.INDENT + Formatter.LIST);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            System.out.println(Formatter.INDENT + (i + 1) + \". \" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    list.get(i).toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(Formatter.LINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 58
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task(String description, Boolean done) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task finish() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 34
    }
  },
  {
    "path": "src/main/java/TaskNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class TaskNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public TaskNotFoundException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 6
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Todo(String description, boolean done) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Todo finish() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Todo(description,true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 20
    }
  }
]
