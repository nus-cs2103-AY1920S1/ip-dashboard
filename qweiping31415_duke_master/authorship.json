[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     archiveVersion \u003d \"0.1.1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// version \u00270.1.1\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// checkstyle {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// javafx {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    mainClassName \u003d \u0027Duke\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    run {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        standardInput \u003d System.in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// dependencies {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// test {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "//     useJUnitPlatform();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "// }"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 51
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.commands.CommandType;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public Duke(String filePath) throws DukeException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.taskList \u003d new TaskList(this.storage.load(), this.storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        Task.setTaskList(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        while (ui.hasInputs()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                command.execute(taskList, this.ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                if (command.getCommandType().equals(CommandType.EXIT)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            } catch (IllegalArgumentException | DukeException error2 ) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                ui.printErrorMessage(error2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        new Duke(\"/Users/isaac/Desktop/CS2103T+CS2101/CS2103T/duke/data/duke.txt\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        .run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "   "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 45,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    String [] tokens;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public AddDeadlineCommand(String [] tokens) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.tokens \u003d tokens;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.commandType \u003d CommandType.ADDDEADLINE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static AddDeadlineCommand addDeadlineIfValid(String [] tokens) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        if (!Arrays.asList(tokens).contains(\"/by\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            throw new IllegalArgumentException(\"Missing deadline\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return new AddDeadlineCommand(tokens);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        Deadline task \u003d Deadline.createDeadline(tokens);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        taskList.addToList(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        ui.printInput(task, taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 43
    }
  },
  {
    "path": "src/main/java/duke/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class AddEventCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    String [] tokens;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public AddEventCommand(String [] tokens) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.tokens \u003d tokens;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.commandType \u003d CommandType.ADDEVENT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static AddEventCommand addEventIfValid(String [] tokens) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        if (!Arrays.asList(tokens).contains(\"/at\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            throw new IllegalArgumentException(\"Missing deadline\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return new AddEventCommand(tokens);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        Event task \u003d Event.createEvent(tokens);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        taskList.addToList(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        ui.printInput(task, taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class AddToDoCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    String [] tokens;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public AddToDoCommand(String [] tokens) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.tokens \u003d tokens;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.commandType \u003d CommandType.ADDTODO;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        ToDo task \u003d ToDo.createToDo(tokens);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        taskList.addToList(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        ui.printInput(task, taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    CommandType commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public CommandType getCommandType() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui) throws DukeException, IOException ;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static Command createAddCommandIfValid(String[] tokens) throws DukeException, IllegalArgumentException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        List\u003cString\u003e validCommands \u003d List.of(\"todo\", \"deadline\", \"event\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        if (!validCommands.contains(tokens[0])) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            throw new DukeException(\"commands.Command doesn\u0027t exist\", DukeExceptionType.INVALIDCOMMAND);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        Parser.checkValidLength(tokens);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        if (tokens[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return new AddToDoCommand(tokens);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } else if (tokens[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return AddDeadlineCommand.addDeadlineIfValid(tokens);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } else if (tokens[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return AddEventCommand.addEventIfValid(tokens);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return new NullCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 42
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    ADDTODO, ADDEVENT, ADDDEADLINE, LIST, DELETE, DONE, NULL, EXIT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 6
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeExceptionType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public DeleteCommand(int index){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.commandType \u003d CommandType.DELETE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static DeleteCommand createDeleteIfValid(String [] tokens) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            Parser.checkValidLength(tokens);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            int index \u003d Integer.parseInt(tokens[1])-1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            throw new DukeException(\"Must be integer\", DukeExceptionType.NOTINTEGER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            Task task \u003d taskList.getTaskAt(index+1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            taskList.removeFromList(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            ui.printDeletion(task, taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } catch (IndexOutOfBoundsException error3) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            ui.printOneLine(new DukeException(\"No such task\", DukeExceptionType.MISSINGTASK).getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 45
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeExceptionType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public DoneCommand(int index){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.commandType \u003d CommandType.DONE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static DoneCommand createDoneIfValid(String [] tokens) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            Parser.checkValidLength(tokens);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            int index \u003d Integer.parseInt(tokens[1])-1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            throw new DukeException(\"Must be integer\", DukeExceptionType.NOTINTEGER);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            Task task \u003d taskList.getTaskAt(index+1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            boolean isDoneBefore \u003d task.setDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            if (isDoneBefore) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                throw new IllegalArgumentException(\"core.tasks.Task has already been done\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            taskList.setDoneInList(this.index+1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            List\u003cString\u003e inst \u003d List.of(\"Nice! I\u0027ve marked this task as done: \","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                    \"  \"+task.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            ui.printInput(inst);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } catch (IndexOutOfBoundsException error3) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            ui.printOneLine(new DukeException(\"No such task\", DukeExceptionType.MISSINGTASK).getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } catch (IllegalArgumentException error2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            ui.printOneLine(new DukeException(error2.getMessage(), DukeExceptionType.GENERALMISTAKE).getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 59
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public ExitCommand(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.commandType \u003d CommandType.EXIT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        ui.printByeMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public ListCommand(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.commandType \u003d CommandType.LIST;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        ui.printNumberList(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/NullCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeExceptionType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class NullCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public NullCommand(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.commandType \u003d CommandType.NULL;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        throw new DukeException(\"Invalid commands.Command! Please try again.\", DukeExceptionType.INVALIDCOMMAND);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 22
    }
  },
  {
    "path": "src/main/java/duke/core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static Command parse(String input) throws DukeException, IllegalArgumentException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        String[] tokens \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        if (tokens[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } else if (tokens[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } else if (tokens[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return DoneCommand.createDoneIfValid(tokens);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } else if (tokens[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return DeleteCommand.createDeleteIfValid(tokens);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return Command.createAddCommandIfValid(tokens);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static void checkValidLength(String[] tokens) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        List\u003cString\u003e group1 \u003d List.of(\"todo\", \"deadline\", \"event\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        List\u003cString\u003e group2 \u003d List.of(\"done\", \"delete\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        if (tokens.length \u003d\u003d 1 \u0026\u0026 group1.contains(tokens[0])) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            throw new IllegalArgumentException(String.format(\"☹ OOPS!!! The description of a %s cannot be empty.\",tokens[0]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } else if (tokens.length \u003d\u003d 1 \u0026\u0026 group2.contains(tokens[0])) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            throw new IllegalArgumentException(String.format(\"☹ OOPS!!! %s command requires integer.\",tokens[0]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 44
    }
  },
  {
    "path": "src/main/java/duke/core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.errors.DukeExceptionType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class Storage{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException, IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                taskList.add(formatFileToTask(line));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            throw new DukeException(\"Load failed\", DukeExceptionType.FILENOTFOUND);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void overwriteStorage(ArrayList\u003cTask\u003e taskList) throws IOException{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        for (Task task: taskList){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            switch (task.getType()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                    fw.write(Task.getTaskID(task) + \" / \" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            \"tasks.ToDo\" + \" / \" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            task.getStatusIcon() + \" / \" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            task.getDescription() +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            System.lineSeparator());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                    fw.write(Task.getTaskID(task) + \" / \" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            \"tasks.Deadline\" + \" / \" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            task.getStatusIcon() + \" / \" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            task.getDescription() + \" / \" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            ((Deadline) task).getTime() +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            System.lineSeparator());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                    fw.write(Task.getTaskID(task) + \" / \" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            \"tasks.Event\" + \" / \" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            task.getStatusIcon() + \" / \" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            task.getDescription() + \" / \" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            ((Event) task).getTime() +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                            System.lineSeparator());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    private Task formatFileToTask(String line) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        String[] tokens \u003d line.split(\" / \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        switch(tokens[1]){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            case \"ToDo\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                ToDo toDoTask \u003d new ToDo(tokens[3]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                if (tokens[2].equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                    toDoTask.setDone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                return toDoTask;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            case \"Deadline\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                Deadline deadlineTask \u003d new Deadline(tokens[3], tokens[4]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                if (tokens[2].equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                    deadlineTask.setDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                return deadlineTask;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            case \"Event\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                Event eventTask \u003d new Event(tokens[3], tokens[4]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                if (tokens[2].equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                    eventTask.setDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                return eventTask;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                throw new DukeException(\"Unknown task detected? Something is wrong.\", DukeExceptionType.TASKNOTFOUND);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 106
    }
  },
  {
    "path": "src/main/java/duke/core/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public TaskList(Storage storage){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list, Storage storage){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.taskList \u003d list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void addToList(Task task) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.storage.overwriteStorage(taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public ArrayList\u003cTask\u003e getList(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public Task getTaskAt(int index){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return this.taskList.get(index - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void removeFromList(Task task) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        boolean isRemoved \u003d this.taskList.remove(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        if (isRemoved) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            this.storage.overwriteStorage(taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void setDoneInList(int index) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.taskList.get(index - 1).setDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.storage.overwriteStorage(taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public int getTaskID(Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return taskList.indexOf(task) + 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 60
    }
  },
  {
    "path": "src/main/java/duke/core/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    final private static String horizontalLine \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public boolean hasInputs() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return sc.hasNextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        List\u003cString\u003e start \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        start.add(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        start.add(\"What can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.printInput(start);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void printInput(Task input, TaskList taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(String.format(\"       %s\",input));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(String.format(\"     Now you have %d tasks in the list.\", taskList.getSize()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void printDeletion(Task input, TaskList taskList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(String.format(\"       %s\",input));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(String.format(\"     Now you have %d tasks in the list.\",taskList.getSize()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void printInput(List\u003cString\u003e start) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        for (String input : start) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            System.out.println(String.format(\"     %s\",input));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void printOneLine(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(String.format(\"     %s\",input));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void printNumberList(TaskList taskList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            System.out.println(String.format(\"     %d.%s\",i+1, taskList.getTaskAt(i+1)));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void printByeMessage() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.printOneLine(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public void printErrorMessage(Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.printOneLine(e.getMessage());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 97
    }
  },
  {
    "path": "src/main/java/duke/errors/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.errors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    protected DukeExceptionType type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public DukeException(String error, DukeExceptionType type){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \tswitch (type) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \t\tcase INVALIDCOMMAND:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \t\t\treturn \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \t\tcase NOTINTEGER:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \t\t\treturn \"☹ Invalid input, must be an integer!!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \t\tcase MISSINGTASK:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \t\t\treturn \"☹ No such task\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \t\tcase GENERALMISTAKE:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \t\t\treturn super.getMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            case FILENOTFOUND: "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                return \"File not found!!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "\t\t\tcase TASKNOTFOUND:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "\t\t\t\treturn \"core.tasks.Task not found!!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \t\tdefault:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \t\t\treturn \"Unknown error! Please try again.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 30
    }
  },
  {
    "path": "src/main/java/duke/errors/DukeExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.errors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public enum DukeExceptionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    INVALIDCOMMAND,NOTINTEGER,MISSINGTASK,GENERALMISTAKE, FILENOTFOUND, TASKNOTFOUND"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 5
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.type \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            this.dateTime \u003d LocalDateTime.parse(time, f);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static Deadline createDeadline(String [] tokens) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        StringBuilder time \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        StringBuilder builder \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        boolean isDescription \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        for (int i \u003d 1; i \u003c tokens.length - 1 ; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            String curr \u003d tokens[i];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            if (curr.equals(\"/by\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                isDescription \u003d !isDescription;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                builder \u003d time;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                builder.append(tokens[i]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                builder.append(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        builder.append(tokens[tokens.length-1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return new Deadline(description.toString(),time.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return String.format(\"[D][%s] %s(by: %s)\", getStatusIcon(),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                getDescription(), getTime());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 57
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.type \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            this.dateTime \u003d LocalDateTime.parse(time, f);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static Event createEvent(String [] tokens) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        StringBuilder time \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        StringBuilder builder \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        boolean isDescription \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        for (int i \u003d 1; i \u003c tokens.length - 1 ; i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            String curr \u003d tokens[i];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            if (curr.equals(\"/at\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                isDescription \u003d !isDescription;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                builder \u003d time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                builder.append(tokens[i]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                builder.append(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        builder.append(tokens[tokens.length-1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return new Event(description.toString(),time.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return String.format(\"[E][%s] %s(at: %s)\", getStatusIcon(),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "                getDescription(), getTime());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 57
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public boolean setDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        if (!isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static void setTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        Task.taskList \u003d taskList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static int getTaskID(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return Task.taskList.getTaskID(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 49
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    EVENT, TODO, DEADLINE"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 5
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        this.type \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public static ToDo createToDo(String [] tokens) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        for (int i \u003d 1; i \u003c tokens.length - 1 ; i++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            builder.append(tokens[i]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "            builder.append(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        builder.append(tokens[tokens.length-1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return new ToDo(builder.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 27
    }
  },
  {
    "path": "tutorials/gradleTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle is a _build automation tool_ used to automate build processes. There are many ways of integrating Gradle into a project. In this guide, we will be using the _Gradle wrapper_."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* [Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Gradle Support to Your Project](#adding-gradle-support-to-your-project)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Plugins](#adding-plugins)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [CheckStyle](#checkstyle)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Shadow](#shadow)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Dependencies](#adding-dependencies)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [JUnit](#junit)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Further Reading](#further-reading)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "As a developer, you write a _build file_ that describes the project. A build file mainly consists of _plugins_, _tasks_ and _properties_. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* **Plugins** extend the functionality of Gradle. For example, the `java` plugin adds support for `Java` projects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* **Tasks** are reusable blocks of logic.  For example, the task `clean` simply deletes the project build directory. Tasks can be composed of other tasks or be dependent on another task. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* **Properties** change the behavior of tasks. For instance, `mainClassName` of the `application` plugin is a compulsory property which tells Gradle which class is the entrypoint to your application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  As Gradle favors [_convention over configuration_](https://en.wikipedia.org/wiki/Convention_over_configuration), there is not much to you need to configure if you follow the recommended directory structure."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Gradle Support to Your Project "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Pull the branch named `gradle`. Merge it to the `master` branch. This will add the Gradle wrapper to your project."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout --track origin/gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout master"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   git merge gradle"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open the `build.gradle` file in an editor. Update the following code block to point to the main class (i.e., the one containing the `main` method) of your application. The code below assumes your main class is `seedu.duke.Duke`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   ```groovy"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "       mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qweiping31415"
        },
        "content": "1. To check if Gradle has been added to the project correctly, open a terminal window, navigate to the root directory of your project and run the command `./gradlew run`. This should result in Gradle running the main method of your project."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Simply run the command `gradlew {taskName}` in the terminal and Gradle will run the task! Here are some example commands:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew tasks` (or `gradlew tasks --all`): shows a list of tasks available"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew run`: runs the main class of your project"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Some plugins may add more helpful tasks so be sure to check their documentation!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "#### Using Gradle from within Intellij"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. After adding support for Gradle, Intellij might automatically ask you (via a pop-up at the bottom right corner of the Window) whether to import the project as a Gradle project. In that case, go ahead and say yes."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t happen, import the Gradle project by `Help \u003e Find Action \u003e Import Gradle Project`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Import Gradle](assets/ImportGradle.png)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t work either, close Intellij, delete the Intellij project files (i.e., `.idea` folder and `*.iml` files), and set up the project again, but instead of choosing `Create project from existing sources`, choose `Import project from external model` -\u003e `Gradle`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "After this, IntelliJ IDEA will identify your project as a Gradle project and you will gain access to the `Gradle Toolbar`. Through the toolbar, you run Gradle tasks and view your project\u0027s dependencies."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "You can click on the Gradle icon in the Gradle toolbar and create a new run configuration for running Gradle tasks without needing to type a `gradlew` command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "![Gradle icon](assets/GradleIcon.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Plugins"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle plugins are reusable units of build logic. Most common build tasks are provided as core plugins by Gradle. Given below are instructions on how to use some useful plugins:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "### CheckStyle"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "To add support for _Checkstyle_ (a tool to check if your code complies with a set of style rules), which comes as a core plugin, simply add the line `id \u0027checkstyle\u0027` into the `plugins` block."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Your build file should look something like this now:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "// ..."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Checkstyle expects configuration files for checkstyle to be in `./config/checkstyle/` by convention."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "A sample checkstyle rule configuration is provided in the branch."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin adds a few _tasks_ to your project. Run `gradlew checkstyleMain checkstyleTest` to verify that you have set up Checkstyle properly (the command will check your main code and test code against the style rules)."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for CheckStyle plugin](https://docs.gradle.org/current/userguide/checkstyle_plugin.html)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "### Shadow"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Shadow is a plugin that packages an application into an executable jar file. To use it, first add the following line to your Gradle build file:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin can be configured by setting some properties. Let\u0027s try to produce a jar file with the name in format of `{baseName}-{version}.jar`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following block to your build file:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Now you can run the command `gradlew shadowJar`.It publishes an executable jar to `./build/libs/`. You should be able to able to execute the created jar file by double-clicking it or using the command `java -jar {jarName}`?"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for Shadow plugin](https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* [More about the Shadow plugin](https://imperceptiblethoughts.com/shadow/introduction/)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Dependencies"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle can automate the management of dependencies to third-party libraries. Given below are some examples."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "JUnit is a testing framework for Java. It allows developers to write tests and run them. To manage JUnit dependency via Gradle, add the following to your build file:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Then, configure Gradle to use JUnit by adding the following block to your build file:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "By convention, java tests belong in `src/test/java` folder. Create a new `test/java` folder in under `src`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "src"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "├─main"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "│  └─java"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "│     └─seedu/duke/Duke.java"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "└─test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    └─java"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        └─seedu/duke/DukeTest.java"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "If you have imported your Gradle project into IntelliJ IDEA, you will notice that IDEA is able to mark the test directory as the _Test root_ (colored in green by default) automatically."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "You can now write a test (e.g., `test/java/seedu/duke/DukeTest.java`) and run it with `gradlew test`."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "## Further Reading"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Now that you have a general idea of how to accomplish basic tasks with Gradle, here\u0027s a list of material you can read to further your understanding."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* [Official Gradle Documentation](https://docs.gradle.org/current/userguide/userguide.html)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "----------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "qweiping31415": 1,
      "-": 169
    }
  }
]
