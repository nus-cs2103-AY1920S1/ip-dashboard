[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Clarence Koh": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    static List\u003cTask\u003e listOfInputs \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public static void todoCheck(String[] tasks) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        if(tasks.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public static void deadlineCheck(String[] tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        if(tasks.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        } else if (!userInput.contains(\"/by\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            throw new DukeException(\"OOPS!!! Deadline must include /by (date to complete task).\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        } else if (userInput.substring(userInput.indexOf(\"/by\") + 3).equals(\"\") || userInput.substring(userInput.indexOf(\"/by\") + 4).equals(\"\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please include the date to complete task after /by command.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public static void eventCheck(String[] tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        if(tasks.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        } else if (!userInput.contains(\"/at\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            throw new DukeException(\"OOPS!!! Event must include /at (time of event).\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        } else if (userInput.substring(userInput.indexOf(\"/at\") + 3).equals(\"\") || userInput.substring(userInput.indexOf(\"/at\") + 4).equals(\"\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please include the time of event after /at.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                int counter \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                for (Task item : listOfInputs) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    System.out.println(counter + \".\" + item.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                String[] task \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                String instruction \u003d task[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                if(instruction.equals(\"done\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(task[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    listOfInputs.get(taskNumber - 1).markedAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    System.out.println(listOfInputs.get(taskNumber - 1));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                } else if (instruction.equals(\"delete\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(task[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    System.out.println(listOfInputs.remove(taskNumber - 1));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    System.out.println(\"Now you have \" + listOfInputs.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                        switch(instruction) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                            case \"todo\": {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    todoCheck(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    Task todo \u003d new Todo(userInput.substring(5));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    listOfInputs.add(todo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(todo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(\"Now you have \" + listOfInputs.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                } finally {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                            case \"deadline\": {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    deadlineCheck(task, userInput);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    Task deadline \u003d new Deadline(userInput.substring(9, userInput.indexOf(\"/by\")), userInput.substring(userInput.indexOf(\"/by\") + 4));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    listOfInputs.add(deadline);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(deadline);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(\"Now you have \" + listOfInputs.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                } finally {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                            case \"event\": {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    eventCheck(task, userInput);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    Task event \u003d new Event(userInput.substring(6, userInput.indexOf(\"/at\")), userInput.substring(userInput.indexOf(\"/at\") + 4));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    listOfInputs.add(event);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(event);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(\"Now you have \" + listOfInputs.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                } finally {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                    break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                            default: {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    } catch (DukeException ex) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                        System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Clarence Koh": 113,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Clarence Koh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Clarence Koh": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "public  class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        return (isDone ? \"V\" : \"X\"); // return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public void markedAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Clarence Koh": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Clarence Koh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Clarence Koh": 10
    }
  }
]
