[
  {
    "path": "src/main/java/DateTimeHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "class DateTimeHandler {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public static Map\u003cLong, String\u003e ordNo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        ordNo \u003d new HashMap\u003c\u003e(42);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        ordNo.put(1L, \"1st\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        ordNo.put(2L, \"2nd\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        ordNo.put(3L, \"3rd\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        ordNo.put(21L, \"21st\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        ordNo.put(22L, \"22nd\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        ordNo.put(23L, \"23rd\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        ordNo.put(31L, \"31st\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        for(long d \u003d 1; d \u003c\u003d31; d++){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            ordNo.putIfAbsent(d, d + \"th\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public static String getDateTime(String s) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(s, formatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        DateTimeFormatter dukeFormatter \u003d new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                .appendText(ChronoField.DAY_OF_MONTH, ordNo)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                .appendPattern(\" \u0027of\u0027 MMMM yyyy, ha\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                .toFormatter();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        String st \u003d dateTime.format(dukeFormatter);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return st;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public static DateTimeRangeHelper getDateTimeRange(String s) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        String[] sArr \u003d s.split(\"-\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(sArr[0], formatter);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        DateTimeFormatter dukeFormatter \u003d new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                .appendText(ChronoField.DAY_OF_MONTH, ordNo)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                .appendPattern(\" \u0027of\u0027 MMMM yyyy, h\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                .toFormatter();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        DateTimeFormatter toFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        LocalTime toTime \u003d LocalTime.parse(sArr[1], toFormatter);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        DateTimeFormatter toTimeFormatter \u003d DateTimeFormatter.ofPattern(\"ha\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        String st \u003d dateTime.format(dukeFormatter) + \"-\" + toTime.format(toTimeFormatter);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return new DateTimeRangeHelper(dateTime.toLocalTime(), toTime, dateTime.toLocalDate(), st);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 56
    }
  },
  {
    "path": "src/main/java/DateTimeRangeHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public class DateTimeRangeHelper {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    private String displayText;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public DateTimeRangeHelper(LocalTime start, LocalTime end, LocalDate date, String text) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        startTime \u003d start;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        endTime \u003d end;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        displayText \u003d text;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public LocalTime getStartTime(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public LocalTime getEndTime(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public String getText(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return displayText;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 32
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public String toStringFile(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return \"D | \" + ((isDone) ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 19
    }
  },
  {
    "path": "src/main/java/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public class DeadlineException extends TaskException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public DeadlineException(String message, boolean desc, boolean time) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 8
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        String greet \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            DukeFile dk \u003d new DukeFile(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            String input \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            ArrayList\u003cTask\u003e lst \u003d dk.getFileContents();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                    input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                    if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        lst \u003d dk.getFileContents();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        for (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "//                            System.out.println(lst.get(i).getStatusIcon());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            System.out.println(i + 1 + \". \" + lst.get(i));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                    } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        String command \u003d inputArr[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                int i \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                lst.get(i).done();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                String nice \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                System.out.println(nice + \"\\n\\t\" + lst.get(i));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                System.out.println(\"\\\\u2639 OOPS!!! I\u0027m sorry, that task does not exist\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                int i \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                Task task \u003d lst.get(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                lst.remove(i);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                String noted \u003d \"Noted. I\u0027ve removed this task:\\n\\t\" + task + \"\\nNow you have \" + lst.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                System.out.println(noted);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                System.out.println(\"\\\\u2639 OOPS!!! I\u0027m sorry, that task does not exist\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            Task task \u003d new Task(\"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            DukeEnum de \u003d null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                switch (command) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                case \"todo\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    de \u003d DukeEnum.TODO;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                case \"deadline\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    de \u003d DukeEnum.DEADLINE;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                case \"event\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    de \u003d DukeEnum.EVENT;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                boolean hasDescription \u003d false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                boolean hasTime \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    if (de.equals(DukeEnum.TODO)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        String todoDesc \u003d inputArr[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        hasDescription \u003d true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        task \u003d new Todo(todoDesc);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    } else if (de.equals(DukeEnum.DEADLINE) || de.equals(DukeEnum.EVENT)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        String description \u003d inputArr[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        hasDescription \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        String[] taskArr \u003d description.split(\" /\", 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        String atBy \u003d taskArr[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        hasTime \u003d true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        if(de.equals(DukeEnum.DEADLINE)){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                            String byString \u003d atBy.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                            String dt \u003d DateTimeHandler.getDateTime(byString);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                            task \u003d new Deadline(taskArr[0], dt);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                            String atString \u003d atBy.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                            DateTimeRangeHelper dt \u003d DateTimeHandler.getDateTimeRange(atString);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                            task \u003d new Event(taskArr[0], dt, atString);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    lst.add(task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    String gotIt \u003d \"Got it. I\u0027ve added this task:\\n\\t\" + task + \"\\nNow you have \" + lst.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    System.out.println(gotIt);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    if (de.equals(DukeEnum.TODO)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        throw new TodoException(\"\", hasDescription);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    } else if (de.equals(DukeEnum.DEADLINE)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        throw new DeadlineException(\"\", hasDescription, hasTime);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                        throw new EventException(\"\", hasDescription, hasTime);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            } catch (TaskException ex) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                                System.out.println(ex);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                        dk.writeToFile(lst); //save everything in the txt file"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                } catch (Exception ex) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                    System.out.println(\"\\\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            System.out.println(\"\\\\u2639 OOPS!!! I\u0027m sorry, but I could not load your saved task list \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        String bye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        System.out.println(bye);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 124,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeEnum.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public enum DukeEnum {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 5
    }
  },
  {
    "path": "src/main/java/DukeFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public class DukeFile {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    private String filePath \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public DukeFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        if(!file.exists()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     * Write to file specified in filepath"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     * @param textToAdd"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     * @param taskListToAdd"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e taskListToAdd) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        for(int i \u003d 0; i \u003c taskListToAdd.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            sb.append(taskListToAdd.get(i).toStringFile() + \"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        writeToFile(sb.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     * Get the file content"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     * @return arrayList of tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public ArrayList\u003cTask\u003e getFileContents() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "//        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            Task task \u003d decodeTask(s.nextLine());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public Task decodeTask(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        String[] taskArr \u003d taskString.split(\" \\\\| \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        switch (taskArr[0]) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        case \"T\" :"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            task \u003d new Todo(taskArr[2]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        case \"D\" :"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            task \u003d new Deadline(taskArr[2], taskArr[3]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        case \"E\" :"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            task \u003d new Event(taskArr[2], DateTimeHandler.getDateTimeRange(taskArr[4]), taskArr[4]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            task \u003d new Task();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        task.isDone \u003d decodeIsDone(taskArr[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public boolean decodeIsDone(String s) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return s.equals(\"1\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 85
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    protected LocalTime startTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    protected LocalTime endTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    protected String text;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public Event(String description, DateTimeRangeHelper helper, String at) throws EventException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            this.startTime \u003d helper.getStartTime();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            this.endTime \u003d helper.getEndTime();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            this.date \u003d helper.getDate();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            this.text \u003d helper.getText();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + text + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return \"E | \" + ((isDone) ? \"1\" : \"0\") + \" | \" + description + \" | \" + text + \" | \" + at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 34
    }
  },
  {
    "path": "src/main/java/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public class EventException extends TaskException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public EventException(String message, boolean desc, boolean time) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.type \u003d \"event\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 9
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return ((isDone) ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 29
    }
  },
  {
    "path": "src/main/java/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public class TaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    protected boolean desc;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    protected boolean time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public TaskException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        desc \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        time \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        if(!desc \u0026\u0026 !time){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            sb.append(\"description \u0026 specific time/date \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            if (!desc) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                sb.append(\"description \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            if (!time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "                sb.append(\"specific time/date \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return \"\\\\u2639 OOPS!!! The \" + sb.toString() + \"of a \" + type + \" cannot be empty.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 27
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public String toStringFile(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        return \"T | \" + ((isDone) ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 16
    }
  },
  {
    "path": "src/main/java/TodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "public class TodoException extends TaskException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    public TodoException(String message, boolean desc){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.time \u003d true; //always true as todo does not need a specific time/date"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "        this.type \u003d \"todo\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 9
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "\t[T][✘] borrow books"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "\t[D][✘] return books (by: 2nd of December 2019, 6PM)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "\t[E][✘] unicon (at: 7th of December 2019, 7-8PM)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "1. [T][✘] borrow books"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "2. [D][✘] return books (by: 2nd of December 2019, 6PM)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "3. [E][✘] unicon (at: 7th of December 2019, 7-8PM)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "\t[T][✓] borrow books"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "1. [T][✓] borrow books"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "2. [D][✘] return books (by: 2nd of December 2019, 6PM)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "3. [E][✘] unicon (at: 7th of December 2019, 7-8PM)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "\t[D][✘] return books (by: 2nd of December 2019, 6PM)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "1. [T][✓] borrow books"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "2. [E][✘] unicon (at: 7th of December 2019, 7-8PM)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "todo borrow books"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "deadline return books /by 2/12/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "event unicon /at 7/12/2019 1900-2000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "if [ -e \"./Data\" ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    rm -r Data"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "fi"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "then"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "fi"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonathantjendana"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jonathantjendana": 40
    }
  }
]
