[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    mainClassName \u003d \"duke.memo.Launcher\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 41,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "E | 1 | have meeting | 02/10/2019 1600"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "D | 0 | return book | 02/10/2019 1600"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "EX | buy a book | 10"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "T | 0 | read a book"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[1. Introduction](#1-introduction)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[2. Quick Start](#2-quick-start)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[3. Features](#3-features)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "- [3.1. Add a record](#31-add-a-record) "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  - [3.1.1. Add a task](#311-add-a-task)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    - [3.1.1.1. Add a todo task: `todo`](#3111-add-a-todo-task-todo)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    - [3.1.1.2. Add an event task: `event`](#3112-add-an-event-task-event)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    - [3.1.1.3. Add a deadline task: `deadline`](#3113-add-a-deadline-task-deadline)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "      "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  - [3.1.2. Add an expense: `expense`](#312-add-an-expense-expense) "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "- [3.2. List all records: `list`](#32-list-all-records-list) "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "- [3.3. Delete a record: `delete`](#33-delete-a-record-delete) "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "- [3.4. Mark a task as done: `done`](#34-mark-a-task-as-done-done) "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "- [3.5. Find records by keyword: `find`](#35-find-records-by-keyword-find)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "- [3.6. Exit: `bye`](#36-exit-bye) "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "- [3.7. Save and load records](#37-save-and-load-records)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Duke is a memo chat bot that you can use in your daily life. It is a Command Line tool that allow you to quickly manage all your record. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "1. Installed  `Java 11` or above on your local machine."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "2. Download duke-v1.0.3.jar [here](https://github.com/waynefong0401/duke/releases/tag/A-Release)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "3. Move the jar file to your destination folder."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "4. Double-click the jar file to run Duke. "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    ![User interface](Ui.png)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "5. Type the command and enter to execute it."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "## 3. Features "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "## 3.1. Add a record:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "There are two kinds of record: Task and Expense."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "### 3.1.1. Add a task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "There are three kinds of task: todo, event and deadline."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "#### 3.1.1.1. Add a todo task: `todo`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "`todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Add a `todo` task with `\u003cdescription\u003e` to the record list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  `todo read book` will add a todo task with adescription `\"read a book\"` into the record list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  ![Todo Command](TodoCommand.png)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "#### 3.1.1.2. Add an event task: `event`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "`event \u003cdescription\u003e /at \u003ctime\u003e`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Add an `event` task with `\u003cdescription\u003e` and `\u003ctime\u003e` to the record list. Seperate the description and time using `\" /at \"`. The time format need to be `\"dd/MM/yyyy HHmm\"`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  `event have meeting /at 02/10/2019 1600` will add an event task with adescription `\"have meeting\"` and a time `\"2/10/2019 1600\"` into the record list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  ![Event Command](EventCommand.png)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "#### 3.1.1.3. Add a deadline task: `deadline`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "`deadline \u003cdescription\u003e /by \u003ctime\u003e`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Add a `deadline` task with `\u003cdescription\u003e` and `\u003ctime\u003e` to the record list. Seperate the description and deadline using `\" /by \"`. The time format need to be `\"dd/MM/yyyy HHmm\"`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  `deadline return book /by 02/10/2019 1600` will add a deadline task with a description `\"return book\"` and a deadline `\"2/10/2019 1600\"` into the record list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  ![Deadline Command](DeadlineCommand.png)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "### 3.1.2. Add an expense: `expense`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "`expense \u003cdescription\u003e / \u003camount\u003e`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Add an expense to the record list. Seperate the `\u003cdescription\u003e` and `\u003camount\u003e` using `\" / \"`. "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  `expense buy a book / 10` will add an expense with a description `\"buy a book\"` with an amount `\"10\"` into the record list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  ![Expense Command](ExpenseCommand.png)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "## 3.2. List all records: `list`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "List all the records in the record list"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "   ![List Command](ListCommand.png)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "## 3.3. Delete a record: `delete`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "`delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Delete a record with the corresponding `\u003cindex\u003e` in the record list(order by added time). The `\u003cindex\u003e` need to be within the bound of the record list. You might check the record index using `list`."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  `delete 1` will delete the first record in the record list."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  ![Delete Command](DeleteCommand.png)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "## 3.4. Mark a task as done: `done`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Mark a task with the corresponding `\u003cindex\u003e` in the record list(order by added time) as `done`. The `\u003cindex\u003e` need to be within the bound of the record list. You might check the record index using `list`."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  `done 1`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  ![Done Command](DoneCommand.png)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "## 3.5. Find records by keyword: `find`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "`find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Find the records with the description that contain `\u003ckeyword\u003e`."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  ![Find Command](FindCommand.png)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "## 3.6. Exit: `bye`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Exit the program. The textbox and sendbutton will be disabled, you will not be able to execute command then."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "  ![Bye Command](ByeCommand.png)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "## 3.7. Save and load records"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "When you enter the Duke, it will automatically load the records in the `data/duke.txt`. Also, when you make any change to the record list, the local file will be updated."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 152,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/memo/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.RecordList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.parser.InputParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private RecordList recordList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private MessageGenerator msgGenerator;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public static final String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if input/output goes wrong."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msgGenerator \u003d new MessageGenerator();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            recordList \u003d new RecordList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msgGenerator.generateErrorMsg(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            recordList \u003d new RecordList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Get response for input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param input input from GUI."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return return the result as a string"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getResponse(String input)  {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            c \u003d InputParser.parse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return c.execute(recordList, msgGenerator, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 50
    }
  },
  {
    "path": "src/main/java/duke/memo/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.gui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 11
    }
  },
  {
    "path": "src/main/java/duke/memo/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TaskTypeError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public AddCommand(String cmd) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String execute(RecordList recordList, MessageGenerator msgGenerator, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String[] curTaskDetails \u003d cmd.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Task curTask;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            switch (curTaskDetails[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                examineTaskDetails(curTaskDetails);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                curTask \u003d new ToDo(curTaskDetails[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                examineTaskDetails(curTaskDetails);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                curTask \u003d new Deadline(curTaskDetails[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                examineTaskDetails(curTaskDetails);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                curTask \u003d new Event(curTaskDetails[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                throw new TaskTypeError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            recordList.add(curTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            storage.store(recordList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return msgGenerator.generateAddedRecordMsg(curTask.toString(), recordList.size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private void examineTaskDetails(String[] curTaskDetails) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            if (curTaskDetails[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                throw new NoDescriptionException(curTaskDetails[0]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoDescriptionException(curTaskDetails[0]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 61
    }
  },
  {
    "path": "src/main/java/duke/memo/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public abstract String execute(RecordList recordList, MessageGenerator msgGenerator,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                                   Storage storage)  throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 12
    }
  },
  {
    "path": "src/main/java/duke/memo/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NotNumberException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TaskNotExistException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.Record;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private int targetTaskNo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if no task index no enter or in wrong format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param targetTaskNo  The target task index no."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If the input cannot be format to number."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public DeleteCommand(String targetTaskNo) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            this.targetTaskNo \u003d Integer.parseInt(targetTaskNo) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NotNumberException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String execute(RecordList recordList, MessageGenerator msgGenerator, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Record deletedRecord \u003d recordList.remove(targetTaskNo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            storage.store(recordList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return msgGenerator.generateDeletedRecordMsg(deletedRecord.toString(), recordList.size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TaskNotExistException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 39
    }
  },
  {
    "path": "src/main/java/duke/memo/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NotNumberException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TaskNotExistException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.Record;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private int targetTaskNo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for DoneCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if no task index no enter or in wrong format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param targetTaskNo  The target task index no."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If the input cannot be format to number."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public DoneCommand(String targetTaskNo) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            this.targetTaskNo \u003d Integer.parseInt(targetTaskNo) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NotNumberException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String execute(RecordList recordList, MessageGenerator msgGenerator, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Record doneTask \u003d recordList.get(targetTaskNo).taskDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            storage.store(recordList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return msgGenerator.generateDoneTaskMsg(doneTask.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TaskNotExistException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 40
    }
  },
  {
    "path": "src/main/java/duke/memo/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String  execute(RecordList recordList, MessageGenerator msgGenerator, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return msgGenerator.generateByeMsg();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 13
    }
  },
  {
    "path": "src/main/java/duke/memo/command/ExpenseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NotNumberException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.expense.Expense;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class ExpenseCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public ExpenseCommand(String cmd) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String execute(RecordList recordList, MessageGenerator msgGenerator, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String[] expenseDetails \u003d cmd.split(\" / \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Expense curExpense \u003d new Expense(expenseDetails[0], expenseDetails[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            recordList.add(curExpense);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            storage.store(recordList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return msgGenerator.generateAddedRecordMsg(curExpense.toString(), recordList.size());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoDescriptionException(\"expense\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NotNumberException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 33
    }
  },
  {
    "path": "src/main/java/duke/memo/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.Record;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String execute(RecordList recordList, MessageGenerator msgGenerator, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        List\u003cRecord\u003e resultTasks \u003d recordList.stream()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                .filter(t -\u003e t.getDescription().contains(keyword))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return msgGenerator.generateResultRecordMsg(resultTasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 25
    }
  },
  {
    "path": "src/main/java/duke/memo/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String  execute(RecordList recordList, MessageGenerator msgGenerator, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return msgGenerator.generateListRecordMsg(recordList);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 12
    }
  },
  {
    "path": "src/main/java/duke/memo/data/RecordList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.parser.InputParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.Record;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class RecordList extends ArrayList\u003cRecord\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public RecordList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for RecordList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param recordList  list of records."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException throw if there is a problem in the command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public RecordList(ArrayList\u003cString\u003e recordList) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (recordList.isEmpty() || recordList.get(0).isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        for (String recordString : recordList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            add(InputParser.parseLog(recordString));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 31
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class DukeException extends Throwable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String msg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 19
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/NoAmountException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class NoAmountException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String recordType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public NoAmountException(String recordType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.recordType \u003d recordType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! The amount details of an \" + recordType + \" cannot be empty.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 15
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/NoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class NoDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public NoDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! The description of a \" + taskType + \" cannot be empty.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 16
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/NoTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class NoTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public NoTimeException(String taskType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! The time details of a \" + taskType + \" cannot be empty.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 16
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/NotNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class NotNumberException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public NotNumberException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! there is no number entered\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 13
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/TaskNotExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class TaskNotExistException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public TaskNotExistException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but there is no such task in the list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 13
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/TaskTypeError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class TaskTypeError extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public TaskTypeError() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 13
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/TimeFormatErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class TimeFormatErrorException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public TimeFormatErrorException(String taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! The time format of a \" + taskType + \" cannot be read.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 15
    }
  },
  {
    "path": "src/main/java/duke/memo/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.shape.Rectangle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Rectangle clip \u003d new Rectangle();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        clip.setHeight(99.0f);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        clip.setWidth(99.0f);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        clip.setArcHeight(100);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        clip.setArcWidth(100);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Return a DialogBox contain text input by user and the icon for user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param text text input by user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param img icon for user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return DialogBox This returns a dialog box contain text and img."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Return a DialogBox contain text output by duke and the icon for duke."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param text text output by duke."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param img icon for duke."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return DialogBox This returns a dialog box contain text and img."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 79
    }
  },
  {
    "path": "src/main/java/duke/memo/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Image icon \u003d new Image(this.getClass().getResourceAsStream(\"/images/shoebill-icon.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            stage.getIcons().add(icon);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showHelloMsg();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 40
    }
  },
  {
    "path": "src/main/java/duke/memo/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Add a dialogBox with welcome message to the dialogBox container."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public void showHelloMsg() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String input \u003d \"list\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello, this is Duke!\\n\\n\" + response + \"\\n\\nHow can I help you?\",dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (response.equalsIgnoreCase(\"Bye. Hope to see you again soon!\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            sendButton.setDisable(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            userInput.setDisable(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 69
    }
  },
  {
    "path": "src/main/java/duke/memo/message/MessageGenerator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.message;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.Record;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class MessageGenerator {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public MessageGenerator() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateByeMsg() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Display the added task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param recordList ArrayList of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return String contains all task details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateListRecordMsg(RecordList recordList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        int taskNum \u003d recordList.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String msg;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (taskNum \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msg \u003d \"There is no record in your list.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (taskNum \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msg \u003d String.format(\"There is 1 records in your list:\\n1.%s\", recordList.get(0).toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            AtomicInteger index \u003d new AtomicInteger();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msg \u003d String.format(\"There are %d records in your list:\", recordList.size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msg +\u003d recordList.stream()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                    .map(t -\u003e String.format(\"\\n%d.%s\", index.incrementAndGet(), t.toString()))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                    .collect(Collectors.joining());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateDoneTaskMsg(String taskDetails) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\" + taskDetails;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateDeletedRecordMsg(String recordDetails, int recordNo) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"Noted. I\u0027ve removed this record: \\n\" + recordDetails"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                + \"\\nNow you have \" + recordNo + \" records in the list.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Display the added task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param addedRecord  Details of the added task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskListLength  Length of the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return String This returns the details of the added task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateAddedRecordMsg(String addedRecord, int taskListLength) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this record: \\n%s\\nNow you have %d records in the list.\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                addedRecord, taskListLength);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateErrorMsg(String errMsg) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return errMsg;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Display the matched task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param resultRecords  Details of the matched task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return String This returns details of the match tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateResultRecordMsg(List\u003cRecord\u003e resultRecords) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String msg \u003d \"Here are the matching records in your list:\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        msg +\u003d resultRecords.stream()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                .map(t -\u003e \"\\n\" + t.toString())"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                .collect(Collectors.joining());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return  msg;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 80
    }
  },
  {
    "path": "src/main/java/duke/memo/parser/InputParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.ExpenseCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TaskTypeError;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.Record;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.expense.Expense;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.task.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.task.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.task.ToDo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class InputParser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final String BYE_CMD \u003d \"bye\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final String LIST_CMD \u003d \"list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final String FIND_CMD \u003d \"find\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final String DONE_CMD \u003d \"done\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final String DELETE_CMD \u003d \"delete\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final String EXPENSE_CMD \u003d \"expense\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final String SPLIT_REGEX \u003d \" \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public static final int SPLIT_NO \u003d 2;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Static method parse for Parser."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * To parse the log into a command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param cmd  Full command in log file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return parsed command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException Throw if there is a problem in the command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public static Command parse(String cmd) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (cmd.equalsIgnoreCase(BYE_CMD)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (cmd.equalsIgnoreCase(LIST_CMD)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (cmd.startsWith(FIND_CMD)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            examineCmd(cmd, FIND_CMD);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new FindCommand(cmd.substring(FIND_CMD.length() + SPLIT_REGEX.length()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (cmd.startsWith(DONE_CMD)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            examineCmd(cmd, DONE_CMD);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new DoneCommand(cmd.substring(DONE_CMD.length() + SPLIT_REGEX.length()).trim());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (cmd.startsWith(DELETE_CMD)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            examineCmd(cmd, DELETE_CMD);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new DeleteCommand(cmd.substring(DELETE_CMD.length() + SPLIT_REGEX.length()).trim());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (cmd.startsWith(EXPENSE_CMD)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            examineCmd(cmd,EXPENSE_CMD);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new ExpenseCommand(cmd.substring(EXPENSE_CMD.length() + SPLIT_REGEX.length()).trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new AddCommand(cmd);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static void examineCmd(String cmd, String targetCmd) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (cmd.trim().equalsIgnoreCase(targetCmd)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw  new NoDescriptionException(targetCmd);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (!cmd.split(SPLIT_REGEX, SPLIT_NO)[0].equalsIgnoreCase(targetCmd)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TaskTypeError();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Convert raw log string to a task object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param log  Raw log."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return Task return the parsed log"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException Throw if there is a problem in the log."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public static Record parseLog(String log) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String[] taskDetails \u003d log.split(\" \\\\| \",4);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        switch (taskDetails[0]) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new ToDo(taskDetails);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new Event(taskDetails);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new Deadline(taskDetails);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        case \"EX\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new Expense(taskDetails);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 92
    }
  },
  {
    "path": "src/main/java/duke/memo/record/Record.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public abstract class Record {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Record() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Record(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Expense."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no amount description or wrong format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param desc  Description for the Record."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param recordType Type for the record."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Record(String desc, String recordType) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (desc.isBlank()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoDescriptionException(recordType);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            description \u003d desc;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Record taskDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public abstract String getPrintableMsg();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 45
    }
  },
  {
    "path": "src/main/java/duke/memo/record/expense/Expense.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.record.expense;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoAmountException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NotNumberException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.Record;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Expense extends Record {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private int amount;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final String EXPENSE_TYPE \u003d \"expense\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Expense."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no amount description or wrong format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param description  Description for the Expense."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param amount  Amount for the Expense Record."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Expense(String description, String amount) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            if (amount.isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                throw new NotNumberException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            this.amount \u003d Integer.parseInt(amount);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoAmountException(EXPENSE_TYPE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Expense."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no amount description or wrong format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param desc  Description for the Expense Record."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Expense(String desc) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (desc.trim().isBlank()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoDescriptionException(EXPENSE_TYPE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            String[] details \u003d desc.split(\" / \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            description \u003d details[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            amount \u003d Integer.parseInt(details[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoAmountException(EXPENSE_TYPE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Expense Record."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no time description or wrong format."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param recordDetails  Details for the Expense Record."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Expense(String[] recordDetails) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            description \u003d recordDetails[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            amount \u003d Integer.parseInt(recordDetails[2]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoAmountException(EXPENSE_TYPE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getPrintableMsg() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"EX | \" + description + \" | \" + amount;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return String.format(\"[EX] %s (amount: %d)\",description,amount);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 79
    }
  },
  {
    "path": "src/main/java/duke/memo/record/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.record.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TimeFormatErrorException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final String TASK_TYPE \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Deadline Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no time description or wrong format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param desc  Description for the Deadline Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Deadline(String desc) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (desc.trim().isBlank()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoDescriptionException(TASK_TYPE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            String[] details \u003d desc.split(\" /by \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            description \u003d details[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            by \u003d DATE_FORMAT.parse(details[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TimeFormatErrorException(TASK_TYPE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoTimeException(TASK_TYPE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Deadline Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no time description or wrong format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskDetails  Details for the Deadline Task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Deadline(String[] taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super(taskDetails[2], TASK_TYPE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        isDone \u003d taskDetails[1].equalsIgnoreCase(\"1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            by \u003d DATE_FORMAT.parse(taskDetails[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TimeFormatErrorException(TASK_TYPE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getPrintableMsg() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"D\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + DATE_FORMAT.format(by);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DATE_FORMAT.format(by) + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 66
    }
  },
  {
    "path": "src/main/java/duke/memo/record/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.record.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TimeFormatErrorException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final String TASK_TYPE \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat((\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Event Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no time description or wrong format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param desc  Description for the Event Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Event(String desc) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (desc.trim().isBlank()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoDescriptionException(TASK_TYPE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            String[] details \u003d desc.split(\" /at \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            description \u003d details[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            at \u003d DATE_FORMAT.parse(details[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TimeFormatErrorException(TASK_TYPE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoTimeException(TASK_TYPE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Event Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no time description or wrong format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskDetails  Details for the Event Task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Event(String[] taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super(taskDetails[2], TASK_TYPE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        isDone \u003d taskDetails[1].equalsIgnoreCase(\"1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            this.at \u003d DATE_FORMAT.parse(taskDetails[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TimeFormatErrorException(TASK_TYPE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getPrintableMsg() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"E\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + DATE_FORMAT.format(at);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DATE_FORMAT.format(at) + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 67
    }
  },
  {
    "path": "src/main/java/duke/memo/record/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.record.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.Record;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public abstract class Task extends Record {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no time description or wrong format."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param desc  Description for the Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskType  Task type for the Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Task(String desc,String taskType) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super(desc, taskType);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 32
    }
  },
  {
    "path": "src/main/java/duke/memo/record/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.record.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static final String TASK_TYPE \u003d \"todo\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for ToDo Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param desc  Description for the ToDo Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If detail is missing."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public ToDo(String desc) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super(desc, TASK_TYPE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for ToDo Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskDetails  Details for the Deadline Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If detail is missing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public ToDo(String[] taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super(taskDetails[2], TASK_TYPE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.isDone \u003d taskDetails[1].equalsIgnoreCase(\"1\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getPrintableMsg() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"T\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 41
    }
  },
  {
    "path": "src/main/java/duke/memo/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.RecordList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private FileReader fr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param filePath  Path to the log file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws IOException Unpredicted I/O exception."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String folderPath \u003d this.filePath \u003d System.getProperty(\"user.dir\") + \"/data\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        File folder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (!(folder.exists() \u0026\u0026 folder.isDirectory())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            folder.mkdir();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.filePath \u003d System.getProperty(\"user.dir\") + \"/\" + filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (file.createNewFile()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            System.out.println(\"File has been created.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            System.out.println(\"File already exists.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Store file to local."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param recordList List of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public void store(RecordList recordList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String filePath \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fw.write(recordList.stream()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                    .map(t -\u003e t.getPrintableMsg() + System.lineSeparator())"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                    .collect(Collectors.joining()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Load file to local."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return arraylist of string contains lines of log"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws IOException  File does not exist."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws IOException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return (ArrayList\u003cString\u003e) br.lines().collect(Collectors.toList());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 69
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-radius: 10; -fx-background-color: grey;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.memo.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 19
    }
  },
  {
    "path": "src/test/java/duke/memo/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void main() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 10
    }
  },
  {
    "path": "src/test/java/duke/memo/record/expense/ExpenseTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.record.expense;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "class ExpenseTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void getPrintableMsg() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 14
    }
  },
  {
    "path": "src/test/java/duke/memo/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void deadlineTest() throws Throwable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book /by 2/9/2019 2359\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"[D]✘ return book (by: 02/09/2019 2359)\", deadline.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        deadline.taskDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"[D]✓ return book (by: 02/09/2019 2359)\", deadline.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void deadlineGetPrintableMsgTest() throws Throwable {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book /by 2/9/2019 2359\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"D | 0 | return book | 02/09/2019 2359\", deadline.getPrintableMsg());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        deadline.taskDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"D | 1 | return book | 02/09/2019 2359\", deadline.getPrintableMsg());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 25
    }
  },
  {
    "path": "src/test/java/duke/memo/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void eventTest() throws Throwable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Event event \u003d new Event(\"have meeting /at 1/9/2019 1400\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"[E]✘ have meeting (at: 01/09/2019 1400)\", event.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        event.taskDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"[E]✓ have meeting (at: 01/09/2019 1400)\", event.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void eventGetPrintableMsgTest() throws Throwable {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Event event \u003d new Event(\"have meeting /at 2/9/2019 2359\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"E | 0 | have meeting | 02/09/2019 2359\", event.getPrintableMsg());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        event.taskDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"E | 1 | have meeting | 02/09/2019 2359\", event.getPrintableMsg());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 26
    }
  },
  {
    "path": "src/test/java/duke/memo/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.record.task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void todoTest() throws Throwable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        ToDo todo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"[T]✘ read book\", todo.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        todo.taskDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"[T]✓ read book\", todo.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void todoGetPrintableMsgTest() throws Throwable {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        ToDo todo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"T | 0 | read book\", todo.getPrintableMsg());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        todo.taskDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"T | 1 | read book\", todo.getPrintableMsg());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Hello from Weiwen"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[T]✘ a"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[T]✘ b"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[T]✘ jadfsl"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "1.[T]✘ a"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "2.[T]✘ b"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "3.[T]✘ jadfsl"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The time details of a event cannot be empty."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[E]✘ 1 (at: b)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The time details of a event cannot be empty."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[D]✘ ab (by: c)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "1.[T]✘ a"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "2.[T]✘ b"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "3.[T]✘ jadfsl"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "4.[E]✘ 1 (at: b)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "5.[D]✘ ab (by: c)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[T]✓ a"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "1.[T]✓ a"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "2.[T]✘ b"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "3.[T]✘ jadfsl"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "4.[E]✘ 1 (at: b)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "5.[D]✘ ab (by: c)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! I\u0027m sorry, but there is no such task in the list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[T]✓ a"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "1.[T]✘ b"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "2.[T]✘ jadfsl"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "3.[E]✘ 1 (at: b)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "4.[D]✘ ab (by: c)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 64
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "todo a"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "todo b"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "todo jadfsl"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "fajsklda"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "event "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "event 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "event 1/b"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "deadline "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "deadline ab"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "deadline ab/c"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "done "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "done abc"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "delete "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "delete ab"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 26
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 34
    }
  },
  {
    "path": "tutorials/textUiTestingTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Text UI Testing Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "1. Create a folder `[project root]\\text-messageGenerator-test`"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add a `runtest.bat` (if you are on Windows) or `runtest.sh` (if you are on a *nix OS) into the folder, containing the script below.\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  `runtest.bat`:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   @ECHO OFF"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   `runtest.sh`:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   ```shell"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "       mkdir ../bin"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   else"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "1. Update the `javac` and `java` commands in the script to match the name/location of your main class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `EXPECTED.txt` to the same folder, containing the expected output."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `input.txt` containing the input commands."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "1. Run the `.bat`/`.sh` file to execute the test."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: based on se-edu/addressbook-level2, adapted by Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 1,
      "-": 73
    }
  }
]
