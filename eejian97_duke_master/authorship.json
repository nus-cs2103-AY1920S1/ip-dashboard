[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eejian97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eejian97"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 26,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "D | 0 | return book | 2/12/2019, 1800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": "T | 0 | me"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "T | 0 | you"
      }
    ],
    "authorContributionMap": {
      "eejian97": 3
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    private Task newTaskToBeAdded;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public AddCommand(Task newTaskToBeAdded) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.newTaskToBeAdded \u003d newTaskToBeAdded;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        tasks.addTask(newTaskToBeAdded);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        ui.printAdd(newTaskToBeAdded, tasks.getSize());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        // If the object is compared with itself then return true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        /* Check if o is an instance of Complex or not"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eejian97"
        },
        "content": "          \"null instanceof [type]\" also returns false */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        if (!(o instanceof AddCommand)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        // typecast o to Complex so that we can compare data members"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        AddCommand ac \u003d (AddCommand) o;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        // Compare the data members and return accordingly"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return ac.newTaskToBeAdded.toString().equalsIgnoreCase(this.newTaskToBeAdded.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 41
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 7
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /** Deadline constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param description is the description of the Task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param date is the date of Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param time is the time of Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public Deadline(String description, String date, String time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d/MM/yyy\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return \"D | \" + super.toDataFormat() + \" | \" + date.format(DateTimeFormatter.ofPattern(\"d/MM/yyyy\"))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                + \", \" + time.format(DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                + \", \" + time.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 35
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    private int idxToBeRemoved;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public DeleteCommand(int idxToBeRemoved) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.idxToBeRemoved \u003d idxToBeRemoved;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        Task taskToBeRemoved \u003d tasks.getTask(idxToBeRemoved);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        tasks.removeTask(taskToBeRemoved);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        ui.printDelete(taskToBeRemoved, tasks.getSize());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 20
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    private int idxToMarkAsDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public DoneCommand(int idxToMarkAsDone) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.idxToMarkAsDone \u003d idxToMarkAsDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        Task taskToMarkAsDone \u003d tasks.getTask(this.idxToMarkAsDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        taskToMarkAsDone.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        ui.printDone(taskToMarkAsDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param filePath is the data storage path"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.tasks \u003d new TaskList(this.storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * main method creates instance of Duke and calls run() method."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param args is the method argument."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        Duke duke \u003d new Duke(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * run() method will run the duke programme and continuously read input for user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.ui.printWelcome();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        String cmd \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                String command \u003d this.ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                this.ui.printError(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            this.ui.printLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.closeDuke();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    private void closeDuke() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.storage.save(this.tasks.getTaskList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.ui.printGoodbye();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 53,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /** Event constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param description is the description of the Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param date is the date of Task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param time is the time of Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public Event(String description, String date, String time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d/MM/yyy\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return \"E | \" + super.toDataFormat() + \" | \" + date.format(DateTimeFormatter.ofPattern(\"d/MM/yyyy\"))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                + \", \" + time.format(DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                + \", \" + time.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 33
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 13
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        ui.printList(tasks.getTaskList());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 12
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * parse method will parse command string and return the correct Command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param command is the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @return will return the correct command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public static Command parse(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        String[] cmdList \u003d command.split(\" \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        String keyword \u003d cmdList[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        if (keyword.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        if (keyword.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            int idxToMarkAsDone \u003d Integer.parseInt(cmdList[1]) - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return new DoneCommand(idxToMarkAsDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            int idxToBeRemoved \u003d Integer.parseInt(cmdList[1]) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return new DeleteCommand(idxToBeRemoved);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        } else { //it will be an AddCommand"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            Task taskToBeAdded \u003d handleNewTask(keyword, command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return new AddCommand(taskToBeAdded);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    private static Task handleNewTask(String keyword, String cmd) throws InputMismatchException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        String desc \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        if (keyword.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String descriptionAndTime \u003d cmd.substring(8);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String[] details \u003d descriptionAndTime.trim().split(\" /by\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            if (descriptionAndTime.isEmpty() || details.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                throw new InputMismatchException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String[] dateTime \u003d details[1].trim().split(\" \",2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            if (dateTime.length \u003c 2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                throw new InputMismatchException(\"Please input deadline time format.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            desc \u003d details[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            date \u003d dateTime[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            time \u003d dateTime[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return new Deadline(desc, date, time);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String descriptionAndTime \u003d cmd.substring(5);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String[] details \u003d descriptionAndTime.trim().split(\" /at\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            if (descriptionAndTime.isEmpty() || details.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                throw new InputMismatchException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String[] dateTime \u003d details[1].split(\" \",2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            if (dateTime.length \u003c 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                throw new InputMismatchException(\"Please input event time format.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            desc \u003d details[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            date \u003d dateTime[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            time \u003d dateTime[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return new Event(desc, date, time);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            desc \u003d cmd.substring(4).trim(); //words after todo"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            if (desc.isEmpty()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                throw new InputMismatchException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return new Todo(desc);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            throw new InputMismatchException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 78
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * load() will read the data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @return will return an ArrayList of Task after reading data file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            File dataFile \u003d createOrRetrieve(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            ArrayList\u003cString\u003e stringOfTasks \u003d readFile(dataFile);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            ArrayList\u003cTask\u003e arrOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String keyword \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            Boolean isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String dateAndTime \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String date \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String time \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            for (String s : stringOfTasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                String[] cmdList \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                keyword \u003d cmdList[0].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                isDone \u003d Boolean.valueOf(cmdList[1].trim());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                description \u003d cmdList[2].trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                if (cmdList.length \u003e 3) { //aka got dateAndTime String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                    dateAndTime \u003d cmdList[3].trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                    String[] dateTime \u003d dateAndTime.split(\"\\\\s*,\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                    date \u003d dateTime[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                    time \u003d dateTime[1].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                if (keyword.equalsIgnoreCase(\"D\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                    t \u003d new Deadline(description, date, time);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                } else if (keyword.equalsIgnoreCase(\"E\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                    t \u003d new Event(description, date, time);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                } else { //(keyword.equalsIgnoreCase(\"T\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                    t \u003d new Todo(description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                arrOfTasks.add(t);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return arrOfTasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * createOrRetrieve will create the data file if not exist, or retrieve the existing file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param filePath is the path of the data file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @return will return a File object ref to the data file"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @throws IOException if cannot be created"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    private static File createOrRetrieve(String filePath) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * readFile() will read from data file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param file is the File object reference"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @return a List of Task objects after reading from data file"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    private static ArrayList\u003cString\u003e readFile(File file) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        ArrayList\u003cString\u003e stringOfTasks \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                stringOfTasks.add(line);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return stringOfTasks;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            System.err.format(\"Exception occurred trying to read \u0027%s\u0027.\", file);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * save() will save all Task from TaskArrayList into data file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param taskArrayList is the list of Tasks from duke"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskArrayList) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        File file \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        FileWriter writer;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            PrintWriter printer \u003d new PrintWriter(writer);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            for (Task t : taskArrayList) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                printer.append(t.toDataFormat() + \"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            printer.close();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 118
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return (isDone ? \"1\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "                    : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 27
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public Task getTask(int idx) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return tasks.get(idx);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void removeTask(Task taskToBeRemoved) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        tasks.remove(taskToBeRemoved);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return \"T | \" + super.toDataFormat();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * printLine() will print the separator lline from input and output."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * printWelcome() will print the welcome message from Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(\"Hello, I\u0027m Duke\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * printGoodbye() will print the goodbye message from Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * printList() will print out all tasks from Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param tasks is the list of tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eejian97"
        },
        "content": "            System.out.println(i + \".\" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * printDone() will print the message after a task is completed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param taskToMarkAsDone is the task Object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void printDone(Task taskToMarkAsDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.print(\"  \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(taskToMarkAsDone);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * printDelete will print the message after task is deleted by Duke."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param taskToBeRemoved is the task Object reference"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param numberOfTasks number of tasks in the list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void printDelete(Task taskToBeRemoved, int numberOfTasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.print(\"  \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(taskToBeRemoved);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(\"Now you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * printAdd will print the message after new Task has been added."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param newTaskToBeAdded is the Task Object reference"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param numberOfTasks number of tasks in the list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void printAdd(Task newTaskToBeAdded, int numberOfTasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.print(\"  \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(newTaskToBeAdded);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(\"Now you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * readCommand() will scan next line of user input command."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @return the command"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * printError() will print the error message from exception."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     * @param e is the Exception object reference"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eejian97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    public void printError(Exception e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        System.out.println(\"☹ OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 100
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    void toDataFormatTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        Deadline d \u003d new Deadline(\"return book\",\"2/12/2019\", \"1800\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        assertTrue(d.toDataFormat().equals(\"D | 0 | return book | 2/12/2019, 1800\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    void toStringTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        Deadline d \u003d new Deadline(\"return book\", \"2/12/2019\", \"1800\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        assertTrue(d.toString().equals(\"[D][✘] return book (by: 2 Dec 2019, 6:00 PM)\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 17
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    void parse() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        Command actual \u003d Parser.parse(\"deadline return book /by 2/12/2019 1800\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        AddCommand expected \u003dnew AddCommand(new Deadline(\"return book\",\"2/12/2019\", \"1800\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "        assertTrue(actual.equals(expected));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eejian97": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Hello, I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "  [T][✘] read book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "  [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "  [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eejian97"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eejian97"
        },
        "content": "2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eejian97"
        },
        "content": "3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eejian97"
        },
        "content": "  [E][✓] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eejian97"
        },
        "content": "  [E][✓] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eejian97"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eejian97"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eejian97"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eejian97"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "eejian97": 43
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": "blah"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "eejian97": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eejian97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eejian97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eejian97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eejian97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eejian97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eejian97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eejian97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eejian97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eejian97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eejian97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eejian97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eejian97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eejian97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eejian97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eejian97"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eejian97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eejian97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eejian97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eejian97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eejian97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eejian97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eejian97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eejian97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "eejian97": 34
    }
  },
  {
    "path": "tutorials/textUiTestingTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Text UI Testing Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "1. Create a folder `[project root]\\text-ui-test`"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add a `runtest.bat` (if you are on Windows) or `runtest.sh` (if you are on a *nix OS) into the folder, containing the script below.\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  `runtest.bat`:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   @ECHO OFF"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   `runtest.sh`:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   ```shell"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "       mkdir ../bin"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eejian97"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.txt"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   else"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "1. Update the `javac` and `java` commands in the script to match the name/location of your main class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `EXPECTED.txt` to the same folder, containing the expected output."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `input.txt` containing the input commands."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "1. Run the `.bat`/`.sh` file to execute the test."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: based on se-edu/addressbook-level2, adapted by Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "eejian97": 1,
      "-": 73
    }
  }
]
