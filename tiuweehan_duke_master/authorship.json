[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 32,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.program.DukeCli;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.program.DukeGui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * The entry point to the Duke CLI program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param filepath The location of the storage file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static void launchCli(String filepath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        new DukeCli(filepath).run();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * The entry point to the Duke GUI program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param filepath The location of the storage file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static void launchGui(String filepath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Application.launch(DukeGui.class, filepath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        launchGui(\"./duke_data.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 29
    }
  },
  {
    "path": "src/main/java/duke/command/BasicCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The abstract class that all Commands in the Duke Program inherit from."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public abstract class BasicCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected String line;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected BasicCommand(String line) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Gets all inputs for the command in the form of a string array."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return all the inputs for the command in the form of a string array."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected String[] getInputs() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return this.line.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public abstract String[] execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        ui.print(execute(tasks, storage));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public abstract void validate() throws DukeException;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Checks if the input array has the correct number of arguments."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param inputs The inputs array."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param correctNumberOfArguments The correct number of arguments for the command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException The error that is thrown when command array has the wrong number of arguments."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected static void checkIfCorrectNumberOfArguments("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        int correctNumberOfArguments"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        int numberOfArguments \u003d inputs.length - 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (numberOfArguments \u003c correctNumberOfArguments) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Insufficient arguments for this command.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } else if (numberOfArguments \u003e correctNumberOfArguments) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There are too many arguments for this command.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 73
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The command used to exit the Duke Program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class ByeCommand extends BasicCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public ByeCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        validate();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void validate() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d getInputs();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        checkIfCorrectNumberOfArguments(inputs,0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String[] execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Return a message before closing Duke"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return new String[] { \"Bye. Hope to see you again soon!\" };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 43
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The interface for Commands used in the Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param tasks The list of tasks the command should act on."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param storage The Storage that the command should act on."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return The output of the command as a String array."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException If command fails to execute to completion."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    String[] execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param tasks The list of tasks the command should act on."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param ui The ui that the result of the command should be directed to."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param storage The Storage that the command should act on."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException If command fails to execute to completion."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Checks if the input string is a valid command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException if the input string is an invalid command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    void validate() throws DukeException;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Checks if the command should cause the Duke program to exit."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return true if command should cause the Duke program to exit, otherwise returns false."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    boolean isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The command used to create a deadline task in the Duke Program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DeadlineCommand extends BasicCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public DeadlineCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        validate();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Gets the details of the command as an array of strings."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return an array of strings, the first element being the description and the second element being the deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String[] getDetails() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return super.line.split(\"deadline\\\\s*\", 2)[1].split(\"\\\\s+/by\\\\s+\", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void validate() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there is no input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (line.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Split the line by a regex and store the information in the details"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] details \u003d getDetails();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if input is invalid"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (details.length \u003c 2 || details[0].isEmpty() || details[1].isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description or the deadline for this task is empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Task task \u003d new DeadlineTask(details[0], details[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String[] execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] details \u003d getDetails();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Create a new task using the information stored in details"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Task task \u003d new DeadlineTask(details[0], details[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Add the new task to the list of tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Return the messages confirming the addition of the task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return new String[] {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            task.toString(),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \"Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        };"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 69
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The command used to delete tasks from the Duke Program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DeleteCommand extends BasicCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public DeleteCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        validate();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void validate() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d getInputs();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        checkIfCorrectNumberOfArguments(inputs, 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Integer.parseInt(inputs[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The argument should be a number.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String[] execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d getInputs();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Get the index of the task in the list of tasks and remove the task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        int index \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Return the messages confirming the deletion of the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return new String[]{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \"Noted. I\u0027ve removed this task: \","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            task.toString(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \"Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        };"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 54
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The command used to mark a task in the Duke Program as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DoneCommand extends BasicCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public DoneCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        validate();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void validate() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d getInputs();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        checkIfCorrectNumberOfArguments(inputs, 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Integer.parseInt(inputs[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The argument should be a number.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String[] execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d getInputs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Get the index of the task in the list of tasks and retrieve the task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if the argument is not a number or if there is no task at given index."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        int index \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        tasks.markAsDone(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Return the messages confirming the completion of the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return new String[] {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \"Nice! I\u0027ve marked this task as done: \","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            tasks.get(index).toString()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        };"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 53
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.EventWithEndDateTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The command used to create an event task in the Duke Program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class EventCommand extends BasicCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public EventCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        validate();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Gets the details of the command as an array of strings."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return an array of strings, the first element being the description and the second being the event dates."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String[] getDetails() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return line.split(\"event\\\\s*\", 2)[1].split(\"\\\\s+/at\\\\s+\", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void validate() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there is no input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (line.equals(\"event\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Split the line by a regex and store the information in the details"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] details \u003d getDetails();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if input is invalid"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (details.length \u003c 2 || details[0].isEmpty() || details[1].isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description or the date \u0026 time for this task is empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String[] execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] details \u003d getDetails();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] dateTimes \u003d details[1].split(\"\\\\s+/to\\\\s+\", 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Create a new task using the information stored in details"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Task task \u003d dateTimes.length \u003d\u003d 1"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            ? new EventTask(details[0], dateTimes[0])"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            : new EventWithEndDateTask(details[0], dateTimes[0], dateTimes[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Add the new task to the list of tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Return the messages confirming the addition of the task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return new String[]{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            task.toString(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \"Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        };"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 73
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.util.Formatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The command used to find tasks with a keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class FindCommand extends BasicCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public FindCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        validate();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void validate() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d getInputs();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        checkIfCorrectNumberOfArguments(inputs, 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String[] execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Retrieve the keyword"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String keyword \u003d getInputs()[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Filter the tasks that contain the keyword"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        TaskList filteredTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                filteredTasks.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Return the formatted list of tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return Formatter.formatTasks(filteredTasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 48
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.util.Formatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The command used to list all the tasks in the Duke Program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class ListCommand extends BasicCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public ListCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        validate();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void validate() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d getInputs();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there are wrong number of arguments for the command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        checkIfCorrectNumberOfArguments(inputs, 0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String[] execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Return the formatted list of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return Formatter.formatTasks(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 36
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The command used to create a todo task in the Duke Program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class TodoCommand extends BasicCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TodoCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(line);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        validate();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Gets the details of the command as an array of strings."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return an array of strings, the first element being the description of the todo task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String[] getDetails() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return line.split(\"todo\\\\s*\", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void validate() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there are no arguments"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (line.equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String[] execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Split the line by a regex and store the information in the details"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] details \u003d getDetails();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Create a new task using the information stored in details"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Task task \u003d new TodoTask(details[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Add the new task to the list of tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Return the messages confirming the addition of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return new String[]{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            task.toString(),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \"Now you have \" + tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        };"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 61
    }
  },
  {
    "path": "src/main/java/duke/enums/CommandEnum.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.enums;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The enum of Commands used in the Duke Program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public enum CommandEnum {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    EVENT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The exception used in the Duke Program to indicate the program did not run correctly."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 10
    }
  },
  {
    "path": "src/main/java/duke/program/DukeCli.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.program;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.cli.CliUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.TextStorage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DukeCli {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Constructor for the Duke class, which instantiates the TaskList, Ui and Storage objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param filepath The filepath of the storage file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public DukeCli(String filepath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        ui \u003d new CliUi();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage \u003d new TextStorage(filepath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Runs the duke program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Read Eval Print Loop"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        replLoop:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // Read the next line"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                String line \u003d ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // Parse and get the next command"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Command command \u003d Parser.parseCommand(line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // If there is no command, restart the loop"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // Execute the command"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                // Set isExit to true if the command is an exiting command"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                ui.print(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 67,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/program/DukeGui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.program;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.TextStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.gui.DialogBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DukeGui extends Application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Get the storage filepath from the parameters"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        List\u003cString\u003e params \u003d getParameters().getRaw();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String filepath \u003d params.get(0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Retrieve the storage and the list of tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        storage \u003d new TextStorage(filepath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Initialize UI components"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Initialize main layout and add UI components"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Initialize the scene using the main layout"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Set the scene of the primary stage and show the stage"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Configure the UI components"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Set minimum height and width for the stage"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Set preferred size for the main layout"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Configure settings for the Scroll Pane"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Allow vertical scrolling but not horizontal scrolling"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Set the preferred height for the dialog container"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Set the preferred width for the user input and send button"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Anchor the components to different corners of the anchor pane"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Position the scroll pane to be at the top"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Position send button to be at the bottom right"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Position the user input the be at the bottom left"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Add event listener to handle the user\u0027s input when the mouse is clicked"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Add event listener to handle the user\u0027s input when \u0027return\u0027 key is triggered"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Add event listener to always display content at bottom of scroll panel upon changes to the dialog container"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Initialize new labels for both the user and duke using the content in the user input and subsequent response"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Retrieve the dialogs for the labels and append them to the children of the dialog container"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Clear the user\u0027s input"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            // Parse the input and return the output messages from executing the command joined by a newline"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return String.join(\"\\n\", command.execute(tasks, storage));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 148
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The Storage interface for the Duke Program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public interface Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Stores a list of tasks into the storage."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param tasks The list of tasks to be stored."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException If the process of storing the list of tasks fails."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    void store(TaskList tasks) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Loads and returns a list of tasks from the storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return The list of task of tasks from the storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException If the process of loading the list of tasks fails."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TaskList load() throws DukeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 25
    }
  },
  {
    "path": "src/main/java/duke/storage/TextStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.EventWithEndDateTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * A Storage for the Duke program that stores information in a text file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class TextStorage implements Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected String fileLocation;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TextStorage(String fileLocation) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.fileLocation \u003d fileLocation;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void store(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            FileWriter fw \u003d new FileWriter(fileLocation);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                fw.write(task.toStorageFormat() + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"Cannot store tasks\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TaskList load() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            String content \u003d Files.readString(Paths.get(fileLocation), StandardCharsets.US_ASCII);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            for (String taskStorageFormat : content.split(\"\\n\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                String[] taskDetails \u003d taskStorageFormat.split(\" \\\\| \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                switch (taskDetails[0]) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    task \u003d new TodoTask(taskDetails[2]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    task \u003d new DeadlineTask(taskDetails[2], taskDetails[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    if (taskDetails.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                        task \u003d new EventTask(taskDetails[2], taskDetails[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                        task \u003d new EventWithEndDateTask(taskDetails[2], taskDetails[3], taskDetails[4]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    throw new IOException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return new TaskList(tasks);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"Unable to load file\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 83
    }
  },
  {
    "path": "src/main/java/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * A task which has a deadline in the Duke Program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    Date dueDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public DeadlineTask(String description, String dueDateTime) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.dueDateTime \u003d Parser.parseDateTime(dueDateTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toStorageFormat() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return String.join("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \" | \","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            new String[] {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"D\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                getIsDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                super.description,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Parser.convertDateTimeToString(dueDateTime)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + Parser.convertDateTimeToString(dueDateTime) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 42
    }
  },
  {
    "path": "src/main/java/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " *  A task which contains information about an Event with only a start date and time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected Date startDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public EventTask(String description, String startDateTime) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.startDateTime \u003d Parser.parseDateTime(startDateTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toStorageFormat() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return String.join("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \" | \","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            new String[] {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"E\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                getIsDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                super.description,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Parser.convertDateTimeToString(startDateTime) }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return \"[E]\" + getDetails() + \" (at: \" + Parser.convertDateTimeToString(startDateTime) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 41
    }
  },
  {
    "path": "src/main/java/duke/task/EventWithEndDateTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * A task which contains information about an Event with both start and end dates and times."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class EventWithEndDateTask extends EventTask {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected Date endDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Constructor for the EventWithEndDateTask class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param startDateTime The start date \u0026 time of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param endDatetime The end date \u0026 time of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException If the start date \u0026 time is after the end date \u0026 time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public EventWithEndDateTask(String description, String startDateTime, String endDatetime) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(description, startDateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.endDateTime \u003d Parser.parseDateTime(endDatetime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (startDateTime.compareTo(endDatetime) \u003e 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"Start date \u0026 time cannot be after end date \u0026 time!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toStorageFormat() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return String.join("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            \" | \","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            new String[] {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"E\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                getIsDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                super.description,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Parser.convertDateTimeToString(startDateTime),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                Parser.convertDateTimeToString(endDateTime)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return \"[E]\" + getDetails() + \" (from: \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            + Parser.convertDateTimeToString(startDateTime) + \" to \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            + Parser.convertDateTimeToString(endDateTime) + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * Contains information about a task in the Duke Program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Checks if the task is done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return true if the task is done, otherwise return false."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Returns the status icon."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return the tick icon if task is done, otherwise returns a cross symbol."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return (getIsDone() ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Converts the task to a suitable string format for storage."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return The task in a suitable string format for storage."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public abstract String toStorageFormat();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Gets the details of the task as a string."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return Details of the task as a string."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return getDetails();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 60
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * A list of tasks in the Duke Program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class TaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e(tasks.tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param task The task to be added to the list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Removes a task from the task list at a given index."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param index The index of the task to be removed in the task list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return The task that was removed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException if there is no task at the given index."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public Task remove(int index) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return tasks.remove(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no task at that index.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Returns a task from the task list at a given index."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param index The index of the task in the task list which should be retrieved."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return The task at the given index in the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException If there is no task at the given index."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public Task get(int index) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return tasks.get(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no task at that index.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Marks a task at a given index in the list of tasks as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param index The index of the task in the task list that should be marked as done."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException If there is not task at the given index."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void markAsDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        get(index).markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Gets the number of tasks in the list of tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return The number of tasks in the list of tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return tasks.iterator();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 90
    }
  },
  {
    "path": "src/main/java/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * A todo task in the Duke Program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toStorageFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return String.join(\" | \", new String[] { \"T\", getIsDone() ? \"1\" : \"0\", super.description });"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 26
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * An interface that interacts with the Duke Program that can read inputs and print outputs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    String readCommand();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    void showWelcome();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Prints an output to the console."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param lines An array of messages to be wrapped."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    void print(String...lines);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 17
    }
  },
  {
    "path": "src/main/java/duke/ui/cli/CliUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.ui.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * A command line implementation of the user interface interacting with the Duke Program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class CliUi implements Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public CliUi() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.print(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Prints an output to the command line including both the wrapper and the messages,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * separated by a newline. The wrapper adds a line to the top and bottom of the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * message and adds tab indentation."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param lines An array of messages to be wrapped."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void print(String...lines) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        for (String line: lines) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            System.out.println(\"\\t \" + line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 42
    }
  },
  {
    "path": "src/main/java/duke/ui/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.ui.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    // Alignment Settings for the Display"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private static final Pos DEFAULT_ALIGNMENT \u003d Pos.TOP_RIGHT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private static final Pos ALTERNATE_ALIGNMENT \u003d Pos.TOP_LEFT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private DialogBox(Label label, ImageView imageView) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        text \u003d label;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        displayPicture \u003d imageView;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // The default alignment is to the TOP_RIGHT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.setAlignment(DEFAULT_ALIGNMENT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Flips the alignment from the default alignment to the alternate alignment."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void flip() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.setAlignment(ALTERNATE_ALIGNMENT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Gets the dialog box for the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param label The label including the user\u0027s text input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param imageView The display picture of the user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return The dialog box for the user containing the text input and display picture in default alignment."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static DialogBox getUserDialog(Label label, ImageView imageView) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return new DialogBox(label, imageView);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Gets the dialog box for the duke program."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param label The label including the program\u0027s text output."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param imageView The display picture of the duke program."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return The dialog box for the duke program containing the output and display picture in alternate alignment."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static DialogBox getDukeDialog(Label label, ImageView imageView) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        DialogBox db \u003d new DialogBox(label, imageView);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 65
    }
  },
  {
    "path": "src/main/java/duke/util/Formatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class Formatter {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Prints an list of tasks to a ui."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param tasks The list of tasks to be printed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static String[] formatTasks(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Create a new String array to store the lines"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] lines \u003d new String[tasks.size()];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            // Each line is prefixed with the item number"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            lines[i] \u003d (i + 1) + \".\" + tasks.get(i);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return lines;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 22
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.enums.CommandEnum;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * The Parser that converts strings to objects and vice-versa in the Duke Program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private static final SimpleDateFormat DATE_FORMATTER \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Parses a String command and returns a Command object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param line The line containing the String command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return The Command object corresponding to the input string."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException If the command is invalid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static Command parseCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Get all inputs by splitting on a whitespaces delimiter"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        String[] inputs \u003d line.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // If there are no inputs, skip the current loop iteration and wait for another input"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        if (inputs.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // The first value in the inputs array is the command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Retrieve the command and get its enum value."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Throw a DukeException if there is no corresponding enum value."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        CommandEnum commandEnum \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            commandEnum \u003d CommandEnum.valueOf(inputs[0].toUpperCase());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        switch (commandEnum) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return new ByeCommand(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return new ListCommand(line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return new FindCommand(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return new DoneCommand(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return new DeleteCommand(line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return new TodoCommand(line);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return new DeadlineCommand(line);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return new EventCommand(line);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"Unrecognized command\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Converts a string of format \"dd/MM/yyyy HH:mm\" into a java Date object."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param dateTimeString An input string in the format dd/MM/yyyy HH:mm"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return A datetime corresponding to the input string"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @throws DukeException if the input dateTimeString is invalid"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static Date parseDateTime(String dateTimeString) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return DATE_FORMATTER.parse(dateTimeString);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            throw new DukeException(\"Invalid Date Time format! Format should be: dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * Converts a Date object into a string in the format specified in DATE_FORMATTER."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @param date The date to be converted to a string."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     * @return A string containing a formatted date."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public static String convertDateTimeToString(Date date) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return DATE_FORMATTER.format(date);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 97
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4
    }
  },
  {
    "path": "src/test/java/duke/command/ByeCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.StorageStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.UiStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class ByeCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_correctNumberOfArguments_success() throws Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Command command \u003d new ByeCommand(\"Bye\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_wrongNumberOfArguments_exceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new ByeCommand(\"Bye World\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! There are too many arguments for this command.\", e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute_success() throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Ui ui \u003d new UiStub(\"\", (String[] testPrint) -\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertArrayEquals(testPrint, new String[] { \"Bye. Hope to see you again soon!\" });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Storage storage \u003d new StorageStub(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Command command \u003d new ByeCommand(\"Bye\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void isExit_success() throws Exception {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        assertEquals((new ByeCommand(\"Bye\")).isExit(), true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 44
    }
  },
  {
    "path": "src/test/java/duke/command/DeadlineCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.StorageStub;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.UiStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DeadlineCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_validArguments_success() throws Exception {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Command command \u003d new DeadlineCommand(\"deadline report /by 22/12/2019 18:00\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_invalidArgumentsFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new DeadlineCommand(\"deadline\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a deadline cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new DeadlineCommand(\"deadline /by 22/12/2019\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description or the deadline for this task is empty.\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new DeadlineCommand(\"deadline report status /by\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description or the deadline for this task is empty.\", e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new DeadlineCommand(\"deadline report status\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description or the deadline for this task is empty.\", e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_invalidDatetimeArgument_exceptionThrown() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new DeadlineCommand(\"deadline report /by tonight\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"Invalid Date Time format! Format should be: dd/MM/yyyy HH:mm\", e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute_success() throws Exception {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Storage storage \u003d new StorageStub(tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Ui ui \u003d new UiStub(\"\", (String[] testPrint) -\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertArrayEquals(testPrint, new String[] {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"[D][✘] report (by: 22/12/2019 18:00)\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Now you have 1 tasks in the list.\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            });"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Command command \u003d new DeadlineCommand(\"deadline report /by 22/12/2019 18:00\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void isExit_success() throws Exception {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        assertEquals((new DeadlineCommand(\"deadline report /by 22/12/2019 18:00\")).isExit(), false);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 75
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.StorageStub;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.UiStub;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_validArguments_success() throws Exception {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Command command \u003d new DeleteCommand(\"delete 2\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_invalidArgumentsFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new DeleteCommand(\"delete asd\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The argument should be a number.\", e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new DeleteCommand(\"delete\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Insufficient arguments for this command.\", e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new DeleteCommand(\"delete 1 1\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! There are too many arguments for this command.\", e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void isExit_success() throws Exception {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        assertEquals((new DeleteCommand(\"delete 2\")).isExit(), false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 44
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_validArguments_success() throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Command command \u003d new DoneCommand(\"done 2\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_invalidArgumentsFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new DoneCommand(\"done asd\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The argument should be a number.\", e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new DoneCommand(\"done\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Insufficient arguments for this command.\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new DoneCommand(\"done 1 1\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! There are too many arguments for this command.\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void isExit_success() throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        assertEquals((new DoneCommand(\"done 2\")).isExit(), false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 40
    }
  },
  {
    "path": "src/test/java/duke/command/EventCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.StorageStub;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.EventWithEndDateTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.UiStub;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class EventCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_validArguments_success() throws Exception {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Command command1 \u003d new EventCommand(\"event lunch /at 22/12/2019 18:00\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Command command2 \u003d new EventCommand(\"event dinner /at 22/12/2019 18:00 /to 22/12/2019 19:00\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_invalidArgumentsFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new EventCommand(\"event\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of an event cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new EventCommand(\"event /at 22/12/2019\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description or the date \u0026 time for this task is empty.\", e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new EventCommand(\"event eat lunch /at\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description or the date \u0026 time for this task is empty.\", e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new EventCommand(\"event report status\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description or the date \u0026 time for this task is empty.\", e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_invalidDatetimeArgument_exceptionThrown() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new EventCommand(\"event report /at tonight\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"Invalid Date Time format! Format should be: dd/MM/yyyy HH:mm\", e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute_success() throws Exception {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Storage storage \u003d new StorageStub(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Ui ui \u003d new UiStub(\"\", (String[] testPrint) -\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertArrayEquals(testPrint, new String[] {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"[E][✘] report (at: 22/12/2019 18:00)\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                \"Now you have 1 tasks in the list.\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Command command \u003d new EventCommand(\"event report /at 22/12/2019 18:00\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void isExit_success() throws Exception {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        assertEquals((new EventCommand(\"event report /at 22/12/2019 18:00\")).isExit(), false);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 77
    }
  },
  {
    "path": "src/test/java/duke/command/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 9
    }
  },
  {
    "path": "src/test/java/duke/command/TodoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.StorageStub;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.ui.UiStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class TodoCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_validArguments_success() throws Exception {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Command command \u003d new TodoCommand(\"todo write report\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void constructor_invalidArgumentsFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            Command command \u003d new TodoCommand(\"todo\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a todo cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void execute_success() throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Storage storage \u003d new StorageStub(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Ui ui \u003d new UiStub(\"\", (String[] testPrint) -\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            assertArrayEquals(testPrint, new String[] {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    \"[T][✘] write report\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                    \"Now you have 1 tasks in the list.\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        Command command \u003d new TodoCommand(\"todo write report\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void isExit_success() throws Exception {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        assertEquals((new TodoCommand(\"deadline report /by 22/12/2019 18:00\")).isExit(), false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 51
    }
  },
  {
    "path": "src/test/java/duke/exception/DukeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DukeExceptionTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4
    }
  },
  {
    "path": "src/test/java/duke/storage/StorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class StorageStub implements Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public StorageStub(TaskList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        store(tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void store(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.tasks \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 19
    }
  },
  {
    "path": "src/test/java/duke/storage/TextStorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class TextStorageTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class DeadlineTaskTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4
    }
  },
  {
    "path": "src/test/java/duke/task/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class EventTaskTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 5
    }
  },
  {
    "path": "src/test/java/duke/task/EventWithEndDateTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class EventWithEndDateTaskTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class TodoTaskTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 5
    }
  },
  {
    "path": "src/test/java/duke/ui/CliUiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class CliUiTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4
    }
  },
  {
    "path": "src/test/java/duke/ui/UiStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public class UiStub implements Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected String line;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    protected Consumer\u003cString[]\u003e testPrint;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public UiStub(String line, Consumer\u003cString[]\u003e testPrint) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.testPrint \u003d testPrint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return this.line;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public void print(String...lines) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        testPrint.accept(lines);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 25
    }
  }
]
