[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    id \u0027com.diffplug.gradle.spotless\u0027 version \u00273.24.2\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "group \u0027leeyiyuan\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.3.1\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.3.1\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "spotless {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    java {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        googleJavaFormat()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        indentWithTabs(2)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        indentWithSpaces(4)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        trimTrailingWhitespace()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        removeUnusedImports()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        importOrder()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    archiveVersion \u003d \"0.1.0\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    mainClassName \u003d \"com.leeyiyuan.Launcher\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  standardInput \u003d System.in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 46,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.view.DukeGui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        Application.launch(DukeGui.class, args);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 14
    }
  },
  {
    "path": "src/main/java/command/AbortException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents an exception indicating that an abort signal was raised. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class AbortException extends CommandExecuteException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a new exception with the specified detail message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param message The detail message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public AbortException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 16
    }
  },
  {
    "path": "src/main/java/command/AddDeadlineTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.StorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.ui.UserOutputInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a Command to add a DeadlineTask. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class AddDeadlineTaskCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Title for the new DeadlineTask. "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * By value for the new DeadlineTask. "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs an AddDeadlineTaskCommand from a title and a by value."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param title The title for the new DeadlineTask."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param by The by value for the new DeadlineTask."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public AddDeadlineTaskCommand(String title, LocalDateTime by) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void execute(TaskList tasks, UserOutputInterface uoi, Storage storage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throws CommandExecuteException, StorageException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (tasks.containsTitle(this.title)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new CommandExecuteException(\"A task with the same title already exists.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        DeadlineTask task \u003d new DeadlineTask();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(this.title);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setBy(this.by);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        String text \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        text +\u003d \"  \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        text +\u003d String.format(\"Now you have %d %s in the list.\", tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        uoi.showLine(text);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 58
    }
  },
  {
    "path": "src/main/java/command/AddEventTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.StorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.EventTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.ui.UserOutputInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a Command to add an EventTask. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class AddEventTaskCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** Title for new EventTask. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** At value for the new DeadlineTask. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs an AddEventTaskCommand from a title and an at value."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param title The title for the new EventTask."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param at The at value for the new EventTask."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public AddEventTaskCommand(String title, LocalDateTime at) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void execute(TaskList tasks, UserOutputInterface uoi, Storage storage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throws CommandExecuteException, StorageException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (tasks.containsTitle(this.title)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new CommandExecuteException(\"A task with the same title already exists.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        EventTask task \u003d new EventTask();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(this.title);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setAt(this.at);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        String text \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        text +\u003d \"  \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        text +\u003d String.format(\"Now you have %d %s in the list.\", tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        uoi.showLine(text);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 54
    }
  },
  {
    "path": "src/main/java/command/AddTodoTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.StorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TodoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.ui.UserOutputInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a Command to add a TodoTask. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class AddTodoTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** Title for the new TodoTask. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs an AddTodoTaskCommand from a title."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param title The title for the new DeadlineTask."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public AddTodoTaskCommand(String title) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void execute(TaskList tasks, UserOutputInterface uoi, Storage storage)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throws CommandExecuteException, StorageException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (tasks.containsTitle(this.title)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new CommandExecuteException(\"A task with the same title already exists.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        TodoTask task \u003d new TodoTask();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(this.title);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        String text \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        text +\u003d \"  \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        text +\u003d String.format(\"Now you have %d %s in the list.\", tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        uoi.showLine(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 47
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.StorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.ui.UserOutputInterface;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a command. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Executs the command against a given context."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param uoi User output interface to interact with the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param storage Storage to handle serialization and deserialization of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @throws CommandExecuteException If there was an error executing the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @throws StorageException If there was an error interacting with storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public abstract void execute(TaskList tasks, UserOutputInterface uoi, Storage storage)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throws CommandExecuteException, StorageException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 25
    }
  },
  {
    "path": "src/main/java/command/CommandExecuteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents an exception indicating an error in executing a Command. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class CommandExecuteException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a new exception with the specified detail message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param message The detail message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public CommandExecuteException(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 19
    }
  },
  {
    "path": "src/main/java/command/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.StorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.ui.UserOutputInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a Command to delete an existing Task. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** Index of the Task to delete. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a DeleteTaskCommand from an index."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param index The index of the Task to delete."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public DeleteTaskCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void execute(TaskList tasks, UserOutputInterface uoi, Storage storage)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throws CommandExecuteException, StorageException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (tasks.size() \u003e\u003d this.index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            Task task \u003d tasks.remove(this.index - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            String text \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            text +\u003d \"  \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            text +\u003d String.format(\"Now you have %d %s in the list.\", "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                    tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            uoi.showLine(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new CommandExecuteException(\"Task does not exist at index.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 46
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.ui.UserOutputInterface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a Command to exit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void execute(TaskList tasks, UserOutputInterface uoi, Storage storage) throws AbortException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        uoi.showLine(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        throw new AbortException(\"Abort signal detected.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 21
    }
  },
  {
    "path": "src/main/java/command/FindTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.StorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.ui.UserOutputInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a Command to find a Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class FindTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** Keyword to search Tasks for. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a FindTaskCommand from a keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param keyword Keyword to search Tasks for."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public FindTaskCommand(String keyword) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.keyword \u003d keyword.toUpperCase();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void execute(TaskList tasks, UserOutputInterface uoi, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        String text \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            if (task.getTitle().toUpperCase().contains(this.keyword)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                text +\u003d String.format(\"\\n%d.%s\", i + 1, task.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        uoi.showLine(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 41
    }
  },
  {
    "path": "src/main/java/command/ListTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.ui.UserOutputInterface;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a Command to list existing tasks. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class ListTasksCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void execute(TaskList tasks, UserOutputInterface uoi, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        String text \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            text +\u003d String.format(\"\\n%d.%s\", i + 1, task.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        uoi.showLine(text);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 26
    }
  },
  {
    "path": "src/main/java/command/TaskDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.StorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.ui.UserOutputInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a Command to mark an existing Task as done. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class TaskDoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** Index of the Task to mark as done. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a TaskDoneCommand from an index."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param index The index of the Task to mark as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public TaskDoneCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void execute(TaskList tasks, UserOutputInterface uoi, Storage storage)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throws CommandExecuteException, StorageException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (tasks.size() \u003e\u003d this.index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            if (tasks.get(this.index - 1).getIsDone()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                throw new CommandExecuteException(\"Task is already marked as done.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            Task task \u003d tasks.get(this.index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            task.setIsDone(true);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            String text \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            text +\u003d task.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            uoi.showLine(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new CommandExecuteException(\"Task does not exist at index.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 48
    }
  },
  {
    "path": "src/main/java/command/format/AddDeadlineTaskCommandFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.AddDeadlineTaskCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for an AddDeadlineTaskCommand. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class AddDeadlineTaskCommandFormatter extends CommandFormatter {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Command parse(String text) throws CommandParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (Pattern.matches(\"^deadline ?/by.*$\", text)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new CommandParseException(\"Title of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else if (Pattern.matches(\"^deadline .+ /by ?$\", text)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new CommandParseException(\"By value of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else if (Pattern.matches(\"^deadline .+ /by .+$\", text)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            String[] data \u003d text.split(\"deadline \", 2)[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            String title \u003d data[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            LocalDateTime by \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                by \u003d LocalDateTime.parse(data[1], DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                throw new CommandParseException(\"By value of deadline invalid\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            return new AddDeadlineTaskCommand(title, by);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new UnsupportedCommandException(\"Unhandled command.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 39
    }
  },
  {
    "path": "src/main/java/command/format/AddEventTaskCommandFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.AddEventTaskCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for an AddEventTaskCommand. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class AddEventTaskCommandFormatter extends CommandFormatter {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Command parse(String text) throws CommandParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (Pattern.matches(\"^event ?/at.*$\", text)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new CommandParseException(\"Description of event cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else if (Pattern.matches(\"^event .+ /at ?$\", text)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new CommandParseException(\"Time of event cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else if (Pattern.matches(\"^event .+ /at .+$\", text)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            String[] data \u003d text.split(\"event \", 2)[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            String title \u003d data[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            LocalDateTime at \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                at \u003d LocalDateTime.parse(data[1], DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                throw new CommandParseException(\"At value of deadline invalid\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            return new AddEventTaskCommand(title, at);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new UnsupportedCommandException(\"Unknown command.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 39
    }
  },
  {
    "path": "src/main/java/command/format/AddTodoTaskCommandFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.AddTodoTaskCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for an AddTodoTaskCommand. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class AddTodoTaskCommandFormatter extends CommandFormatter {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Command parse(String text) throws CommandParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (Pattern.matches(\"^todo ?$\", text)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new CommandParseException(\"Title of todo cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else if (Pattern.matches(\"^todo .+$\", text)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            String title \u003d text.split(\"todo \", 2)[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            return new AddTodoTaskCommand(title);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new UnsupportedCommandException(\"Unknown command.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 27
    }
  },
  {
    "path": "src/main/java/command/format/CommandFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for a specific command. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public abstract class CommandFormatter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Returns a Command parsed from a string of text."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param text Text to parse Command from."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @return Command parsed from text."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @throws CommandParseException If Command cannot be parsed from text."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public abstract Command parse(String text) throws CommandParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 19
    }
  },
  {
    "path": "src/main/java/command/format/CommandParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents an exception indicating an error in parsing a Command text. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class CommandParseException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a new exception with the specified detail message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param message The detail message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public CommandParseException(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 19
    }
  },
  {
    "path": "src/main/java/command/format/DeleteTaskCommandFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.DeleteTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for a DeleteTaskCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class DeleteTaskCommandFormatter extends CommandFormatter {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Command parse(String text) throws CommandParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (Pattern.matches(\"^delete ?$\", text)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new CommandParseException(\"Index of delete command cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else if (Pattern.matches(\"^delete [0-9]+$\", text)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            int index \u003d Integer.parseInt(text.split(\" \")[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            return new DeleteTaskCommand(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new UnsupportedCommandException(\"Unknown command.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 27
    }
  },
  {
    "path": "src/main/java/command/format/ExitCommandFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for an ExitCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class ExitCommandFormatter extends CommandFormatter {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Command parse(String text) throws CommandParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (Pattern.matches(\"^bye$\", text)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new UnsupportedCommandException(\"Unknown command.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 24
    }
  },
  {
    "path": "src/main/java/command/format/FindTaskCommandFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.FindTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for a FindTaskCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class FindTaskCommandFormatter extends CommandFormatter {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Command parse(String text) throws CommandParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (Pattern.matches(\"^find [^\\\\s]+$\", text)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            String keyword \u003d text.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            return new FindTaskCommand(keyword);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new UnsupportedCommandException(\"Unknown command.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 25
    }
  },
  {
    "path": "src/main/java/command/format/ListTasksCommandFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.ListTasksCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for a ListTasksCommand. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class ListTasksCommandFormatter extends CommandFormatter {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Command parse(String text) throws CommandParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (Pattern.matches(\"^list$\", text)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            return new ListTasksCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new UnsupportedCommandException(\"Unknown command.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 24
    }
  },
  {
    "path": "src/main/java/command/format/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a parser to parse Commands using a fixed list of CommandFormatters. "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** Fixed list of CommandFormatters used by Parser. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected ArrayList\u003cCommandFormatter\u003e commandFormatters;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a Parser using a fixed list of CommandFormatters. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.commandFormatters \u003d new ArrayList\u003cCommandFormatter\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.commandFormatters.add(new AddDeadlineTaskCommandFormatter());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.commandFormatters.add(new AddEventTaskCommandFormatter());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.commandFormatters.add(new AddTodoTaskCommandFormatter());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.commandFormatters.add(new DeleteTaskCommandFormatter());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.commandFormatters.add(new ExitCommandFormatter());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.commandFormatters.add(new ListTasksCommandFormatter());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.commandFormatters.add(new TaskDoneCommandFormatter());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.commandFormatters.add(new FindTaskCommandFormatter());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Returns a Command parsed from a string of text."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param text Text to parse Command from."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @return Command parsed from text."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @throws CommandParseException If Command cannot be parsed from text."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Command parse(String text) throws CommandParseException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        for (CommandFormatter commandFormatter : this.commandFormatters) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                command \u003d commandFormatter.parse(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            } catch (UnsupportedCommandException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                // Cannot parse with current CommandFormatter. Suppress error and move to next."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            } catch (CommandParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new UnsupportedCommandException(\"Unknown command.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 57
    }
  },
  {
    "path": "src/main/java/command/format/TaskDoneCommandFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.TaskDoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for a TaskDoneCommand. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class TaskDoneCommandFormatter extends CommandFormatter {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Command parse(String text) throws CommandParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (Pattern.matches(\"^done [0-9]+$\", text)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            int index \u003d Integer.parseInt(text.split(\" \")[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            return new TaskDoneCommand(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new UnsupportedCommandException(\"Unknown command.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 25
    }
  },
  {
    "path": "src/main/java/command/format/UnsupportedCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.command.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents an exception indicating that a Command text is unsupported. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class UnsupportedCommandException extends CommandParseException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a new exception with the specified detail message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param message The detail message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public UnsupportedCommandException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 16
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents an exception indicating an error within the Duke program. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a new exception with the specified detail message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param message The detail message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 16
    }
  },
  {
    "path": "src/main/java/exception/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents an exception indicating that a disallowed value has been used as an argument. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class DukeIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a new exception with the specified detail message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param message The detail message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public DukeIllegalArgumentException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 16
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.format.DeadlineTaskFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.format.EventTaskFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.format.TaskFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.format.TaskFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.format.TaskParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.format.TodoTaskFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a storage for tasks persistence."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** Path of file used to back Storage. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** Fixed list of TaskFormatters. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected ArrayList\u003cTaskFormatter\u003e taskFormatters;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a Storage using a file path."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param filePath Path of file used to back Storage."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.taskFormatters \u003d new ArrayList\u003cTaskFormatter\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.taskFormatters.add(new TodoTaskFormatter());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.taskFormatters.add(new DeadlineTaskFormatter());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.taskFormatters.add(new EventTaskFormatter());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Returns a list of task persisted by the Storage."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @return List of task persisted by the Storage."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @throws StorageException If there was an error loading the tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws StorageException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        Scanner scanner \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            scanner \u003d new Scanner(new File(this.filePath));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                Task task \u003d parseTask(line);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                assert task !\u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new StorageException(\"Tasks file not found.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            if (scanner !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                scanner.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private Task parseTask(String text) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        for (TaskFormatter taskFormatter : this.taskFormatters) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                task \u003d taskFormatter.parse(text);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            } catch (TaskParseException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                // Cannot parse with current TaskFormatter. Suppress error and move to next."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Persists a list of tasks into the Storage."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param tasks List of tasks to persist."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @throws StorageException If tasks cannot be persisted into Storage."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) throws StorageException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        FileWriter fileWriter \u003d null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            fileWriter \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                String line \u003d formatTask(task);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                assert line !\u003d null;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                fileWriter.write(line + \"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new StorageException(\"Error writing to file.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            if (fileWriter !\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                    fileWriter.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                    throw new StorageException(\"Error closing file.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private String formatTask(Task task) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        for (TaskFormatter taskFormatter : this.taskFormatters) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                line \u003d taskFormatter.format(task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            } catch (TaskFormatException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                // Cannot format with current TaskFormatter. Suppress error and move to next."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 128
    }
  },
  {
    "path": "src/main/java/storage/StorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents an exception indicating an error within a Storage."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class StorageException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a new exception with the specified detail message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param message The detail message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public StorageException(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 19
    }
  },
  {
    "path": "src/main/java/storage/format/DeadlineTaskFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.storage.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for a DeadlineTask."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class DeadlineTaskFormatter extends TaskFormatter {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public DeadlineTask parse(String text) throws TaskParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (!Pattern.matches(\"^D \\\\| [01] \\\\| .+ \\\\| .+$\", text)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new TaskParseException(\"Bad DeadlineTask format.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        String[] data \u003d text.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        DeadlineTask task \u003d new DeadlineTask();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setIsDone(data[1].equals(\"1\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(data[2]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setBy(LocalDateTime.parse(data[3], DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public String format(Task task) throws TaskFormatException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (!(task instanceof DeadlineTask)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new TaskFormatException(\"Invalid task.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                \"D | %d | %s | %s\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                ((DeadlineTask) task).getIsDone() ? 1 : 0,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                ((DeadlineTask) task).getTitle(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                ((DeadlineTask) task).getBy().format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 47
    }
  },
  {
    "path": "src/main/java/storage/format/EventTaskFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.storage.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for an EventTask."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class EventTaskFormatter extends TaskFormatter {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public EventTask parse(String text) throws TaskParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (!Pattern.matches(\"^E \\\\| [01] \\\\| .+ \\\\| .+$\", text)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new TaskParseException(\"Bad EventTask format.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        String[] data \u003d text.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        EventTask task \u003d new EventTask();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setIsDone(data[1].equals(\"1\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(data[2]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setAt(LocalDateTime.parse(data[3], DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public String format(Task task) throws TaskFormatException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (!(task instanceof EventTask)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new TaskFormatException(\"Invalid task.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                \"E | %d | %s | %s\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                ((EventTask) task).getIsDone() ? 1 : 0,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                ((EventTask) task).getTitle(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                ((EventTask) task).getAt().format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 47
    }
  },
  {
    "path": "src/main/java/storage/format/TaskFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.storage.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents an exception indicating an error in formatting a task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class TaskFormatException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a new exception with the specified detail message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param message The detail message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public TaskFormatException(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 19
    }
  },
  {
    "path": "src/main/java/storage/format/TaskFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.storage.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter to format a task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public abstract class TaskFormatter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Returns a Task parsed from a string of text."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param text Text to parse Task from."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @return Task parsed from text."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @throws TaskParseException If Task cannot be parsed from text."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public abstract Task parse(String text) throws TaskParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Returns a string of text formatted from a Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param task Task to use to format text."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @return Text formatted from task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @throws TaskFormatException If Task cannot be formatted into text."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public abstract String format(Task task) throws TaskFormatException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 28
    }
  },
  {
    "path": "src/main/java/storage/format/TaskParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.storage.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents an exception indicating an error in parsing a task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class TaskParseException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a new exception with the specified detail message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param message The detail message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public TaskParseException(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 19
    }
  },
  {
    "path": "src/main/java/storage/format/TodoTaskFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.storage.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TodoTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a formatter for a TodoTask."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class TodoTaskFormatter extends TaskFormatter {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public TodoTask parse(String text) throws TaskParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (!Pattern.matches(\"^T \\\\| [01] \\\\| .+$\", text)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new TaskParseException(\"Bad TodoTask format.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        String[] data \u003d text.split(\" \\\\| \", 3);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        TodoTask task \u003d new TodoTask();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setIsDone(data[1].equals(\"1\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(data[2]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc} "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public String format(Task task) throws TaskFormatException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (!(task instanceof TodoTask)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new TaskFormatException(\"Invalid task.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                \"T | %d | %s\", ((TodoTask) task).getIsDone() ? 1 : 0, ((TodoTask) task).getTitle());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 41
    }
  },
  {
    "path": "src/main/java/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** By value of the DeadlineTask. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a DeadlineTask."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public DeadlineTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Returns the by value of the DeadlineTask."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @return By value of the DeadlineTask."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public LocalDateTime getBy() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Sets the by value of the DeadlineTask."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param by By value."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void setBy(LocalDateTime by) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                \"[D][%s] %s (by: %s)\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                this.isDone ? \"✓\" : \"✗\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                this.title,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                this.by.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 51
    }
  },
  {
    "path": "src/main/java/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** At value of the EventTask. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs an EventTask."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public EventTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Returns the at value of the EventTask."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @return At value of the EventTask."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public LocalDateTime getAt() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Sets the at value of the EventTask."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param at At value."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void setAt(LocalDateTime at) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                \"[E][%s] %s (at: %s)\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                this.isDone ? \"✓\" : \"✗\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                this.title,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                this.at.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 51
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** Title of the Task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** Done status of the Task. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Returns the title of the Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @return Title of the Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Sets the title of the Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param title Title."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Gets the done status of the Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @return Done status of the Task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Sets the done status of the Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param isDone Done status."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 56
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a list of Tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs an empty TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a TaskList from a list of Tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public TaskList(Collection\u003c? extends Task\u003e tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Checks whether the TaskList contains a Task with a given title."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param title Title to check for."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @return True if TaskList contains Task with the given title."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public boolean containsTitle(String title) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        for (Task task : this) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            if (task.getTitle().toUpperCase().equals(title.toUpperCase())) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 40
    }
  },
  {
    "path": "src/main/java/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a TodoTask."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public TodoTask() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        return String.format(\"[T][%s] %s\", this.isDone ? \"✓\" : \"✗\", this.title);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 22
    }
  },
  {
    "path": "src/main/java/ui/DukeCli.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.ui.UserOutputInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents a console based user interface for interacting with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class DukeCli implements UserOutputInterface {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /** Scanner object used to communicate with console. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    protected Scanner scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a DukeCli."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public DukeCli() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Shows a welcome message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Shows an empty line."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Shows a string of text on a line."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param text String of text."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void showLine(String text) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Shows a string of error text on a line."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param text String of text."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void showError(String text) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        System.out.println(\"Error: \" + text);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Returns a string of command text read from the Ui."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @return String of command text read."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @throws UiException If there was an error in the Ui."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public String readCommand() throws UiException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        if (this.scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            return scanner.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            throw new UiException(\"UI stream ended.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 67
    }
  },
  {
    "path": "src/main/java/ui/UiException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/** "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * Represents an exception indicating an error in the Ui."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class UiException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Constructs a new exception with the specified detail message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param message The detail message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public UiException(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 19
    }
  },
  {
    "path": "src/main/java/ui/UserOutputInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public interface UserOutputInterface {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void showLine(String text);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void showError(String text);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 9
    }
  },
  {
    "path": "src/main/java/view/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Creates a DialogBox from a String text and an Image."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param text String text to use in DialogBox."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * @param img Image to use in DialogBox."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void flip() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        dialog.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 57
    }
  },
  {
    "path": "src/main/java/view/DukeGui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.view.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class DukeGui extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeGui.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            Scene scene \u003d new Scene(fxmlLoader.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 27
    }
  },
  {
    "path": "src/main/java/view/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "package com.leeyiyuan.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.ui.UserOutputInterface;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.AbortException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.Command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.CommandExecuteException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.format.CommandParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.command.format.Parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.Storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.storage.StorageException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TaskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class MainWindow extends VBox implements UserOutputInterface {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private void initialize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.storage \u003d new Storage(\"/home/leeyiyuan/Projects/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            this.tasks \u003d new TaskList(this.storage.load());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } catch (StorageException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            addDukeDialog(\"Using new task list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        addUserDialog(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            Command command \u003d this.parser.parse(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            command.execute(this.tasks, this, this.storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } catch (CommandParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            showError(e.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } catch (AbortException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } catch (CommandExecuteException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            showError(e.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        } catch (StorageException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "            showError(e.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private void addDukeDialog(String text) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, this.dukeImage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.dialogContainer.getChildren().add(db);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    private void addUserDialog(String text) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, this.userImage);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        this.dialogContainer.getChildren().add(db);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void showLine(String text) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        addDukeDialog(text);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void showError(String text) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        addDukeDialog(\"Error: \" + text);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 95
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003cfx:root maxWidth\u003d\"Infinity\" prefHeight\u003d\"200\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" maxWidth\u003d\"Infinity\" alignment\u003d\"top_right\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003cVBox maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"com.leeyiyuan.view.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" VBox.vgrow\u003d\"ALWAYS\" fitToWidth\u003d\"true\" maxWidth\u003d\"Infinity\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    \u003cHBox prefHeight\u003d\"30.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" HBox.hgrow\u003d\"ALWAYS\" maxHeight\u003d\"Infinity\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefWidth\u003d\"100.0\" maxHeight\u003d\"Infinity\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 22
    }
  },
  {
    "path": "src/test/java/DeadlineTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.DeadlineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class DeadlineTaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void testOperations() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        DeadlineTask task \u003d new DeadlineTask();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(\"random title\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setBy(LocalDateTime.of(2019, 8, 25, 12, 0));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        assertEquals(task.toString(), \"[D][✗] random title (by: 25/8/2019 1200)\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setIsDone(true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        assertEquals(task.toString(), \"[D][✓] random title (by: 25/8/2019 1200)\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(\"another title\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        assertEquals(task.toString(), \"[D][✓] another title (by: 25/8/2019 1200)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setBy(LocalDateTime.of(2000, 1, 2, 13, 45));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        assertEquals(task.toString(), \"[D][✓] another title (by: 2/1/2000 1345)\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 26
    }
  },
  {
    "path": "src/test/java/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.EventTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class EventTaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void testOperations() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        EventTask task \u003d new EventTask();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(\"random title\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setAt(LocalDateTime.of(2019, 8, 25, 12, 0));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        assertEquals(task.toString(), \"[E][✗] random title (at: 25/8/2019 1200)\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setIsDone(true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        assertEquals(task.toString(), \"[E][✓] random title (at: 25/8/2019 1200)\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(\"another title\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        assertEquals(task.toString(), \"[E][✓] another title (at: 25/8/2019 1200)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setAt(LocalDateTime.of(2000, 1, 2, 13, 45));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        assertEquals(task.toString(), \"[E][✓] another title (at: 2/1/2000 1345)\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 26
    }
  },
  {
    "path": "src/test/java/TodoTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import com.leeyiyuan.task.TodoTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "public class TodoTaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    public void testOperations() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        TodoTask task \u003d new TodoTask();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(\"random title\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        assertEquals(task.toString(), \"[T][✗] random title\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setIsDone(true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        assertEquals(task.toString(), \"[T][✓] random title\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        task.setTitle(\"another title\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "        assertEquals(task.toString(), \"[T][✓] another title\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "java -classpath ../bin com.leeyiyuan.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeYiyuan"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "LeeYiyuan": 34
    }
  }
]
