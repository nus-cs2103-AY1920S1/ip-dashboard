[
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "D-1-fgepwfnwp-26/07/1900 1000"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String[] deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String[] datetime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c Updated upstream"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        deadline \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"D-\" + super.checkStatus() + \"-\" + super.getDescription().trim() + \"-\" + this.deadline[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.deadline \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.datetime \u003d deadline[1].split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String getdate() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String splitdates[] \u003d this.datetime[0].split(\"/\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String day \u003d splitdates[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String month \u003d splitdates[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String year \u003d splitdates[2];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String editedday;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String editedmonth;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        if (day.equals(\"1\") || day.equals(\"01\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"1st\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"2\") || day.equals(\"02\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"2nd\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"3\") || day.equals(\"03\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"3rd\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"21\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"21st\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"22\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"22nd\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"23\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"23rd\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"31\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"31st\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d day + \"th\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"1\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"01\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"January\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"2\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"02\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"Febuary\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"3\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"03\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"March\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"4\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"04\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"April\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"5\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"05\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"May\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"6\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"06\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"June\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"7\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"07\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"July\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"8\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"08\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"August\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"9\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"09\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"September\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"10\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"October\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"11\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"November\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"12\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"December\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"Invalid\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return editedday + \" of \" + editedmonth + \" \" + year;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String gettime() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String time \u003d this.datetime[1];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String timestr;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        int timeint \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        int hours \u003d timeint/100;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        int minutes \u003d timeint % 100;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        if (hours \u003e\u003d 12) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            timestr \u003d Integer.toString(hours - 12) + \".\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    + String.format(\"%02d\", minutes) + \"pm\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (hours \u003d\u003d 0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            timestr \u003d \"12.\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    + String.format(\"%02d\", minutes) + \"am\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            timestr \u003d Integer.toString(hours) + \".\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    + String.format(\"%02d\", minutes) + \"am\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return timestr;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"D-\" + super.checkStatus() + \"-\" + super.getDescription().trim() + \"-\" + this.deadline[1];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e Stashed changes"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-8"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"[D]\" + super.toString() +"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                \"(by: \" + this.getdate() + \", \" + this.gettime() + \")\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 147
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    private static void WriteObjectToFile(String filepath, ArrayList\u003cTask\u003e serObj) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            FileWriter fileOut \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            for (int i \u003d 0; i \u003c serObj.size(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                if (i \u003d\u003d serObj.size() - 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    fileOut.write(serObj.get(i).formatString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    fileOut.write(serObj.get(i).formatString() + \"\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            fileOut.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            System.out.println(\"Something went wrong!\" + e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    private static void loadFileContents(String filePath, ArrayList\u003cTask\u003e storinglist) throws FileNotFoundException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            String currentline \u003d s.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            String[] splitcurrentline \u003d currentline.split(\"-\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            if (splitcurrentline[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                storinglist.add(new Deadline(splitcurrentline[2],"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        \"by \" + splitcurrentline[3]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                storinglist.get(storinglist.size()-1).recoverStatus(splitcurrentline[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            } else if (splitcurrentline[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                storinglist.add(new Events(splitcurrentline[2],"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        \"at \" + splitcurrentline[3]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                storinglist.get(storinglist.size()-1).recoverStatus(splitcurrentline[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            } else if (splitcurrentline[0].equals(\"T\"))  {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                storinglist.add(new ToDos(splitcurrentline[2]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                storinglist.get(storinglist.size()-1).recoverStatus(splitcurrentline[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        ArrayList\u003cTask\u003e storinglist;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        storinglist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \"  ____        _        \\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String welcome \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + logo"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + \"\\n Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + \" What can I do for you?\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        Duke.loadFileContents(\"/Users/kchensheng/Documents/NUS/Y2\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                \"/Sem1/CS2103/chen_sheng_duke/data/data.txt\", storinglist);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    for (int x \u003d 0; x \u003c storinglist.size(); x++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        System.out.println(x + 1 + \". \" + storinglist.get(x));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    if (!command.contains(\" \")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        throw new IllegalCommandException(\"There must be a number after done.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String splitstring[] \u003d command.split(\" \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    int taskdone \u003d Integer.valueOf(splitstring[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    storinglist.get(taskdone - 1).markasdone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" Nice! I\u0027ve marked this tasked as done:\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + storinglist.get(taskdone - 1)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    Duke.WriteObjectToFile(\"/Users/kchensheng/Documents/NUS/Y2\" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            \"/Sem1/CS2103/chen_sheng_duke/data/data.txt\", storinglist);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" Bye. Hope to see you again soon!\\n\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    if (!command.contains(\" \")){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        throw new IllegalCommandException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String[] splitcommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    storinglist.add(new ToDos(splitcommand[1]));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" Got it. I\u0027ve added this task:\\n\" + \"   \" + storinglist.get(storinglist.size()-1)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n Now you have \" + storinglist.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    if (!command.contains(\" \")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        throw new IllegalCommandException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String[] splitcommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String[] splitdeadline \u003d (splitcommand[1].split(\"/\", 2));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    storinglist.add(new Deadline(splitdeadline[0], splitdeadline[1]));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" Got it. I\u0027ve added this task:\\n\" + \"   \" + storinglist.get(storinglist.size()-1)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n Now you have \" + storinglist.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    if (!command.contains(\" \")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        throw new IllegalCommandException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String[] splitcommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String[] splitevent \u003d (splitcommand[1].split(\"/\", 2));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    storinglist.add(new Events(splitevent[0], splitevent[1]));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" Got it. I\u0027ve added this task:\\n\" + \"   \" + storinglist.get(storinglist.size() - 1)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n Now you have \" + storinglist.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    if (!command.contains(\" \")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                        throw new IllegalCommandException(\"Give a task to delete.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    String[] splitcommand \u003d command.split(\" \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    int taskdelete \u003d Integer.valueOf(splitcommand[1]);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"  \" + storinglist.get(taskdelete - 1));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    storinglist.remove(taskdelete - 1);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    System.out.println(\"Now you have \" + storinglist.size()"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \" tasks in the list \""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                            + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    throw new IllegalCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            } catch (IllegalCommandException errormsg) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                System.err.println(errormsg);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 159,
      "-": 8
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String event[];"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String[] datetime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        event \u003d at.split(\" \", 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.datetime \u003d event[1].split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String getdate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String splitdates[] \u003d this.datetime[0].split(\"/\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String day \u003d splitdates[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String month \u003d splitdates[1];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String year \u003d splitdates[2];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String editedday;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String editedmonth;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        if (day.equals(\"1\") || day.equals(\"01\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"1st\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"2\") || day.equals(\"02\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"2nd\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"3\") || day.equals(\"03\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"3rd\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"21\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"21st\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"22\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"22nd\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"23\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"23rd\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (day.equals(\"31\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d \"31st\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            editedday \u003d day + \"th\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"1\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"01\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"January\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"2\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"02\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"Febuary\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"3\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"03\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"March\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"4\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"04\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"April\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"5\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"05\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"May\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"6\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"06\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"June\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"7\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"07\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"July\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"8\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"08\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"August\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"9\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"09\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"September\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"10\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"October\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"11\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"November\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            case \"12\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"December\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                editedmonth \u003d \"Invalid\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return editedday + \" of \" + editedmonth + \" \" + year;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String gettime() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String time \u003d this.datetime[1];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        String timestr;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        int timeint \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        int hours \u003d timeint/100;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        int minutes \u003d timeint % 100;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        if (hours \u003e\u003d 12) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            timestr \u003d Integer.toString(hours - 12) + \".\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    + String.format(\"%02d\", minutes) + \"pm\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else if (hours \u003d\u003d 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            timestr \u003d \"12.\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    + String.format(\"%02d\", minutes) + \"am\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            timestr \u003d Integer.toString(hours) + \".\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                    + String.format(\"%02d\", minutes) + \"am\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return timestr;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c Updated upstream"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"E-\" + super.checkStatus() + \"-\" + super.getDescription().trim() + \"-\" + this.event[1];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"E-\" + super.checkStatus() + \"-\" + super.getDescription().trim() + \"-\" + this.event[1];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e Stashed changes"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-8"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"[E]\" + super.toString() +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                \"(by: \" + this.getdate() + \", \" + this.gettime() + \")\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 148
    }
  },
  {
    "path": "src/main/java/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "public class IllegalCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String errormessage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public IllegalCommandException (String errormessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.errormessage \u003d errormessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + \" OOPS!!! \" + this.errormessage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "                + \"\\n____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    protected Boolean isdone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        this.isdone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return (isdone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String checkStatus() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        if (isdone \u003d\u003d true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public void recoverStatus(String status) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            isdone \u003d true ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "            isdone \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public void markasdone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        isdone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public abstract String formatString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 44
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public ToDos (String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"T-\" + super.checkStatus().trim() + \"-\" + super.getDescription();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 16
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "  ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "   [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": " Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "deadline return book /by Sunday"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "java -classpath ../src/main/java Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrchensheng21"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mrchensheng21": 34
    }
  }
]
