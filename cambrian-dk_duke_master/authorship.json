[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "test {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 17,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents a Duke chatbot."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** The Storage used for access/writing to files */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** The filepath to read from/write to */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** The taskList to store the user\u0027s tasks */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** The User interface */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for Duke which takes in a filepath."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param filepath the path of the file to read from/write to"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.filePath \u003d filepath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Main command to run the logic of the Duke chatbot."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Prints the welcome message first, then loads any existing events from the stored file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Then it begins waiting for input from the user, and will keep processing input until"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * an exit command is issued."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * When an exit command is issued, the existing TaskList is written to the same FilePath."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            this.tasks \u003d this.storage.load();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            this.ui.messageUser(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            this.ui.messageUser(\"The file is missing :(\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            this.ui.messageUser(\"Trouble creating file\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        while(!isExit) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                String userMessage \u003d this.ui.readMessage(scanner);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                Command command \u003d Parser.parseUserMessage(userMessage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                command.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                this.ui.messageUser(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            this.storage.save(this.tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            this.ui.messageUser(\"ERROR WRITING TO FILE :(\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Main method for Duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Calls the run() method which contains most of the logic"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param args any arguments that are called when java duke is run."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 80,
      "-": 4
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "E | ✓ |  project meeting  |  Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 1
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents a command to add a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** Task to be added */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private Task taskToAdd;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for AddCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param taskToAdd the task to be added"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public AddCommand(Task taskToAdd){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.taskToAdd \u003d taskToAdd;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Executes the command to add a task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It adds the task to the TaskList provided by calling addTaskToList from"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * the TaskList class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param tasks The TaskList to be searched"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param ui The ui to send messages to"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param storage Storage if required for the execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        tasks.addTaskToList(this.taskToAdd);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        ui.messageUser(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                taskToAdd.getTaskStatus(),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                \"Now you have \" + tasks.getSize()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                        + ((tasks.getSize() \u003c\u003d 1) ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 42
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * An abstract class that represents a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** To indicate if the command is an exit command */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Abstract method to execute the respective command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param tasks The user\u0027s current TaskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param ui The ui currently being used by the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param storage The storage object being used by the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException An error trying to carry out the command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for command will set isExit to false by default."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Command(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Check if a command is an exit command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return whether the command is an exit command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 41
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents a command to delete a task from a TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** The number of the task to delete (starting from 1). */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private int taskNumToDelete;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for DeleteCommand takes in a one-based index task number to delete."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param taskNumToDelete One-based index task number to delete."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public DeleteCommand(int taskNumToDelete){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.taskNumToDelete \u003d taskNumToDelete;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Execute this deleteCommand."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * If the taskNumber provided is out of bounds of the TaskList, a DukeException is thrown."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param tasks The user\u0027s current TaskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param ui The ui currently being used by the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param storage The storage object being used by the user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException An error trying to delete a task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if (this.taskNumToDelete \u003c\u003d 0 || this.taskNumToDelete \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"Task Number is out of bounds\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            Task removedTask \u003d tasks.deleteTaskFromList(this.taskNumToDelete - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            ui.messageUser(\"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    removedTask.getTaskDescription(),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    \"Now you have \" + tasks.getSize()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                            + ((tasks.getSize() \u003c\u003d 1) ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents a command to mark a Task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** One-based index for the task number to be marked as complete */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private int taskNumToComplete;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for DoneCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param taskNumToComplete One-based index of task number to mark as complete."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public DoneCommand(int taskNumToComplete){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.taskNumToComplete \u003d taskNumToComplete;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Executes the DoneCommand"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * If the task number is outside the bounds of the TaskList, a DukeException is thrown."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param tasks The user\u0027s current TaskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param ui The ui currently being used by the user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param storage The storage object being used by the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException An error when trying to mark a task as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if (this.taskNumToComplete \u003c\u003d 0 || taskNumToComplete \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"Task Number is out of bounds\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        tasks.markTaskAsDone(this.taskNumToComplete - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        Task taskToComplete \u003d tasks.getTaskFromList(this.taskNumToComplete - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        ui.messageUser(\"Nice! I\u0027ve marked this task as done:\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                \"  \" + taskToComplete.getTaskStatus());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 46
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents a command to exit Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for ExitCommand sets isExit to true."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * This is because ExitCommand is an exit command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public ExitCommand(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Executes the ExitCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param tasks The user\u0027s current TaskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param ui The ui currently being used by the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param storage The storage object being used by the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException If there is an error trying to carry out the ExitCommand."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        ui.messageUser(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 33
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents a command to find a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** Term to be searched within the TaskList */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private String searchTerm;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for FindCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param searchTerm The term to be searched."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public FindCommand(String searchTerm){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.searchTerm \u003d searchTerm;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Executes the command to search for a keyword."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It gets the {@literal arrayList\u003cTask\u003e} from within the TaskList to be able to search,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * then it loops through each task and searches if the description contains the keyword to be searched."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It then creates a new TaskList from all the matches, and then creates a new ListCommand to list out"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * all the tasks that contain the keyword."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param tasks The TaskList to be searched"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param ui The ui to message the user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param storage Storage if needed"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException If there is an error while executing the FindCommand"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getToDoList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            for(Task task : taskList){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                if(task.getTaskDescription().contains(this.searchTerm)){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    matches.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        new ListCommand().execute(new TaskList(matches), ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 50
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents a command to list all the tasks in a TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for ListCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public ListCommand(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Execute the ListCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It retrieves the {@literal ArrayList\u003cTask\u003e} from inside the TaskList,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * and then adds the TaskStatus as a string one by one to a new {@literal ArrayList\u003cString\u003e}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param tasks The user\u0027s current TaskList"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param ui The ui currently being used by the user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param storage The storage object being used by the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        int startNumber \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        ArrayList\u003cString\u003e allTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        for (Task t : tasks.getToDoList()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            allTasks.add(\"\" + startNumber + \".\" + t.getTaskStatus());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            startNumber++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if(startNumber \u003d\u003d 1){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            allTasks.add(\"There are no tasks!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            allTasks.add(0, \"Here are the tasks:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        ui.messageUser(allTasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 49
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * An exception for methods performed in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for DukeException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public DukeException(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Overloaded constructor for DukeException takes in a string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param message The message of the DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 22
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents a parser object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Parser for the stored message that takes in a String and returns the parsed task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It parses messages that are stored inside the .txt file by Storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It will throw a DukeException if the given command is in the wrong format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Only todo, deadline and event tasks can be stored in the data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param message The command to be parsed"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return The parsed task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException Error thrown if the command stored is in the wrong format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public static Task parseStoredMessage(String message) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        String[] commands \u003d message.split(\"\\\\s{1}\\\\|\\\\s{1}\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        Task taskToAdd \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        switch (commands[0]) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                taskToAdd \u003d new Todo(commands[2], (commands[1].equals(\"✓\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                taskToAdd \u003d new Deadline(commands[2], (commands[1].equals(\"✓\")), commands[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                taskToAdd \u003d new Event(commands[2], (commands[1].equals(\"✓\")), commands[3]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return taskToAdd;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Parses a command from the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It splits the command into its arguments according to the single whitespace delimiter."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Allows for done, todo, deadline, event, delete, list, bye and find commands."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It will throw a DukeException if the command given is in the wrong format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the parsed command from the user tet"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public static Command parseUserMessage(String message) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        String[] commands \u003d message.split(\" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        switch (commands[0].toLowerCase()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                if (commands.length \u003e 2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Your done command is in the wrong format.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                int completedTaskNum \u003d Integer.parseInt(commands[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                return new DoneCommand(completedTaskNum);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                Todo newTodo \u003d new Todo(message.substring(4));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                return new AddCommand(newTodo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(message.substring(8));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                return new AddCommand(newDeadline);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                Event newEvent \u003d new Event(message.substring(5));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                return new AddCommand(newEvent);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                if (commands.length \u003e 2) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Your delete command is in the wrong format.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                int deleteTaskNum \u003d Integer.parseInt(commands[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                return new DeleteCommand(deleteTaskNum);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                if (commands.length \u003e 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Your list command is in the wrong format.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                if (commands.length \u003e 1){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Your bye command is in the wrong format.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                if (!(commands.length \u003d\u003d 2)){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Your bye command is in the wrong format.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                return new FindCommand(commands[1]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 104
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents a Storage file to access and write to files."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** The filepath to store to/access from */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** The File created from accessing the file */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private File tasksFile;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Throws an IOException if the file cannot be accessed/written to."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It creates the directories provided in the filePath if they don\u0027t already exist."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It also creates a new file if the file doesn\u0027t already exist."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param filePath the file to be accessed/written to"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws IOException if an error occurs during access/writing"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.tasksFile \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if (!this.tasksFile.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            //the file does not exist yet"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            this.tasksFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            this.tasksFile.createNewFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            this.tasksFile \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Loads the file into a taskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It uses static methods from the Parser class to parse the lines of the .txt file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * into commands, and then creates a new TaskList from all the tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Throws a DukeException if there is any error parsing the .txt file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return TaskList of all the tasks contained inside the .txt file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException If there is an error parsing the command"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws IOException If there is an error accessing the file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public TaskList load() throws DukeException, IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(this.tasksFile);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            tasks.addTaskToList(Parser.parseStoredMessage(fileScanner.nextLine()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Saves a TaskList to a file."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It takes in a TaskList and then calls listAllTasksAsString to write to a .txt file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param tasks the TaskList to be saved"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws IOException if there is amn error writing to the file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        fileWriter.write(tasks.listAllTasksAsString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 72
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents a Deadline task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** the Deadline(date) of task stored as a string. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    protected String Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for Deadline which takes in a whole command as a String."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It splits the command by the \"/by\" sequence of characters, then calls the"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * overloaded constructor which takes in a description and a Deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param message the command to create a new Deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException if there is an error trying to create the Deadline task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Deadline(String message) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this(message.split(\"/by\", 2)[0],"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                (message.split(\"/by\", 2).length \u003e 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                        ? message.split(\"/by\", 2)[1]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                        : \"\" ));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for Deadline that takes in a description and a Deadline(as a string)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It parses the Deadline using the parseDate method inherited from the Task parent class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It throws a DukeException when either the description or the date field is empty."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param description The description of the Deadline"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param Deadline The date of the Deadline(as a string)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException When there is an error in the format of the Deadline"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Deadline(String description, String Deadline) throws DukeException{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        System.out.println(\"Deadline is\" + Deadline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.Deadline \u003d parseDate(Deadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if(this.getTaskDescription().equals(\"\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a Deadline cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if(this.getDeadline().equals(\"\")){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date field of a Deadline cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for Deadline which allows the specification of the isDone boolean."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * This is used mainly when we parse the Deadline from storage, as it may be marked as done, but not"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * removed from the TaskList yet. It calls the two-argument constructor, then assigns isDone."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param description The description of the Deadline"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param isDone Whether the Deadline is marked as done"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param Deadline The date of the Deadline stored as a string"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException Error if the format of the Deadline is incorrect"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Deadline(String description, boolean isDone, String Deadline) throws DukeException{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this(description, Deadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Returns the date Deadline of the Deadline task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return Date Deadline of the Deadline (as a string)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String getDeadline(){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return this.Deadline;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Marks a Deadline task as done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Throws a DukeException if the Deadline is already marked as done."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * We return the task so that we can get its updated status more easily."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the Deadline that has been marked as done"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException if there is an error marking the Deadline as done"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Task markAsDone() throws DukeException{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if(this.isDone){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The Deadline is already marked as done.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        Deadline completed \u003d new Deadline(this.description, this.Deadline);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        completed.isDone \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return completed;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Gets the Deadline status as a string."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * The string returned is formatted as specified on the CS2103T website."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the task status as a string."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String getTaskStatus(){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return (\"[\" + this.getTaskType() + \"] \" + \"[\" + this.getStatusIcon() + \"]\" + this.getTaskDescription()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                + \"(by: \" + this.getDeadline() + \")\" );"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Gets the Deadline status a string, formatted for storage in the .txt file."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * The string returned is formatted for storage as specified on the CS2103T website."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the task status as a string for storage."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String getStoredTaskStatus(){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return (this.getTaskType() + \" | \" + this.getStatusIcon() + \" | \" + this.getTaskDescription()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                + \" | \" + this.getDeadline());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 114
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * A representation of an Event task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** The date of the event as a string */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    protected String eventDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for the Event that takes in a message as a String."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It splits the command by the \"/at\" sequence, then calls the overloaded constructor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * that takes in two arguments, the description as well as the eventDate."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param message the message that contains the details of the event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException thrown if there is an error creating the event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Event(String message) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this(message.split(\"/at\", 2)[0],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                (message.split(\"/at\", 2).length \u003e 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                        ? message.split(\"/at\", 2)[1]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                        : \"\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for Event that takes in a description String, and an eventDate String."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * It calls parseDate() from the parent class to parse the eventDate string,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * and throws a DukeException if either the event description or date field is empty."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param description the description of the event"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param eventDate the date of the event stored as a String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException thrown if there is an error creating the Event."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Event(String description, String eventDate) throws DukeException{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.eventDate \u003d parseDate(eventDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if(this.getTaskDescription().equals(\"\")){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if(this.getEventDate().equals(\"\")){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date field of a event cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for Event which allows the specification of the isDone boolean."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * This is used mainly when we parse the Event from storage, as it may be marked as done, but not"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * removed from the TaskList yet. It calls the two-argument constructor, then assigns isDone."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param description The description of the Event"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param isDone Whether the Event is marked as done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param eventDate The date of the Event stored as a string"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException Error if the format of the event is incorrect"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Event(String description, boolean isDone, String eventDate) throws DukeException{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this(description, eventDate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Getter for the eventDate."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the eventDate stored as a string"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String getEventDate(){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return this.eventDate;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Marks an Event task as done."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Throws a DukeException if the Event is already marked as done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * We return the task so that we can get its updated status more easily."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the Event that has been marked as done"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException if there is an error marking the Event as done"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Task markAsDone() throws DukeException{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if(this.isDone){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The event is already marked as done.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        Event completed \u003d new Event(this.description, this.eventDate);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        completed.isDone \u003d true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return completed;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Gets the Event status as a string."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * The string returned is formatted as specified on the CS2103T website."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the task status as a string."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String getTaskStatus(){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return (\"[\" + this.getTaskType() + \"] \" + \"[\" + this.getStatusIcon() + \"]\" + this.getTaskDescription()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                + \"(at: \" + this.getEventDate() + \")\" );"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Gets the Event status a string, formatted for storage in the .txt file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * The string returned is formatted for storage as specified on the CS2103T website."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the task status as a string for storage."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String getStoredTaskStatus(){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return (this.getTaskType() + \" | \" + this.getStatusIcon() + \" | \" + this.getTaskDescription()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                + \" | \" + this.getEventDate());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 113
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Defines an abstract class of a Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public abstract class Task{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** The description of the task */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** Whether the task is done */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /** The type of the task, stored as a letter */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * All tasks are marked as not done by default."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Parses the date if required."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Since the dates can have two forms, as specified in the user input, and the form that is specified"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * in the storage file, the method tries both formats, and if both SimpleDateFormat objects cannot"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * successfully parse the string, then a parseException is thrown, and it outputs \"ERROR PARSING DATE\"."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * When parsing from storage form, we have to remove the ordinal as SimpleDateFormat does not allow for"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * parsing ordinals. The switch case applies the correct ordinal, depending on the day of the month."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param input The date to be parsed as a String."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return A string with the date parsed for display."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String parseDate(String input){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        SimpleDateFormat userInputParser \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        SimpleDateFormat storageInputParser \u003d new SimpleDateFormat(\"d \u0027of\u0027 MMMM yyyy\u0027,\u0027 h\u0027.\u0027mma\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            Date parsedDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                parsedDate \u003d userInputParser.parse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            }catch(ParseException e){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    String inputWithRemovedOrdinal \u003d input.replaceAll(\"(?\u003c\u003d\\\\d)(st|nd|rd|th)\", \"\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    parsedDate \u003d storageInputParser.parse(inputWithRemovedOrdinal);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                }catch(ParseException f){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    throw f;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            cal.setTime(parsedDate);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            int dayOfMonth \u003d cal.get(Calendar.DAY_OF_MONTH);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            if(dayOfMonth \u003c 10 || dayOfMonth \u003e 19){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                switch (dayOfMonth % 10) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    case 1:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                        return new SimpleDateFormat(\"d\u0027st\u0027 \u0027of\u0027 MMMM yyyy\u0027,\u0027 h\u0027.\u0027mma\").format(parsedDate);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    case 2:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                        return new SimpleDateFormat(\"d\u0027nd\u0027 \u0027of\u0027 MMMM yyyy\u0027,\u0027 h\u0027.\u0027mma\").format(parsedDate);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    case 3:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                        return new SimpleDateFormat(\"d\u0027rd\u0027 \u0027of\u0027 MMMM yyyy\u0027,\u0027 h\u0027.\u0027mma\").format(parsedDate);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                        return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\u0027,\u0027 h\u0027.\u0027mma\").format(parsedDate);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "                return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\u0027,\u0027 h\u0027.\u0027mma\").format(parsedDate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        } catch(ParseException e){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            System.out.println(\"ERROR PARSING DATE\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Getter for the status icon."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Represents the boolean either as the tick or cross characters for display."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return A string representation of the isDone boolean"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Getter for the task description."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return A string of the task description"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String getTaskDescription(){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Marks a Task as done."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * We return the task so that we can get its updated status more easily."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the task that has been marked as done"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException if there is an error marking the deadline as done"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public abstract Task markAsDone() throws DukeException;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Getter for the type of the task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return A string containing the type of the task as a string."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Gets the task status as a string."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * The string returned is formatted as specified on the CS2103T website."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the task status as a string."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public abstract String getTaskStatus();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Gets the task status a string, formatted for storage in the .txt file."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * The string returned is formatted for storage as specified on the CS2103T website."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the task status as a string for storage."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public abstract String getStoredTaskStatus();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 133
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private ArrayList\u003cTask\u003e toDoList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e toDoList){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.toDoList \u003d toDoList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.toDoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return this.toDoList.size();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void addTaskToList(Task taskToAdd){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.toDoList.add(taskToAdd);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Task getTaskFromList(int taskNumToGet) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if (taskNumToGet \u003c\u003d 0 || taskNumToGet \u003e this.getSize()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"Task Number is out of bounds\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return this.toDoList.get(taskNumToGet - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Task deleteTaskFromList(int taskNumToDelete) throws DukeException{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if (taskNumToDelete \u003c\u003d 0 || taskNumToDelete \u003e this.getSize()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"Task Number is out of bounds\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return this.toDoList.remove(taskNumToDelete - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void markTaskAsDone(int taskNumToMark) throws DukeException{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if (taskNumToMark \u003c\u003d 0 || taskNumToMark \u003e this.getSize()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"Task Number is out of bounds\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        Task taskToMark \u003d this.getTaskFromList(taskNumToMark);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        taskToMark.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        setIndexToTask(taskNumToMark, taskToMark);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void setIndexToTask(int numberToSet, Task taskToSet) throws DukeException{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if (numberToSet \u003c\u003d 0 || numberToSet \u003e this.getSize()){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"Task Number is out of bounds\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.toDoList.set(numberToSet - 1, taskToSet);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String listAllTasksAsString(){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        StringBuilder allTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        for (Task task : this.toDoList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            allTasks.append(task.getStoredTaskStatus());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            allTasks.append(System.lineSeparator());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return allTasks.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public ArrayList\u003cTask\u003e getToDoList(){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return this.toDoList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents a Todo Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for Todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Throws a DukeException if the description is empty."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if(description.equals(\"\")){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Constructor for Todo that allows setting of the isDone boolean."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * This is mainly used when parsing a String from storage into a Todo Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param description The description of the todo task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param isDone Whether the task is done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException thrown when there is an error creating the todo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Todo(String description, boolean isDone) throws DukeException{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Marks a Todo task as done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Throws a DukeException if the Todo is already marked as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * We return the task so that we can get its updated status more easily."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the Todo that has been marked as done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException if there is an error marking the Todo as done"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public Task markAsDone() throws DukeException{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        if(this.isDone){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The todo is already marked as done.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        Todo completed \u003d new Todo(this.description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        completed.isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return completed;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Gets the Todo status as a string."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * The string returned is formatted as specified on the CS2103T website."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the task status as a string."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String getTaskStatus(){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return (\"[\" + this.getTaskType() + \"] \" + \"[\" + this.getStatusIcon() + \"]\" + this.getTaskDescription());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Gets the Todo status a string, formatted for storage in the .txt file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * The string returned is formatted for storage as specified on the CS2103T website."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the task status as a string for storage."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String getStoredTaskStatus(){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return (this.getTaskType() + \" | \" + this.getStatusIcon() + \" | \" + this.getTaskDescription());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 73
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * Represents the UI that the user will be interacting with."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class Ui{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Prints an indented message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param msg Message to be printed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private void printIndentedMsg(String msg){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        String indent\u003d \"     \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        System.out.println(indent + msg);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Prints a line in the UI."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    private void printLine(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        String line\u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Prints a variable number of messages, using varargs to accept different numbers of messages."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param messages The String[] of messages to be printed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void messageUser(String... messages){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        for(String message : messages) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            printIndentedMsg(message);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Prints messages from a {@literal List\u003cString\u003e} of messages."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param messages The messages to be printed"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void messageUser(List\u003cString\u003e messages){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        for(String message : messages){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            printIndentedMsg(message);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Reads the next message and returns it as a String."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @param scanner the scanner to use"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @return the read line as a String"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public String readMessage(Scanner scanner){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Prints a welcome message as defined in the CS2103T website."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void printWelcomeMessage(){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        printIndentedMsg(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        printIndentedMsg(\"What can I do for you?\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 75
    }
  },
  {
    "path": "src/test/java/duke/test/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * A test class for the Event class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Tests that the event date is formatted correctly."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException if there is an issue during the test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void testGetEventDate() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        Event test \u003d new Event(\"TEST\", \"03/12/1997 0800\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "        assertEquals(\"3rd of December 1997, 8.00AM\",test.getEventDate());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 27
    }
  },
  {
    "path": "src/test/java/duke/test/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "package duke.test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " * A test class for the Todo class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "public class TodoTest{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * Tests that getTaskStatus() returns the correct format after the constructor is called."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     * @throws DukeException when there is an error during the test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    public void testGetTaskStatus() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            Todo test \u003d new Todo(\" TEST\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "            assertEquals(\"[T] [✗] TEST\", test.getTaskStatus());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 26
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     [T] [✗] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     [D] [✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     [E] [✗] book club meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     1.[T] [✗] borrow book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     2.[D] [✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     3.[E] [✗] book club meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "      borrow book"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     1.[D] [✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     2.[E] [✗] book club meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 38
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "event book club meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cambrian-dk"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "cambrian-dk": 34
    }
  }
]
