[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy kkmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            this.by \u003d format.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return format.format(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void mark() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super.mark();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), format.format(by));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 33
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            ui.showError(\"filepath\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            ui.showError(\"load\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            ui.execute(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            isExit \u003d ui.isExit();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            storage.store();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            ui.showError(\"store\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            new Duke(\"/Users/jingrong/duke/duke.txt\").run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 43,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy kkmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            this.at \u003d format.parse(at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return format.format(at);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void mark() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super.mark();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), format.format(at));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 33
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String[] commands;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String[] parse(String command) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        commands \u003d command.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return commands;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 12
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private FileReader reader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private BufferedReader bufferedReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Storage(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.reader \u003d new FileReader(this.filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        String line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        while (! (line \u003d\u003d null)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            String[] words \u003d line.split(\" , \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            if (words[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                task \u003d new Todo(words[2]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else if (words[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                task \u003d new Deadline(words[2], words[3]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                task \u003d new Event(words[2], words[3]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            if (words[1].equals(\"y\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                task.mark();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void store() throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        FileWriter writer \u003d new FileWriter(this.filePath, false);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        for (Task item : tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            if (item instanceof Todo) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                bufferedWriter.write(String.format(\"T , %s , %s\", item.getMark(), item.getName()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else if (item instanceof Deadline) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                bufferedWriter.write(String.format(\"D , %s , %s , %s\", item.getMark(), item.getName(), ((Deadline) item).getBy()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                bufferedWriter.write(String.format(\"D , %s , %s , %s\", item.getMark(), item.getName(), ((Event) item).getAt()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        bufferedWriter.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 61
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String getMark() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            return \"y\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            return \"n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void mark() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        String mark;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            mark \u003d \"y\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            mark \u003d \"n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return String.format(\"[%s] %s\", mark, name);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 37
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void done(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        tasks.get(index).mark();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void mark() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super.mark();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 17
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\\n     What can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            isExit \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                System.out.println(String.format(\"     %d.%s\", i + 1, tasks.getTasks().get(i).toString()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            String[] commands \u003d parser.parse(command);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            if (commands[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                int index \u003d Integer.valueOf(commands[1]) - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                System.out.println(\"       \" + tasks.getTasks().get(index).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                tasks.delete(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                System.out.println(String.format(\"     Now you have %d tasks in the list.\", tasks.getTasks().size()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else if (commands[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                int index \u003d Integer.valueOf(commands[1]) - 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                Task t \u003d tasks.getTasks().get(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                tasks.done(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                System.out.println(\"       \" + t.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                showLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                String taskName \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                for (int j \u003d 1; j \u003c commands.length; j++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    if (j !\u003d commands.length - 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        taskName +\u003d commands[j] + \" \";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        taskName +\u003d commands[j];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                if (commands[0].equals(\"todo\") || commands[0].equals(\"deadline\") || commands[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        if (commands[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            System.out.println(\"     OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            System.out.println(String.format(\"     OOPS!!! The description of a %s cannot be empty.\", commands[0]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        showLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        if (commands[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            task \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        } else if (commands[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            String[] details \u003d taskName.split(\" /by \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            task \u003d new Deadline(details[0], details[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            String[] details \u003d taskName.split(\" /at \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            task \u003d new Event(details[0], details[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        System.out.println(\"       \" + task.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        if (tasks.getTasks().size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            System.out.println(\"     Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            System.out.println(String.format(\"     Now you have %d tasks in the list.\", tasks.getTasks().size()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        showLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    System.out.println(\"     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    showLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        if (error.equals(\"load\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            System.out.println(\"     OOPS!!! The list of tasks cannot be loaded.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } else if (error.equals(\"filepath\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            System.out.println(\"     OOPS!!! There is something wrong with the filepath.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } else if (error.equals(\"store\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            System.out.println(\"     OOPS!!! There is something wrong with the file.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 130
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        assertEquals(\"[D][n] return book (by: 01/01/2019 1500)\", new Deadline(\"return book\",\"01/01/2019 1500\").toString());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 9
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void stringSplit_string_stringArray() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        assertEquals(\"[todo, return, book]\", Arrays.toString(new Parser().parse(\"todo return book\")));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 12
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        assertEquals(\"[T][n] return book\", new Todo(\"return book\").toString());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 9
    }
  }
]
