[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 5,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String[] splitString \u003d input.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                String taskType \u003d splitString[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        System.out.println(i + 1 + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (splitString[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    int taskNum \u003d Integer.valueOf(splitString[1]) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    tasks.get(taskNum).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    System.out.println(\"    [\" + tasks.get(taskNum).getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            tasks.get(taskNum).getDescription());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    System.out.println(\"Bye! Hope to see you again!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (taskType.equals(\"todo\") || taskType.equals(\"deadline\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        || taskType.equals(\"event\")){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            String[] todoSplit \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            if (todoSplit.length \u003d\u003d 1 || todoSplit[1].isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                                throw new InvalidDescriptionException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            Todo todo \u003d new Todo(todoSplit[1].trim());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            tasks.add(todo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + todo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        case \"deadline\": {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            String[] deadlineSplit \u003d input.split(\"/by \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            String[] temp \u003d deadlineSplit[0].split(\"deadline \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            if (temp.length \u003d\u003d 1 || temp[1].isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                                throw new InvalidDescriptionException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            Deadline deadline \u003d new Deadline(temp[1].trim(), deadlineSplit[1].trim());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            tasks.add(deadline);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\\n \" + deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        case \"event\": {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            String[] deadlineSplit \u003d input.split(\"/at \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            String[] temp \u003d deadlineSplit[0].split(\"event \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            if (temp.length \u003d\u003d 1 || temp[1].isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                                throw new InvalidDescriptionException(\"\\u2639 OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            Event event \u003d new Event(temp[1].trim(), deadlineSplit[1].trim());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            tasks.add(event);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\\n \" + event);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        default: {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                            System.out.println(\"If you see this something is wrong \u003e:D\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else if (taskType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    int deleteIndex \u003d Integer.valueOf(splitString[1]) - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    Task removed \u003d tasks.remove(deleteIndex);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + removed);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                    throw new InvalidCommandException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 84,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    protected String timeFrame;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public Event(String description, String timeFrame) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        this.timeFrame \u003d timeFrame;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timeFrame + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 13
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 5
    }
  },
  {
    "path": "src/main/java/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class InvalidDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public InvalidDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 28
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanjunren"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanjunren"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanjunren": 10
    }
  }
]
