[
  {
    "path": "src/main/java/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public AddCommand(String inputCommand){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        super(inputCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    //note private can\u0027t be accessed by child"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String[] inputsplit \u003d this.inputCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String typeTask \u003d inputsplit[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        if(inputsplit.length \u003c\u003d 1 ){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a \" + typeTask + \" cannot be empty.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        Task taskToAdd;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        if (typeTask.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            taskToAdd \u003d new ToDo(inputsplit[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else if (typeTask.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            String[] descripSplit \u003d inputsplit[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            LocalDateTime ldt \u003d DateTimeHelper.formatInput(descripSplit[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            taskToAdd \u003d new Deadline(descripSplit[0],ldt);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            String[] descripSplit \u003d inputsplit[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            LocalDateTime ldt \u003d DateTimeHelper.formatInput(descripSplit[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            taskToAdd \u003d new Event(descripSplit[0], ldt);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        tasks.addToRecord(taskToAdd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        ui.printAdd(taskToAdd, tasks.getSize());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        storage.writeToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 46
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    protected String inputCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    protected boolean shouldExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Command(String inputCommand){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.inputCommand \u003d inputCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.shouldExit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public boolean shouldExit(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.shouldExit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 23
    }
  },
  {
    "path": "src/main/java/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public DeleteCommand(String inputCommand){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        super(inputCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    //note private can\u0027t be accessed by child"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String[] inputsplit \u003d inputCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        if(inputsplit.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of delete must have a value.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else if (Integer.parseInt(inputsplit[1]) \u003e tasks.getSize() || Integer.parseInt(inputsplit[1]) \u003c\u003d 0 ){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! Invalid value for task delete!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            int num \u003d Integer.parseInt(inputsplit[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            Task t \u003d tasks.removeTask(num);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            ui.printDelete(t, tasks.getSize());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            storage.writeToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 29
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public DoneCommand(String inputCommand){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        super(inputCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String[] inputsplit \u003d this.inputCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        if(inputsplit.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of done must have a value.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else if (Integer.parseInt(inputsplit[1]) \u003e tasks.getSize() || Integer.parseInt(inputsplit[1]) \u003c\u003d 0 ){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! Invalid value for task done!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else if (tasks.getTask(Integer.parseInt(inputsplit[1])).getIsDone() \u003d\u003d true) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! Task is already done!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                int num \u003d Integer.parseInt(inputsplit[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                Task t \u003d  tasks.getTask(num);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                t.markIsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                ui.printDone(t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                storage.writeToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 33
    }
  },
  {
    "path": "src/main/java/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public ExitCommand(String inputCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        super(inputCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.shouldExit \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 18
    }
  },
  {
    "path": "src/main/java/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public ListCommand(String inputCommand){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        super(inputCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        ui.printRecord(tasks.getTaskList());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 17
    }
  },
  {
    "path": "src/main/java/Core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public static Command parse(String inputCommand) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String[] inputsplit \u003d inputCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        if (inputsplit[0].equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            return new ListCommand(inputCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else if (inputsplit[0].equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            return new DoneCommand(inputCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else if (inputsplit[0].equalsIgnoreCase(\"todo\") || inputsplit[0].equalsIgnoreCase(\"deadline\") ||"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                inputsplit[0].equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            return new AddCommand(inputCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else if (inputsplit[0].equalsIgnoreCase(\"delete\")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            return new DeleteCommand(inputCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else if (inputsplit[0].equalsIgnoreCase(\"bye\")){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            return new ExitCommand(inputCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 30
    }
  },
  {
    "path": "src/main/java/Core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    final String FILE_NAME \u003d \"C:\\\\Users\\\\dandf\\\\Pictures\\\\CS2103-Duke\\\\duke/data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    final String DIRECTORY_NAME \u003d \"C:\\\\Users\\\\dandf\\\\Pictures\\\\CS2103-Duke\\\\duke/data\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    //first checks if data]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e taskEntered) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            File taskStorage \u003d new File(FILE_NAME);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            File directoryStorage \u003d new File(DIRECTORY_NAME);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            if (!taskStorage.getAbsoluteFile().exists()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                directoryStorage.mkdir();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                taskStorage.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            FileWriter taskWrite \u003d new FileWriter(FILE_NAME);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            String s \u003d writeFromArray(taskEntered);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            taskWrite.write(s);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            taskWrite.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String writeFromArray(ArrayList\u003cTask\u003e taskEntered){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        StringBuffer toWrite \u003d new StringBuffer(\"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        for(int i \u003d 0; i \u003c taskEntered.size() ; i++){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            Task t \u003d taskEntered.get(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            String s;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            if (t.getType().equalsIgnoreCase(\"[T]\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                s \u003d t.getType() + \"|\" + t.getIsDone() + \"|\" + t.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                s \u003d t.getType() + \"|\" + t.getIsDone() + \"|\" + t.getDescription()  + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            toWrite.append(s);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return toWrite.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public ArrayList\u003cTask\u003e outputFileContents() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            File taskStorage \u003d new File(FILE_NAME);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            File directoryStorage \u003d new File(DIRECTORY_NAME);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            if (!taskStorage.getAbsoluteFile().exists()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                directoryStorage.mkdir();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                taskStorage.createNewFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            Scanner s \u003d new Scanner(taskStorage); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            ArrayList\u003cTask\u003e retrievedTask \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                //note that | is known as || in java"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                String[] inputsplit \u003d s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                if (inputsplit[0].equalsIgnoreCase(\"[T]\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    ToDo t \u003d new ToDo(inputsplit[2]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    this.checkIfDone(t,inputsplit[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    retrievedTask.add(t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                } else if (inputsplit[0].equalsIgnoreCase(\"[D]\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    LocalDateTime ldt \u003d DateTimeHelper.formatInput(inputsplit[3]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    Deadline d \u003d new Deadline(inputsplit[2], ldt);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    this.checkIfDone(d,inputsplit[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    retrievedTask.add(d);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    LocalDateTime ldt \u003d DateTimeHelper.formatInput(inputsplit[3]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    Event e \u003d new Event(inputsplit[2], ldt);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    this.checkIfDone(e,inputsplit[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    retrievedTask.add(e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            return retrievedTask;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but file not found :-(\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void checkIfDone(Task t, String booleanValue){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        if(booleanValue.equalsIgnoreCase(\"True\") ){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            t.markIsDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 93
    }
  },
  {
    "path": "src/main/java/Core/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        Scanner scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.scanner \u003d scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void printHello(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void printRecord(ArrayList\u003cTask\u003e textEntered){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        for(int i \u003d 0; i \u003c textEntered.size(); i++){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            System.out.print((i + 1) + \".\" + textEntered.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void printBye(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void printError(String excepMsg){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println(excepMsg + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void printAdd(Task t , int sizeOfTask){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.printf(\"Got it. I\u0027ve added this task: \\n  %s\\nNow you have %d tasks in the list.%n\", t.toString(), sizeOfTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void printDone(Task t){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println(\"  \" + t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void printDelete(Task t , int sizeOfTask){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + \"  \" + t.toString() + \"\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                + \"Now you have \" + sizeOfTask + \" tasks in the list.\" + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 55
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private ArrayList\u003cTask\u003e textEntered;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private Ui userIF;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Duke()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.userIF \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            tasks \u003d new TaskList(storage.outputFileContents());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            e.getMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        userIF.printHello();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                String fullCommand \u003d userIF.readCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                c.execute(tasks, userIF, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                isExit \u003d c.shouldExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                userIF.printError(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 42,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Helper/DateTimeHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class DateTimeHelper {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    static DateTimeFormatter INPUTFORMATTER \u003d new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"))"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy/MM/d HHmm\"))"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-d HHmm\"))"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy.MM.dd HHmm\"))"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy.MM.d HHmm\"))"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\"))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"d-MM-yyyy HHmm\"))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"dd.MM.yyyy HHmm\"))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .appendOptional(DateTimeFormatter.ofPattern(\"d.MM.yyyy HHmm\"))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            .toFormatter();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    static DateTimeFormatter OUTPUTFORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public static LocalDateTime formatInput(String inputDateTime) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            LocalDateTime ldt \u003d LocalDateTime.parse(inputDateTime, INPUTFORMATTER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            return ldt;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS! Please make sure that date \" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    \"keyed in is of format Year(yyyy)/Month(mm)/Date(dd) Hour(hh)Minute(mm), eg 2019-09-14 1800\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public static String formatOutput(LocalDateTime outputDateTime) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return outputDateTime.format(OUTPUTFORMATTER);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 40
    }
  },
  {
    "path": "src/main/java/Helper/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public DukeException(String errormsg){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String modifiedMsg \u003d \"\\u2639 \" + errormsg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.message \u003d modifiedMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 14
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    final String TASK_TYPE \u003d \"[D]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    protected LocalDateTime deadlineTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.deadlineTime \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.description + \"|\" + DateTimeHelper.formatOutput(this.deadlineTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return TASK_TYPE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return TASK_TYPE + super.getStatusIcon() + \" \" + super.toString() + \" (by: \" + DateTimeHelper.formatOutput(deadlineTime)  + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 29
    }
  },
  {
    "path": "src/main/java/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import duke.helper.DateTimeHelper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    final String TASK_TYPE \u003d \"[E]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    protected LocalDateTime eventTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Event(String description, LocalDateTime eventTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return TASK_TYPE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.description + \"|\" + DateTimeHelper.formatOutput(this.eventTime);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return TASK_TYPE + super.getStatusIcon() + \" \" + super.toString() + \" (at: \" + DateTimeHelper.formatOutput(eventTime) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 29
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void markIsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return (isDone ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public abstract String getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 32
    }
  },
  {
    "path": "src/main/java/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArray;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskArray) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.taskArray \u003d taskArray;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.taskArray \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return taskArray.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.taskArray;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Task getTask(int num){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return taskArray.get(num - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void addToRecord(Task t) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.taskArray.add(t);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Task removeTask(int num){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.taskArray.remove(num - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 37
    }
  },
  {
    "path": "src/main/java/Task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    final String TASK_TYPE \u003d \"[T]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return TASK_TYPE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return TASK_TYPE + super.getStatusIcon() + \" \" +  super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 24
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "Dandford": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Dandford": 21
    }
  }
]
