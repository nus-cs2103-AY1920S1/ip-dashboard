[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "run {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "lumos309": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Represents a Deadline kind of task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * In addition to the information in the base Task object, also contains a Date object representing the task deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for Deadline. Assumes it is undone."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of the Deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param by Date of the task deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        assert by !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for Deadline. Allows user to indicate whether it is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of Deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param isDone Boolean representing whether the Deadline is done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param by Date of the task deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Deadline(String description, boolean isDone, Date by) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Date getByDate() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the done status, description, and deadline of the task as a string,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * with a flag indicating it is a Deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String representation of the Deadline."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.toString() + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the Deadline as a string in a format suitable for data storage."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return Data storage-friendly string representation of the Deadline."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"D`\" + super.toStorageString() + \u0027`\u0027 + by.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 58
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 54
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Models a personal assistant chatbot for tracking tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Allows the user to add, remove, and mark as done different kinds of tasks,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * and stores them in a local text file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/TestSubject.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/GLaDOS.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        // Retrieve existing tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            Storage storage \u003d new Storage(\"tasks.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            taskList \u003d new TaskList(storage.loadTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            // No existing data file found- create from empty list of tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            Ui.showLoadingError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String nextAction \u003d Parser.parseInput(Ui.getNextLine(), taskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        while (!nextAction.equals(\"exit\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            nextAction \u003d Parser.parseInput(Ui.getNextLine(), taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        });"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                DialogBox.getUserDialog(userText.getText(), user),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                DialogBox.getDukeDialog(dukeText.getText(), duke)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        );"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return Parser.parseInput(input, taskList);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 140,
      "-": 4
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public EmptyDescriptionException(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Represents an Event kind of task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * In addition to the information in the base Task object,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * also contains a Date object representing when the event occurs."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for Event. Assumes it is undone."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of the Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param at Date and time when the Event occurs."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for Event. Allows user to indicate whether it is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of Event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param isDone Boolean representing whether the Event is done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param at Date and time when the Event occurs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Event(String description, boolean isDone, Date at) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        assert at !\u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Date getAtDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the done status, description, and datetime of the task as a string,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * with a flag indicating it is an Event."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String representation of the Event."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.toString() + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the Event as a string in a format suitable for data storage."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return Data storage-friendly string representation of the Event."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"E`\" + super.toStorageString() + \u0027`\u0027 + at.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 59
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public InvalidCommandException(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 13
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/views/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 28
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/TestSubject.jpg\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/GLaDOS.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Parses user input and carries out corresponding actions."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Creates, deletes, marks as done, or lists all tasks as per user input,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private static Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor method for parser."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Parses user input and carries out appropriate actions."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param inputString Line of input from user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param taskList Existing list of tasks to be modified."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return \"continue\" or \"exit\", depending on whether the user quit the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static String parseInput(String inputString, TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        sc \u003d new Scanner(inputString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String command \u003d sc.next();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"bye\"):"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                response \u003d \"exit\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"list\"):"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                response \u003d taskList.displayAllTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"done\"):"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                int taskNo \u003d Integer.parseInt(sc.next());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                response \u003d taskList.markTaskAsDone(taskNo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"todo\"):"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                String description \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    response \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    ToDo newToDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    response \u003d taskList.addTask(newToDo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"deadline\"):"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                String deadlineDesc \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(deadlineDesc.split(\" /by \")[0],"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                        dateFormatter.parse(deadlineDesc.split(\" /by \")[1]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                response \u003d taskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"event\"):"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                String eventDesc \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                Event newEvent \u003d new Event(eventDesc.split(\" /at \")[0],"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                        dateFormatter.parse(eventDesc.split(\" /by \")[1]));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                response \u003d taskList.addTask(newEvent);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"delete\"):"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                int index \u003d Integer.parseInt(sc.nextLine().trim());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                response \u003d taskList.deleteTask(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"find\"):"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                String keyword \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                response \u003d taskList.findTasks(keyword);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                response \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            // write all tasks to file"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            FileWriter fw;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                fw \u003d new FileWriter(\"tasks.txt\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                String dataStr \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    dataStr +\u003d task.toStorageString() + System.lineSeparator();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                fw.write(dataStr);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                System.out.println(e.toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            return \"Error!\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 98
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Models the storage system that retrieves and store task data."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"EEE MMM dd hh:mm:ss zzz yyyy\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Scanner fileSc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        if (!file.canRead()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        fileSc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        while (fileSc.hasNextLine()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                String[] nextLine \u003d fileSc.nextLine().strip().split(\"`\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                boolean isDone \u003d nextLine[1].equals(\"1\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                switch (nextLine[0]) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                case (\"T\"):"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    newTask \u003d new ToDo(nextLine[2], isDone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                case (\"D\"):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    newTask \u003d new Deadline(nextLine[2], isDone, dateFormatter.parse(nextLine[3]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                case (\"E\"):"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    newTask \u003d new Event(nextLine[2], isDone, dateFormatter.parse(nextLine[3]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    newTask \u003d new ToDo(\"Unknown task\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                tasks.add(newTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                System.out.println(e.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        fileSc.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 54
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Represents a task that can be done or not done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Provides methods for the user to mark the task as done, and to represent the task as a string suitable for"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * data storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor method for task. Assumes the task is not done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor method for task. Allows the user to indicate whether the task is done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param isDone Boolean for whether the task is done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        assert !description.equals(\"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Returns a tick icon if the task is done, and a cross if it is not."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return A tick or cross icon."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Changes the status of the task to \"done\"."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the done status and description of the task as a string."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the task as a string in a format suitable for data storage."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return Data storage-friendly string representation of the task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String isDoneString \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return isDoneString + \"`\" + description;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 75
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Represents a list of the user\u0027s tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Provides methods for adding, deleting, and marking as done each task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for task list. Initialises with an existing list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param tasks List of existing tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for empty task list. Assumes no existing tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Returns size of task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return Number of tasks in list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays all the tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String of all the tasks in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String displayAllTasks() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Iterator\u003cTask\u003e iter \u003d tasks.iterator();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            Task task \u003d iter.next();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            response +\u003d i + \". \" + task.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String of added task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return Ui.outputTaskAdded(task, this);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param index Index position of task to be deleted."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String of removed task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String deleteTask(int index) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Task removedTask \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return Ui.outputTaskRemoved(removedTask, this);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Marks a task in the list as done."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param index Index position of task to be marked as done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String of task marked as done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return Ui.outputTaskDone(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Finds existing tasks that contain a provided keyword."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param keyword The keyword to search for."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String of tasks that match keyword."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String findTasks(String keyword) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                response +\u003d task.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        if (response.equals(\"\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            return \"No matching tasks found.\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 110
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Represents a ToDo kind of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Contains no additional task information on top of the base Task object."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for ToDo. Assumes it is undone."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of ToDo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for Todo. Allows user to indicate whether it is done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of ToDo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param isDone Boolean representing whether the ToDo is done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the done status and description of the task as a string, with a flag indicating it is a ToDo."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String representation of the ToDo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the ToDo as a string in a format suitable for data storage."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return Data storage-friendly string representation of the ToDo."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"T`\" + super.toStorageString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 45
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Reads user input and prints response as output."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor method for UI."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays an initial welcome message to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static void showWelcomeMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays a goodbye message to the user when they exit the program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays an error message upon failure to open data file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static void showLoadingError() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Unable to open file. Initialising empty file list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Reads the next line of input from the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return A single line of user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static String getNextLine() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return nextLine;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays a message informing the user that a new task has been added to the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param task Task that was added."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param taskList List of existing tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String of task added."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static String outputTaskAdded(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                +(\"Now you have \" + taskList.getSize() + \" task in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays a message informing the user that a task has been deleted."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param task Task that was deleted."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param taskList List of existing tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String of task removed."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static String outputTaskRemoved(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"Got it. I\u0027ve removed added this task:\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                +(\"Now you have \" + taskList.getSize() + \" task in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays a message informing the user that a task has been marked as done."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param task Task that was marked as done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String of task marked as done."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static String outputTaskDone(Task task) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 90
    }
  },
  {
    "path": "src/main/resources/views/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "lumos309": 16
    }
  },
  {
    "path": "src/main/resources/views/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "lumos309": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Test class for Deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Creates a new Deadline task, and checks whether its toString() method gives the correct output."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void createTaskTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(\"Sample Deadline\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    true,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    dateFormatter.parse(\"2/12/2019 1800\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            assertEquals(\"[D][\\u2713] Sample Deadline (by: Mon Dec 02 18:00:00 SGT 2019)\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    newDeadline.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 27
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Test class for Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Creates a new task, and checks whether its toString() method gives the correct output."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void createTaskTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Task newTask \u003d new Task(\"Sample Task\", true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        assertEquals(\"[\\u2713] Sample Task\", newTask.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 17
    }
  }
]
