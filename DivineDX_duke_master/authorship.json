[
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "public class Deadlines extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    public Deadlines(String description, String deadline) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"[D]\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            sb.append(\"[✓] \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            sb.append(\"[✗] \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(\" (by: \" + deadline + \")\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DivineDX": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    String lineWrap(String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(input + \"\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    private String greet() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(\"Hello! I\u0027m Duke\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(\"What can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    private String bye() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        return lineWrap(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    private String getList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            sb.append((i + 1) + \". \" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            if (i !\u003d taskList.size() - 1) { //last item"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    private Task createTask(String str, String command) { //command is either todo, deadline or event"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        String[] splitStr;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            return new ToDo(str);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            splitStr \u003d str.split(\"by\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            return new Deadlines(splitStr[0].trim(), splitStr[1].trim());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            splitStr \u003d str.split(\"at\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            return new Events(splitStr[0].trim(), splitStr[1].trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    private String addTask(Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(\"  \" + task + \"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    private String markTask(int taskNum) { //mark as done"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        Task task \u003d taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(\"  \" + task.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    void executeCommand(String command, String[] inputSplit){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            System.out.println(lineWrap(getList()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            System.out.println(lineWrap(markTask(taskNumber)));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        } else if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            Task task \u003d createTask(inputSplit[1], command);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            System.out.println(lineWrap(addTask(task)));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    void start() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        System.out.println(greet());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            String[] inputSplit \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            String command \u003d inputSplit[0];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "                System.out.println(bye());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "                executeCommand(command, inputSplit);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DivineDX": 97,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DivineDX": 5
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "public class Events extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"[E]\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            sb.append(\"[✓] \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            sb.append(\"[✗] \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(\" (at: \" + at + \")\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DivineDX": 21
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        duke.start();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DivineDX": 6
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DivineDX": 15
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DivineDX"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"[T]\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            sb.append(\"[✓] \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "            sb.append(\"[✗] \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        sb.append(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DivineDX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DivineDX": 17
    }
  }
]
