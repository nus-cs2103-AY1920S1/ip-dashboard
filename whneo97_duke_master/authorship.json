[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "seedu.duke.model.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for seedu.duke.model.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "whneo97": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "javadoc {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    source +\u003d sourceSets.main.allJava"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    classpath +\u003d configurations.compile"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "run{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "// Change this to your main class."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Launcher\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "whneo97": 37
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 0 | buy cake | 14/12/2019"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 0 | hello world"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 1 | hello"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 0 | buy bread"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 0 | return book | 15/12/2019 0000"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 1 | buy cake | 14/12/2019"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "E | 0 | attend lecture | 22/12/2019 1400-1500"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "E | 0 | attend lecture | 22/12/2019 1400-1500"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "E | 1 | event1 | 15/12/2019 2200-2300"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 1 | hello"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 1 | newdeadline | 15/12/2019"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 1 | homework | 12/12/2918"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 1 | myTodo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 1 | hello"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "E | 0 | thisEvent | 23/12/2019 1400-1500"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 0 | thisDeadline | 14/12/2019"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 0 | thisDeadline | 29/02/2400"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 0 | thisDeadline | 29/02/2020"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 0 | thisDeadline | 29/02/2020"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 0 | thisDeadline | 29/02/2400"
      }
    ],
    "authorContributionMap": {
      "whneo97": 20
    }
  },
  {
    "path": "duke-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "todo buy bread"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "todo buy milk"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "event hello"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /at 12/12/2912 0000"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/20/2019"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019 2345"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019 2359"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019 0000"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019 2360"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019 2459"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 00/12/2019 2359"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 00/12/000 2359"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 00/12/-10 2/359"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline buy cake /by 14/12/2019"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "event project meeting /at 31/12/2019 2015-2359"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline project meeting /by 12/08/2019 1400"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline /by 1400"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "event /at 14/14/2918"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "list 2"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "done -19"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "done a"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "done 20"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "delete 109"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "delete -0as1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "todo hello"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "whneo97": 38
    }
  },
  {
    "path": "duke-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/seedu/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "java -classpath ../bin seedu.duke.model.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "whneo97": 34
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":init"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":end"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":omega"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":init"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":end"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "whneo97"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":omega"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e 6e6ace130121eba10a3559454d8092300c7518d0"
      }
    ],
    "authorContributionMap": {
      "whneo97": 171
    }
  },
  {
    "path": "javafx-sdk-11.0.2/legal/javafx.graphics/jpeg_fx.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "## Independent JPEG Group (IJG) JPEG v9c"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### IJG License"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * jcapimin.c"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Copyright (C) 1994-1998, Thomas G. Lane."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Modified 2003-2010 by Guido Vollbeding."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * This file is part of the Independent JPEG Group\u0027s software."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * For conditions of distribution and use, see the accompanying README file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "[From the README file]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "The authors make NO WARRANTY or representation, either express or implied,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "with respect to this software, its quality, accuracy, merchantability, or"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fitness for a particular purpose.  This software is provided \"AS IS\", and you,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "its user, assume the entire risk as to its quality and accuracy."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "This software is copyright (C) 1991-2018, Thomas G. Lane, Guido Vollbeding."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "All Rights Reserved except as specified below."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Permission is hereby granted to use, copy, modify, and distribute this"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "software (or portions thereof) for any purpose, without fee, subject to these"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "conditions:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "(1) If any part of the source code for this software is distributed, then this"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "README file must be included, with this copyright and no-warranty notice"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "unaltered; and any additions, deletions, or changes to the original files"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "must be clearly indicated in accompanying documentation."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "(2) If only executable code is distributed, then the accompanying"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "documentation must state that \"this software is based in part on the work of"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Independent JPEG Group\"."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "(3) Permission for use of this software is granted only if the user accepts"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "full responsibility for any undesirable consequences; the authors accept"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "NO LIABILITY for damages of any kind."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "These conditions apply to any software derived from or based on the IJG code,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "not just to the unmodified library.  If you use our work, you ought to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "acknowledge us."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Permission is NOT granted for the use of any IJG author\u0027s name or company name"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "in advertising or publicity relating to this software or products derived from"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it.  This software may be referred to only as \"the Independent JPEG Group\u0027s"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "software\"."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "We specifically permit and encourage the use of this software as the basis of"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "commercial products, provided that all warranty or liability claims are"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "assumed by the product vendor."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      }
    ],
    "authorContributionMap": {
      "whneo97": 49
    }
  },
  {
    "path": "javafx-sdk-11.0.2/legal/javafx.media/applecoreaudio.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "## Apple Computer: CoreAudio Utility Classes v2.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### Apple Computer CoreAudio Notice"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "This software is present only on Mac OS X systems."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### Apple Computer CoreAudio License"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "File:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Abstract: Part of CoreAudio Utility Classes"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Version: 1.1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Disclaimer: IMPORTANT: This Apple software is supplied to you by Apple"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Inc. (\"Apple\") in consideration of your agreement to the following"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "terms, and your use, installation, modification or redistribution of"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this Apple software constitutes acceptance of these terms. If you do"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "not agree with these terms, please do not use, install, modify or"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "redistribute this Apple software."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "In consideration of your agreement to abide by the following terms, and"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "subject to these terms, Apple grants you a personal, non-exclusive"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "license, under Apple\u0027s copyrights in this original Apple software (the"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"Apple Software\"), to use, reproduce, modify and redistribute the Apple"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Software, with or without modifications, in source and/or binary forms;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "provided that if you redistribute the Apple Software in its entirety and"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "without modifications, you must retain this notice and the following"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "text and disclaimers in all such redistributions of the Apple Software."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Neither the name, trademarks, service marks or logos of Apple Inc. may"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "be used to endorse or promote products derived from the Apple Software"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "without specific prior written permission from Apple. Except as"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "expressly stated in this notice, no other rights or licenses, express or"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "implied, are granted by Apple herein, including but not limited to any"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "patent rights that may be infringed by your derivative works or by other"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "works in which the Apple Software may be incorporated."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "The Apple Software is provided by Apple on an \"AS IS\" basis. APPLE"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "THE IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "FOR A PARTICULAR PURPOSE, REGARDING THE APPLE SOFTWARE OR ITS USE AND"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "OPERATION ALONE OR IN COMBINATION WITH YOUR PRODUCTS."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "IN NO EVENT SHALL APPLE BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "INTERRUPTION) ARISING IN ANY WAY OUT OF THE USE, REPRODUCTION,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "MODIFICATION AND/OR DISTRIBUTION OF THE APPLE SOFTWARE, HOWEVER CAUSED"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "AND WHETHER UNDER THEORY OF CONTRACT, TORT (INCLUDING NEGLIGENCE),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "STRICT LIABILITY OR OTHERWISE, EVEN IF APPLE HAS BEEN ADVISED OF THE"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "POSSIBILITY OF SUCH DAMAGE."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Copyright (C) 2014 Apple Inc. All Rights Reserved."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      }
    ],
    "authorContributionMap": {
      "whneo97": 53
    }
  },
  {
    "path": "javafx-sdk-11.0.2/legal/javafx.media/glib.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "## GNU Glib v2.56.1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### Glib Notice"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You are receiving a copy of GNU Glib, Version: 2.56.1 in either source or"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "object code in the JavaFX runtime or JavaFX SDK. The terms of the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Oracle license do NOT apply to the GNU Glib, Version: 2.56.1; it is"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "licensed under the following license, separately from the Oracle programs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you receive. If you do not wish to install this library, you may delete"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this library:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   - On Linux systems: N/A (library is not present)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   - On Mac OS X systems: delete $(JAVA_HOME)/lib/libglib-lite.dylib"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   - On Windows systems: delete $(JAVA_HOME)\\bin\\glib-lite.dll"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "A copy of the Oracle modified GNU Glib library source code is located"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "in the following OpenJDK Mercurial repository:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   http://hg.openjdk.java.net/openjfx/jfx/rt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You can use Mercurial to clone the repository or you can browse the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "source using a web browser. The root directory of the GNU Glib source"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "code is here:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   rt/modules/javafx.media/src/main/native/gstreamer/3rd_party/glib/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### LGPL 2.1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                  GNU LESSER GENERAL PUBLIC LICENSE"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                       Version 2.1, February 1999"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": " Copyright (C) 1991, 1999 Free Software Foundation, Inc."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": " 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": " Everyone is permitted to copy and distribute verbatim copies"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": " of this license document, but changing it is not allowed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "[This is the first released version of the Lesser GPL.  It also counts"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": " as the successor of the GNU Library Public License, version 2, hence"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": " the version number 2.1.]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                            Preamble"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  The licenses for most software are designed to take away your"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "freedom to share and change it.  By contrast, the GNU General Public"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Licenses are intended to guarantee your freedom to share and change"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "free software--to make sure the software is free for all its users."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  This license, the Lesser General Public License, applies to some"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "specially designated software packages--typically libraries--of the"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Free Software Foundation and other authors who decide to use it.  You"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "can use it too, but we suggest you first think carefully about whether"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this license or the ordinary General Public License is the better"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "strategy to use in any particular case, based on the explanations below."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  When we speak of free software, we are referring to freedom of use,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "not price.  Our General Public Licenses are designed to make sure that"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you have the freedom to distribute copies of free software (and charge"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "for this service if you wish); that you receive source code or can get"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it if you want it; that you can change the software and use pieces of"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it in new free programs; and that you are informed that you can do"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "these things."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  To protect your rights, we need to make restrictions that forbid"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distributors to deny you these rights or to ask you to surrender these"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rights.  These restrictions translate to certain responsibilities for"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you if you distribute copies of the library or if you modify it."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  For example, if you distribute copies of the library, whether gratis"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "or for a fee, you must give the recipients all the rights that we gave"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you.  You must make sure that they, too, receive or can get the source"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "code.  If you link other code with the library, you must provide"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "complete object files to the recipients, so that they can relink them"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "with the library after making changes to the library and recompiling"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it.  And you must show them these terms so they know their rights."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  We protect your rights with a two-step method: (1) we copyright the"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library, and (2) we offer you this license, which gives you legal"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "permission to copy, distribute and/or modify the library."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  To protect each distributor, we want to make it very clear that"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "there is no warranty for the free library.  Also, if the library is"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modified by someone else and passed on, the recipients should know"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that what they have is not the original version, so that the original"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "author\u0027s reputation will not be affected by problems that might be"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "introduced by others."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Finally, software patents pose a constant threat to the existence of"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "any free program.  We wish to make sure that a company cannot"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "effectively restrict the users of a free program by obtaining a"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "restrictive license from a patent holder.  Therefore, we insist that"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "any patent license obtained for a version of the library must be"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": "consistent with the full freedom of use specified in this license."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Most GNU software, including some libraries, is covered by the"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": "ordinary GNU General Public License.  This license, the GNU Lesser"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "General Public License, applies to certain designated libraries, and"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "is quite different from the ordinary General Public License.  We use"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this license for certain libraries in order to permit linking those"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "libraries into non-free programs."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  When a program is linked with a library, whether statically or using"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a shared library, the combination of the two is legally speaking a"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": "combined work, a derivative of the original library.  The ordinary"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "General Public License therefore permits such linking only if the"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "entire combination fits its criteria of freedom.  The Lesser General"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Public License permits more lax criteria for linking other code with"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the library."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  We call this license the \"Lesser\" General Public License because it"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": "does Less to protect the user\u0027s freedom than the ordinary General"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Public License.  It also provides other free software developers Less"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of an advantage over competing non-free programs.  These disadvantages"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "are the reason we use the ordinary General Public License for many"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "libraries.  However, the Lesser license provides advantages in certain"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "special circumstances."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  For example, on rare occasions, there may be a special need to"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": "encourage the widest possible use of a certain library, so that it becomes"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a de-facto standard.  To achieve this, non-free programs must be"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "allowed to use the library.  A more frequent case is that a free"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library does the same job as widely used non-free libraries.  In this"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": "case, there is little to gain by limiting the free library to free"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "software only, so we use the Lesser General Public License."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  In other cases, permission to use a particular library in non-free"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": "programs enables a greater number of people to use a large body of"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": "free software.  For example, permission to use the GNU C Library in"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "non-free programs enables many more people to use the whole GNU"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "operating system, as well as its variant, the GNU/Linux operating"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": "system."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Although the Lesser General Public License is Less protective of the"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "whneo97"
        },
        "content": "users\u0027 freedom, it does ensure that the user of a program that is"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "whneo97"
        },
        "content": "linked with the Library has the freedom and the wherewithal to run"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that program using a modified version of the Library."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  The precise terms and conditions for copying, distribution and"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modification follow.  Pay close attention to the difference between a"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"work based on the library\" and a \"work that uses the library\".  The"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "whneo97"
        },
        "content": "former contains code derived from the library, whereas the latter must"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "whneo97"
        },
        "content": "be combined with the library in order to run."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                  GNU LESSER GENERAL PUBLIC LICENSE"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  0. This License Agreement applies to any software library or other"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "whneo97"
        },
        "content": "program which contains a notice placed by the copyright holder or"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "whneo97"
        },
        "content": "other authorized party saying it may be distributed under the terms of"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this Lesser General Public License (also called \"this License\")."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Each licensee is addressed as \"you\"."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  A \"library\" means a collection of software functions and/or data"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "whneo97"
        },
        "content": "prepared so as to be conveniently linked with application programs"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "whneo97"
        },
        "content": "(which use some of those functions and data) to form executables."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  The \"Library\", below, refers to any such software library or work"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "whneo97"
        },
        "content": "which has been distributed under these terms.  A \"work based on the"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library\" means either the Library or any derivative work under"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copyright law: that is to say, a work containing the Library or a"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "whneo97"
        },
        "content": "portion of it, either verbatim or with modifications and/or translated"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "whneo97"
        },
        "content": "straightforwardly into another language.  (Hereinafter, translation is"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "whneo97"
        },
        "content": "included without limitation in the term \"modification\".)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  \"Source code\" for a work means the preferred form of the work for"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "whneo97"
        },
        "content": "making modifications to it.  For a library, complete source code means"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all the source code for all modules it contains, plus any associated"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "whneo97"
        },
        "content": "interface definition files, plus the scripts used to control compilation"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and installation of the library."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Activities other than copying, distribution and modification are not"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "whneo97"
        },
        "content": "covered by this License; they are outside its scope.  The act of"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "whneo97"
        },
        "content": "running a program using the Library is not restricted, and output from"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "whneo97"
        },
        "content": "such a program is covered only if its contents constitute a work based"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "whneo97"
        },
        "content": "on the Library (independent of the use of the Library in a tool for"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "whneo97"
        },
        "content": "writing it).  Whether that is true depends on what the Library does"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and what the program that uses the Library does."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  1. You may copy and distribute verbatim copies of the Library\u0027s"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "whneo97"
        },
        "content": "complete source code as you receive it, in any medium, provided that"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you conspicuously and appropriately publish on each copy an"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "whneo97"
        },
        "content": "appropriate copyright notice and disclaimer of warranty; keep intact"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all the notices that refer to this License and to the absence of any"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "whneo97"
        },
        "content": "warranty; and distribute a copy of this License along with the"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  You may charge a fee for the physical act of transferring a copy,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and you may at your option offer warranty protection in exchange for a"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fee."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  2. You may modify your copy or copies of the Library or any portion"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of it, thus forming a work based on the Library, and copy and"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute such modifications or work under the terms of Section 1"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "whneo97"
        },
        "content": "above, provided that you also meet all of these conditions:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a) The modified work must itself be a software library."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    b) You must cause the files modified to carry prominent notices"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    stating that you changed the files and the date of any change."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    c) You must cause the whole of the work to be licensed at no"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    charge to all third parties under the terms of this License."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    d) If a facility in the modified Library refers to a function or a"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    table of data to be supplied by an application program that uses"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    the facility, other than as an argument passed when the facility"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    is invoked, then you must make a good faith effort to ensure that,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    in the event an application does not supply such function or"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    table, the facility still operates, and performs whatever part of"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    its purpose remains meaningful."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    (For example, a function in a library to compute square roots has"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a purpose that is entirely well-defined independent of the"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    application.  Therefore, Subsection 2d requires that any"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    application-supplied function or table used by this function must"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    be optional: if the application does not supply it, the square"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    root function must still compute square roots.)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "whneo97"
        },
        "content": "These requirements apply to the modified work as a whole.  If"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "whneo97"
        },
        "content": "identifiable sections of that work are not derived from the Library,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and can be reasonably considered independent and separate works in"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "whneo97"
        },
        "content": "themselves, then this License, and its terms, do not apply to those"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "whneo97"
        },
        "content": "sections when you distribute them as separate works.  But when you"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the same sections as part of a whole which is a work based"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "whneo97"
        },
        "content": "on the Library, the distribution of the whole must be on the terms of"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this License, whose permissions for other licensees extend to the"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "whneo97"
        },
        "content": "entire whole, and thus to each and every part regardless of who wrote"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Thus, it is not the intent of this section to claim rights or contest"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "whneo97"
        },
        "content": "your rights to work written entirely by you; rather, the intent is to"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "whneo97"
        },
        "content": "exercise the right to control the distribution of derivative or"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "whneo97"
        },
        "content": "collective works based on the Library."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "whneo97"
        },
        "content": "In addition, mere aggregation of another work not based on the Library"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "whneo97"
        },
        "content": "with the Library (or with a work based on the Library) on a volume of"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a storage or distribution medium does not bring the other work under"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the scope of this License."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  3. You may opt to apply the terms of the ordinary GNU General Public"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "whneo97"
        },
        "content": "License instead of this License to a given copy of the Library.  To do"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this, you must alter all the notices that refer to this License, so"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that they refer to the ordinary GNU General Public License, version 2,"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "whneo97"
        },
        "content": "instead of to this License.  (If a newer version than version 2 of the"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "whneo97"
        },
        "content": "ordinary GNU General Public License has appeared, then you can specify"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that version instead if you wish.)  Do not make any other change in"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "whneo97"
        },
        "content": "these notices."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Once this change is made in a given copy, it is irreversible for"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that copy, so the ordinary GNU General Public License applies to all"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "whneo97"
        },
        "content": "subsequent copies and derivative works made from that copy."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  This option is useful when you wish to copy part of the code of"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library into a program that is not a library."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  4. You may copy and distribute the Library (or a portion or"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "whneo97"
        },
        "content": "derivative of it, under Section 2) in object code or executable form"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "whneo97"
        },
        "content": "under the terms of Sections 1 and 2 above provided that you accompany"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it with the complete corresponding machine-readable source code, which"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "whneo97"
        },
        "content": "must be distributed under the terms of Sections 1 and 2 above on a"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "whneo97"
        },
        "content": "medium customarily used for software interchange."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  If distribution of object code is made by offering access to copy"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "whneo97"
        },
        "content": "from a designated place, then offering equivalent access to copy the"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "whneo97"
        },
        "content": "source code from the same place satisfies the requirement to"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the source code, even though third parties are not"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "whneo97"
        },
        "content": "compelled to copy the source along with the object code."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  5. A program that contains no derivative of any portion of the"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library, but is designed to work with the Library by being compiled or"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "whneo97"
        },
        "content": "linked with it, is called a \"work that uses the Library\".  Such a"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "whneo97"
        },
        "content": "work, in isolation, is not a derivative work of the Library, and"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "whneo97"
        },
        "content": "therefore falls outside the scope of this License."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  However, linking a \"work that uses the Library\" with the Library"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "whneo97"
        },
        "content": "creates an executable that is a derivative of the Library (because it"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "whneo97"
        },
        "content": "contains portions of the Library), rather than a \"work that uses the"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library\".  The executable is therefore covered by this License."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Section 6 states terms for distribution of such executables."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  When a \"work that uses the Library\" uses material from a header file"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that is part of the Library, the object code for the work may be a"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "whneo97"
        },
        "content": "derivative work of the Library even though the source code is not."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Whether this is true is especially significant if the work can be"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "whneo97"
        },
        "content": "linked without the Library, or if the work is itself a library.  The"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "whneo97"
        },
        "content": "threshold for this to be true is not precisely defined by law."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  If such an object file uses only numerical parameters, data"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "whneo97"
        },
        "content": "structure layouts and accessors, and small macros and small inline"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "whneo97"
        },
        "content": "functions (ten lines or less in length), then the use of the object"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "whneo97"
        },
        "content": "file is unrestricted, regardless of whether it is legally a derivative"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "whneo97"
        },
        "content": "work.  (Executables containing this object code plus portions of the"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library will still fall under Section 6.)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Otherwise, if the work is a derivative of the Library, you may"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the object code for the work under the terms of Section 6."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Any executables containing that work also fall under Section 6,"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "whneo97"
        },
        "content": "whether or not they are linked directly with the Library itself."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  6. As an exception to the Sections above, you may also combine or"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "whneo97"
        },
        "content": "link a \"work that uses the Library\" with the Library to produce a"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "whneo97"
        },
        "content": "work containing portions of the Library, and distribute that work"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "whneo97"
        },
        "content": "under terms of your choice, provided that the terms permit"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modification of the work for the customer\u0027s own use and reverse"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "whneo97"
        },
        "content": "engineering for debugging such modifications."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  You must give prominent notice with each copy of the work that the"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library is used in it and that the Library and its use are covered by"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this License.  You must supply a copy of this License.  If the work"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "whneo97"
        },
        "content": "during execution displays copyright notices, you must include the"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copyright notice for the Library among them, as well as a reference"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "whneo97"
        },
        "content": "directing the user to the copy of this License.  Also, you must do one"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of these things:"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a) Accompany the work with the complete corresponding"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    machine-readable source code for the Library including whatever"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    changes were used in the work (which must be distributed under"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Sections 1 and 2 above); and, if the work is an executable linked"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    with the Library, with the complete machine-readable \"work that"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    uses the Library\", as object code and/or source code, so that the"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    user can modify the Library and then relink to produce a modified"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    executable containing the modified Library.  (It is understood"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    that the user who changes the contents of definitions files in the"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Library will not necessarily be able to recompile the application"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    to use the modified definitions.)"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    b) Use a suitable shared library mechanism for linking with the"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Library.  A suitable mechanism is one that (1) uses at run time a"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    copy of the library already present on the user\u0027s computer system,"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    rather than copying library functions into the executable, and (2)"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    will operate properly with a modified version of the library, if"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    the user installs one, as long as the modified version is"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    interface-compatible with the version that the work was made with."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    c) Accompany the work with a written offer, valid for at"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    least three years, to give the same user the materials"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    specified in Subsection 6a, above, for a charge no more"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    than the cost of performing this distribution."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    d) If distribution of the work is made by offering access to copy"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    from a designated place, offer equivalent access to copy the above"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    specified materials from the same place."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    e) Verify that the user has already received a copy of these"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    materials or that you have already sent this user a copy."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  For an executable, the required form of the \"work that uses the"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library\" must include any data and utility programs needed for"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "whneo97"
        },
        "content": "reproducing the executable from it.  However, as a special exception,"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the materials to be distributed need not include anything that is"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "whneo97"
        },
        "content": "normally distributed (in either source or binary form) with the major"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "whneo97"
        },
        "content": "components (compiler, kernel, and so on) of the operating system on"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "whneo97"
        },
        "content": "which the executable runs, unless that component itself accompanies"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the executable."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  It may happen that this requirement contradicts the license"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "whneo97"
        },
        "content": "restrictions of other proprietary libraries that do not normally"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "whneo97"
        },
        "content": "accompany the operating system.  Such a contradiction means you cannot"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "whneo97"
        },
        "content": "use both them and the Library together in an executable that you"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  7. You may place library facilities that are a work based on the"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library side-by-side in a single library together with other library"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "whneo97"
        },
        "content": "facilities not covered by this License, and distribute such a combined"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library, provided that the separate distribution of the work based on"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library and of the other library facilities is otherwise"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "whneo97"
        },
        "content": "permitted, and provided that you do these two things:"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a) Accompany the combined library with a copy of the same work"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    based on the Library, uncombined with any other library"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    facilities.  This must be distributed under the terms of the"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Sections above."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    b) Give prominent notice with the combined library of the fact"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    that part of it is a work based on the Library, and explaining"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    where to find the accompanying uncombined form of the same work."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  8. You may not copy, modify, sublicense, link with, or distribute"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library except as expressly provided under this License.  Any"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "whneo97"
        },
        "content": "attempt otherwise to copy, modify, sublicense, link with, or"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the Library is void, and will automatically terminate your"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rights under this License.  However, parties who have received copies,"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "whneo97"
        },
        "content": "or rights, from you under this License will not have their licenses"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "whneo97"
        },
        "content": "terminated so long as such parties remain in full compliance."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  9. You are not required to accept this License, since you have not"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "whneo97"
        },
        "content": "signed it.  However, nothing else grants you permission to modify or"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the Library or its derivative works.  These actions are"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "whneo97"
        },
        "content": "prohibited by law if you do not accept this License.  Therefore, by"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modifying or distributing the Library (or any work based on the"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library), you indicate your acceptance of this License to do so, and"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all its terms and conditions for copying, distributing or modifying"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library or works based on it."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  10. Each time you redistribute the Library (or any work based on the"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library), the recipient automatically receives a license from the"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "whneo97"
        },
        "content": "original licensor to copy, distribute, link with or modify the Library"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "whneo97"
        },
        "content": "subject to these terms and conditions.  You may not impose any further"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "whneo97"
        },
        "content": "restrictions on the recipients\u0027 exercise of the rights granted herein."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You are not responsible for enforcing compliance by third parties with"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this License."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  11. If, as a consequence of a court judgment or allegation of patent"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "whneo97"
        },
        "content": "infringement or for any other reason (not limited to patent issues),"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "whneo97"
        },
        "content": "conditions are imposed on you (whether by court order, agreement or"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "whneo97"
        },
        "content": "otherwise) that contradict the conditions of this License, they do not"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "whneo97"
        },
        "content": "excuse you from the conditions of this License.  If you cannot"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute so as to satisfy simultaneously your obligations under this"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "whneo97"
        },
        "content": "License and any other pertinent obligations, then as a consequence you"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "whneo97"
        },
        "content": "may not distribute the Library at all.  For example, if a patent"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "whneo97"
        },
        "content": "license would not permit royalty-free redistribution of the Library by"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all those who receive copies directly or indirectly through you, then"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the only way you could satisfy both it and this License would be to"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "whneo97"
        },
        "content": "refrain entirely from distribution of the Library."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "whneo97"
        },
        "content": "If any portion of this section is held invalid or unenforceable under any"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "whneo97"
        },
        "content": "particular circumstance, the balance of the section is intended to apply,"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and the section as a whole is intended to apply in other circumstances."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "whneo97"
        },
        "content": "It is not the purpose of this section to induce you to infringe any"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "whneo97"
        },
        "content": "patents or other property right claims or to contest validity of any"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "whneo97"
        },
        "content": "such claims; this section has the sole purpose of protecting the"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "whneo97"
        },
        "content": "integrity of the free software distribution system which is"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "whneo97"
        },
        "content": "implemented by public license practices.  Many people have made"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "whneo97"
        },
        "content": "generous contributions to the wide range of software distributed"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "whneo97"
        },
        "content": "through that system in reliance on consistent application of that"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "whneo97"
        },
        "content": "system; it is up to the author/donor to decide if he or she is willing"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "whneo97"
        },
        "content": "to distribute software through any other system and a licensee cannot"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "whneo97"
        },
        "content": "impose that choice."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "whneo97"
        },
        "content": "This section is intended to make thoroughly clear what is believed to"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "whneo97"
        },
        "content": "be a consequence of the rest of this License."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  12. If the distribution and/or use of the Library is restricted in"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "whneo97"
        },
        "content": "certain countries either by patents or by copyrighted interfaces, the"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "whneo97"
        },
        "content": "original copyright holder who places the Library under this License may add"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "whneo97"
        },
        "content": "an explicit geographical distribution limitation excluding those countries,"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "whneo97"
        },
        "content": "so that distribution is permitted only in or among countries not thus"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "whneo97"
        },
        "content": "excluded.  In such case, this License incorporates the limitation as if"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "whneo97"
        },
        "content": "written in the body of this License."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  13. The Free Software Foundation may publish revised and/or new"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "whneo97"
        },
        "content": "versions of the Lesser General Public License from time to time."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Such new versions will be similar in spirit to the present version,"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "whneo97"
        },
        "content": "but may differ in detail to address new problems or concerns."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Each version is given a distinguishing version number.  If the Library"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "whneo97"
        },
        "content": "specifies a version number of this License which applies to it and"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"any later version\", you have the option of following the terms and"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "whneo97"
        },
        "content": "conditions either of that version or of any later version published by"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Free Software Foundation.  If the Library does not specify a"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "whneo97"
        },
        "content": "license version number, you may choose any version ever published by"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Free Software Foundation."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  14. If you wish to incorporate parts of the Library into other free"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "whneo97"
        },
        "content": "programs whose distribution conditions are incompatible with these,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "whneo97"
        },
        "content": "write to the author to ask for permission.  For software which is"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copyrighted by the Free Software Foundation, write to the Free"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Software Foundation; we sometimes make exceptions for this.  Our"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "whneo97"
        },
        "content": "decision will be guided by the two goals of preserving the free status"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of all derivatives of our free software and of promoting the sharing"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and reuse of software generally."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                            NO WARRANTY"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "whneo97"
        },
        "content": "WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "whneo97"
        },
        "content": "EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "whneo97"
        },
        "content": "OTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "whneo97"
        },
        "content": "KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "whneo97"
        },
        "content": "IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "whneo97"
        },
        "content": "PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "whneo97"
        },
        "content": "LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "whneo97"
        },
        "content": "THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "whneo97"
        },
        "content": "WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "whneo97"
        },
        "content": "AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "whneo97"
        },
        "content": "FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "whneo97"
        },
        "content": "CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "whneo97"
        },
        "content": "LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "whneo97"
        },
        "content": "RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "whneo97"
        },
        "content": "FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "whneo97"
        },
        "content": "SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "whneo97"
        },
        "content": "DAMAGES."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                     END OF TERMS AND CONDITIONS"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "whneo97"
        },
        "content": "           How to Apply These Terms to Your New Libraries"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  If you develop a new library, and you want it to be of the greatest"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "whneo97"
        },
        "content": "possible use to the public, we recommend making it free software that"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "whneo97"
        },
        "content": "everyone can redistribute and change.  You can do so by permitting"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "whneo97"
        },
        "content": "redistribution under these terms (or, alternatively, under the terms of the"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "whneo97"
        },
        "content": "ordinary General Public License)."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  To apply these terms, attach the following notices to the library.  It is"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "whneo97"
        },
        "content": "safest to attach them to the start of each source file to most effectively"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "whneo97"
        },
        "content": "convey the exclusion of warranty; and each file should have at least the"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"copyright\" line and a pointer to where the full notice is found."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    \u003cone line to give the library\u0027s name and a brief idea of what it does.\u003e"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Copyright (C) \u003cyear\u003e  \u003cname of author\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    This library is free software; you can redistribute it and/or"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    modify it under the terms of the GNU Lesser General Public"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    License as published by the Free Software Foundation; either"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    version 2.1 of the License, or (at your option) any later version."
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    This library is distributed in the hope that it will be useful,"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    but WITHOUT ANY WARRANTY; without even the implied warranty of"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Lesser General Public License for more details."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    You should have received a copy of the GNU Lesser General Public"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    License along with this library; if not, write to the Free Software"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Also add information on how to contact you by electronic and paper mail."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You should also get your employer (if you work as a programmer) or your"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "whneo97"
        },
        "content": "school, if any, to sign a \"copyright disclaimer\" for the library, if"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "whneo97"
        },
        "content": "necessary.  Here is a sample; alter the names:"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Yoyodyne, Inc., hereby disclaims all copyright interest in the"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  library `Frob\u0027 (a library for tweaking knobs) written by James Random Hacker."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  \u003csignature of Ty Coon\u003e, 1 April 1990"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Ty Coon, President of Vice"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "whneo97"
        },
        "content": "That\u0027s all there is to it!"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "whneo97": 535
    }
  },
  {
    "path": "javafx-sdk-11.0.2/legal/javafx.media/gstreamer.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "## GStreamer v1.14.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### GStreamer Notice"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You are receiving a copy of GStreamer, Version: 1.14.0 in either source or"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "object code in the JavaFX runtime or JavaFX SDK. The terms of the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Oracle license do NOT apply to the GStreamer, Version: 1.14.0; it is"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "licensed under the following license, separately from the Oracle programs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you receive. If you do not wish to install this library, you may delete"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this library:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   - On Linux systems: delete $(JAVA_HOME)/lib/libgstreamer-lite.so"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   - On Mac OS X systems: delete $(JAVA_HOME)/lib/libgstreamer-lite.dylib"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   - On Windows systems: delete $(JAVA_HOME)\\bin\\gstreamer-lite.dll"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "A copy of the Oracle modified GStreamer library source code is located"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "in the following OpenJDK Mercurial repository:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   http://hg.openjdk.java.net/openjfx/jfx/rt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You can use Mercurial to clone the repository or you can browse the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "source using a web browser. The root directory of the GStreamer source"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "code is here:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   rt/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### LGPL 2.1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                  GNU LESSER GENERAL PUBLIC LICENSE"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                       Version 2.1, February 1999"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": " Copyright (C) 1991, 1999 Free Software Foundation, Inc."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": " 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": " Everyone is permitted to copy and distribute verbatim copies"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": " of this license document, but changing it is not allowed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "[This is the first released version of the Lesser GPL.  It also counts"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": " as the successor of the GNU Library Public License, version 2, hence"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": " the version number 2.1.]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                            Preamble"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  The licenses for most software are designed to take away your"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "freedom to share and change it.  By contrast, the GNU General Public"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Licenses are intended to guarantee your freedom to share and change"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "free software--to make sure the software is free for all its users."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  This license, the Lesser General Public License, applies to some"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "specially designated software packages--typically libraries--of the"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Free Software Foundation and other authors who decide to use it.  You"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "can use it too, but we suggest you first think carefully about whether"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this license or the ordinary General Public License is the better"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "strategy to use in any particular case, based on the explanations below."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  When we speak of free software, we are referring to freedom of use,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "not price.  Our General Public Licenses are designed to make sure that"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you have the freedom to distribute copies of free software (and charge"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "for this service if you wish); that you receive source code or can get"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it if you want it; that you can change the software and use pieces of"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it in new free programs; and that you are informed that you can do"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "these things."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  To protect your rights, we need to make restrictions that forbid"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distributors to deny you these rights or to ask you to surrender these"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rights.  These restrictions translate to certain responsibilities for"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you if you distribute copies of the library or if you modify it."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  For example, if you distribute copies of the library, whether gratis"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "or for a fee, you must give the recipients all the rights that we gave"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you.  You must make sure that they, too, receive or can get the source"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "code.  If you link other code with the library, you must provide"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "complete object files to the recipients, so that they can relink them"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "with the library after making changes to the library and recompiling"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it.  And you must show them these terms so they know their rights."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  We protect your rights with a two-step method: (1) we copyright the"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library, and (2) we offer you this license, which gives you legal"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "permission to copy, distribute and/or modify the library."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  To protect each distributor, we want to make it very clear that"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "there is no warranty for the free library.  Also, if the library is"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modified by someone else and passed on, the recipients should know"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that what they have is not the original version, so that the original"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "author\u0027s reputation will not be affected by problems that might be"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "introduced by others."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Finally, software patents pose a constant threat to the existence of"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "any free program.  We wish to make sure that a company cannot"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "effectively restrict the users of a free program by obtaining a"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "restrictive license from a patent holder.  Therefore, we insist that"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "any patent license obtained for a version of the library must be"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": "consistent with the full freedom of use specified in this license."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Most GNU software, including some libraries, is covered by the"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": "ordinary GNU General Public License.  This license, the GNU Lesser"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "General Public License, applies to certain designated libraries, and"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "is quite different from the ordinary General Public License.  We use"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this license for certain libraries in order to permit linking those"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "libraries into non-free programs."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  When a program is linked with a library, whether statically or using"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a shared library, the combination of the two is legally speaking a"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": "combined work, a derivative of the original library.  The ordinary"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "General Public License therefore permits such linking only if the"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "entire combination fits its criteria of freedom.  The Lesser General"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Public License permits more lax criteria for linking other code with"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the library."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  We call this license the \"Lesser\" General Public License because it"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": "does Less to protect the user\u0027s freedom than the ordinary General"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Public License.  It also provides other free software developers Less"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of an advantage over competing non-free programs.  These disadvantages"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "are the reason we use the ordinary General Public License for many"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "libraries.  However, the Lesser license provides advantages in certain"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "special circumstances."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  For example, on rare occasions, there may be a special need to"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": "encourage the widest possible use of a certain library, so that it becomes"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a de-facto standard.  To achieve this, non-free programs must be"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "allowed to use the library.  A more frequent case is that a free"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library does the same job as widely used non-free libraries.  In this"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": "case, there is little to gain by limiting the free library to free"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "software only, so we use the Lesser General Public License."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  In other cases, permission to use a particular library in non-free"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": "programs enables a greater number of people to use a large body of"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": "free software.  For example, permission to use the GNU C Library in"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "non-free programs enables many more people to use the whole GNU"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "operating system, as well as its variant, the GNU/Linux operating"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": "system."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Although the Lesser General Public License is Less protective of the"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "whneo97"
        },
        "content": "users\u0027 freedom, it does ensure that the user of a program that is"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "whneo97"
        },
        "content": "linked with the Library has the freedom and the wherewithal to run"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that program using a modified version of the Library."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  The precise terms and conditions for copying, distribution and"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modification follow.  Pay close attention to the difference between a"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"work based on the library\" and a \"work that uses the library\".  The"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "whneo97"
        },
        "content": "former contains code derived from the library, whereas the latter must"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "whneo97"
        },
        "content": "be combined with the library in order to run."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                  GNU LESSER GENERAL PUBLIC LICENSE"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  0. This License Agreement applies to any software library or other"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "whneo97"
        },
        "content": "program which contains a notice placed by the copyright holder or"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "whneo97"
        },
        "content": "other authorized party saying it may be distributed under the terms of"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this Lesser General Public License (also called \"this License\")."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Each licensee is addressed as \"you\"."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  A \"library\" means a collection of software functions and/or data"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "whneo97"
        },
        "content": "prepared so as to be conveniently linked with application programs"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "whneo97"
        },
        "content": "(which use some of those functions and data) to form executables."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  The \"Library\", below, refers to any such software library or work"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "whneo97"
        },
        "content": "which has been distributed under these terms.  A \"work based on the"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library\" means either the Library or any derivative work under"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copyright law: that is to say, a work containing the Library or a"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "whneo97"
        },
        "content": "portion of it, either verbatim or with modifications and/or translated"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "whneo97"
        },
        "content": "straightforwardly into another language.  (Hereinafter, translation is"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "whneo97"
        },
        "content": "included without limitation in the term \"modification\".)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  \"Source code\" for a work means the preferred form of the work for"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "whneo97"
        },
        "content": "making modifications to it.  For a library, complete source code means"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all the source code for all modules it contains, plus any associated"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "whneo97"
        },
        "content": "interface definition files, plus the scripts used to control compilation"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and installation of the library."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Activities other than copying, distribution and modification are not"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "whneo97"
        },
        "content": "covered by this License; they are outside its scope.  The act of"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "whneo97"
        },
        "content": "running a program using the Library is not restricted, and output from"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "whneo97"
        },
        "content": "such a program is covered only if its contents constitute a work based"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "whneo97"
        },
        "content": "on the Library (independent of the use of the Library in a tool for"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "whneo97"
        },
        "content": "writing it).  Whether that is true depends on what the Library does"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and what the program that uses the Library does."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  1. You may copy and distribute verbatim copies of the Library\u0027s"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "whneo97"
        },
        "content": "complete source code as you receive it, in any medium, provided that"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you conspicuously and appropriately publish on each copy an"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "whneo97"
        },
        "content": "appropriate copyright notice and disclaimer of warranty; keep intact"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all the notices that refer to this License and to the absence of any"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "whneo97"
        },
        "content": "warranty; and distribute a copy of this License along with the"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  You may charge a fee for the physical act of transferring a copy,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and you may at your option offer warranty protection in exchange for a"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fee."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  2. You may modify your copy or copies of the Library or any portion"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of it, thus forming a work based on the Library, and copy and"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute such modifications or work under the terms of Section 1"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "whneo97"
        },
        "content": "above, provided that you also meet all of these conditions:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a) The modified work must itself be a software library."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    b) You must cause the files modified to carry prominent notices"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    stating that you changed the files and the date of any change."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    c) You must cause the whole of the work to be licensed at no"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    charge to all third parties under the terms of this License."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    d) If a facility in the modified Library refers to a function or a"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    table of data to be supplied by an application program that uses"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    the facility, other than as an argument passed when the facility"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    is invoked, then you must make a good faith effort to ensure that,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    in the event an application does not supply such function or"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    table, the facility still operates, and performs whatever part of"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    its purpose remains meaningful."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    (For example, a function in a library to compute square roots has"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a purpose that is entirely well-defined independent of the"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    application.  Therefore, Subsection 2d requires that any"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    application-supplied function or table used by this function must"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    be optional: if the application does not supply it, the square"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    root function must still compute square roots.)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "whneo97"
        },
        "content": "These requirements apply to the modified work as a whole.  If"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "whneo97"
        },
        "content": "identifiable sections of that work are not derived from the Library,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and can be reasonably considered independent and separate works in"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "whneo97"
        },
        "content": "themselves, then this License, and its terms, do not apply to those"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "whneo97"
        },
        "content": "sections when you distribute them as separate works.  But when you"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the same sections as part of a whole which is a work based"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "whneo97"
        },
        "content": "on the Library, the distribution of the whole must be on the terms of"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this License, whose permissions for other licensees extend to the"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "whneo97"
        },
        "content": "entire whole, and thus to each and every part regardless of who wrote"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Thus, it is not the intent of this section to claim rights or contest"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "whneo97"
        },
        "content": "your rights to work written entirely by you; rather, the intent is to"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "whneo97"
        },
        "content": "exercise the right to control the distribution of derivative or"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "whneo97"
        },
        "content": "collective works based on the Library."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "whneo97"
        },
        "content": "In addition, mere aggregation of another work not based on the Library"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "whneo97"
        },
        "content": "with the Library (or with a work based on the Library) on a volume of"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a storage or distribution medium does not bring the other work under"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the scope of this License."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  3. You may opt to apply the terms of the ordinary GNU General Public"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "whneo97"
        },
        "content": "License instead of this License to a given copy of the Library.  To do"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this, you must alter all the notices that refer to this License, so"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that they refer to the ordinary GNU General Public License, version 2,"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "whneo97"
        },
        "content": "instead of to this License.  (If a newer version than version 2 of the"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "whneo97"
        },
        "content": "ordinary GNU General Public License has appeared, then you can specify"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that version instead if you wish.)  Do not make any other change in"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "whneo97"
        },
        "content": "these notices."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Once this change is made in a given copy, it is irreversible for"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that copy, so the ordinary GNU General Public License applies to all"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "whneo97"
        },
        "content": "subsequent copies and derivative works made from that copy."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  This option is useful when you wish to copy part of the code of"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library into a program that is not a library."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  4. You may copy and distribute the Library (or a portion or"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "whneo97"
        },
        "content": "derivative of it, under Section 2) in object code or executable form"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "whneo97"
        },
        "content": "under the terms of Sections 1 and 2 above provided that you accompany"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it with the complete corresponding machine-readable source code, which"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "whneo97"
        },
        "content": "must be distributed under the terms of Sections 1 and 2 above on a"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "whneo97"
        },
        "content": "medium customarily used for software interchange."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  If distribution of object code is made by offering access to copy"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "whneo97"
        },
        "content": "from a designated place, then offering equivalent access to copy the"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "whneo97"
        },
        "content": "source code from the same place satisfies the requirement to"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the source code, even though third parties are not"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "whneo97"
        },
        "content": "compelled to copy the source along with the object code."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  5. A program that contains no derivative of any portion of the"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library, but is designed to work with the Library by being compiled or"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "whneo97"
        },
        "content": "linked with it, is called a \"work that uses the Library\".  Such a"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "whneo97"
        },
        "content": "work, in isolation, is not a derivative work of the Library, and"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "whneo97"
        },
        "content": "therefore falls outside the scope of this License."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  However, linking a \"work that uses the Library\" with the Library"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "whneo97"
        },
        "content": "creates an executable that is a derivative of the Library (because it"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "whneo97"
        },
        "content": "contains portions of the Library), rather than a \"work that uses the"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library\".  The executable is therefore covered by this License."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Section 6 states terms for distribution of such executables."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  When a \"work that uses the Library\" uses material from a header file"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that is part of the Library, the object code for the work may be a"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "whneo97"
        },
        "content": "derivative work of the Library even though the source code is not."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Whether this is true is especially significant if the work can be"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "whneo97"
        },
        "content": "linked without the Library, or if the work is itself a library.  The"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "whneo97"
        },
        "content": "threshold for this to be true is not precisely defined by law."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  If such an object file uses only numerical parameters, data"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "whneo97"
        },
        "content": "structure layouts and accessors, and small macros and small inline"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "whneo97"
        },
        "content": "functions (ten lines or less in length), then the use of the object"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "whneo97"
        },
        "content": "file is unrestricted, regardless of whether it is legally a derivative"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "whneo97"
        },
        "content": "work.  (Executables containing this object code plus portions of the"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library will still fall under Section 6.)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Otherwise, if the work is a derivative of the Library, you may"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the object code for the work under the terms of Section 6."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Any executables containing that work also fall under Section 6,"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "whneo97"
        },
        "content": "whether or not they are linked directly with the Library itself."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  6. As an exception to the Sections above, you may also combine or"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "whneo97"
        },
        "content": "link a \"work that uses the Library\" with the Library to produce a"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "whneo97"
        },
        "content": "work containing portions of the Library, and distribute that work"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "whneo97"
        },
        "content": "under terms of your choice, provided that the terms permit"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modification of the work for the customer\u0027s own use and reverse"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "whneo97"
        },
        "content": "engineering for debugging such modifications."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  You must give prominent notice with each copy of the work that the"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library is used in it and that the Library and its use are covered by"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this License.  You must supply a copy of this License.  If the work"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "whneo97"
        },
        "content": "during execution displays copyright notices, you must include the"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copyright notice for the Library among them, as well as a reference"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "whneo97"
        },
        "content": "directing the user to the copy of this License.  Also, you must do one"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of these things:"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a) Accompany the work with the complete corresponding"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    machine-readable source code for the Library including whatever"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    changes were used in the work (which must be distributed under"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Sections 1 and 2 above); and, if the work is an executable linked"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    with the Library, with the complete machine-readable \"work that"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    uses the Library\", as object code and/or source code, so that the"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    user can modify the Library and then relink to produce a modified"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    executable containing the modified Library.  (It is understood"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    that the user who changes the contents of definitions files in the"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Library will not necessarily be able to recompile the application"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    to use the modified definitions.)"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    b) Use a suitable shared library mechanism for linking with the"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Library.  A suitable mechanism is one that (1) uses at run time a"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    copy of the library already present on the user\u0027s computer system,"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    rather than copying library functions into the executable, and (2)"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    will operate properly with a modified version of the library, if"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    the user installs one, as long as the modified version is"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    interface-compatible with the version that the work was made with."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    c) Accompany the work with a written offer, valid for at"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    least three years, to give the same user the materials"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    specified in Subsection 6a, above, for a charge no more"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    than the cost of performing this distribution."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    d) If distribution of the work is made by offering access to copy"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    from a designated place, offer equivalent access to copy the above"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    specified materials from the same place."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    e) Verify that the user has already received a copy of these"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    materials or that you have already sent this user a copy."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  For an executable, the required form of the \"work that uses the"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library\" must include any data and utility programs needed for"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "whneo97"
        },
        "content": "reproducing the executable from it.  However, as a special exception,"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the materials to be distributed need not include anything that is"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "whneo97"
        },
        "content": "normally distributed (in either source or binary form) with the major"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "whneo97"
        },
        "content": "components (compiler, kernel, and so on) of the operating system on"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "whneo97"
        },
        "content": "which the executable runs, unless that component itself accompanies"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the executable."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  It may happen that this requirement contradicts the license"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "whneo97"
        },
        "content": "restrictions of other proprietary libraries that do not normally"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "whneo97"
        },
        "content": "accompany the operating system.  Such a contradiction means you cannot"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "whneo97"
        },
        "content": "use both them and the Library together in an executable that you"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  7. You may place library facilities that are a work based on the"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library side-by-side in a single library together with other library"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "whneo97"
        },
        "content": "facilities not covered by this License, and distribute such a combined"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library, provided that the separate distribution of the work based on"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library and of the other library facilities is otherwise"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "whneo97"
        },
        "content": "permitted, and provided that you do these two things:"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a) Accompany the combined library with a copy of the same work"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    based on the Library, uncombined with any other library"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    facilities.  This must be distributed under the terms of the"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Sections above."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    b) Give prominent notice with the combined library of the fact"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    that part of it is a work based on the Library, and explaining"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    where to find the accompanying uncombined form of the same work."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  8. You may not copy, modify, sublicense, link with, or distribute"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library except as expressly provided under this License.  Any"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "whneo97"
        },
        "content": "attempt otherwise to copy, modify, sublicense, link with, or"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the Library is void, and will automatically terminate your"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rights under this License.  However, parties who have received copies,"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "whneo97"
        },
        "content": "or rights, from you under this License will not have their licenses"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "whneo97"
        },
        "content": "terminated so long as such parties remain in full compliance."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  9. You are not required to accept this License, since you have not"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "whneo97"
        },
        "content": "signed it.  However, nothing else grants you permission to modify or"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the Library or its derivative works.  These actions are"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "whneo97"
        },
        "content": "prohibited by law if you do not accept this License.  Therefore, by"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modifying or distributing the Library (or any work based on the"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library), you indicate your acceptance of this License to do so, and"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all its terms and conditions for copying, distributing or modifying"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library or works based on it."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  10. Each time you redistribute the Library (or any work based on the"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library), the recipient automatically receives a license from the"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "whneo97"
        },
        "content": "original licensor to copy, distribute, link with or modify the Library"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "whneo97"
        },
        "content": "subject to these terms and conditions.  You may not impose any further"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "whneo97"
        },
        "content": "restrictions on the recipients\u0027 exercise of the rights granted herein."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You are not responsible for enforcing compliance by third parties with"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this License."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  11. If, as a consequence of a court judgment or allegation of patent"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "whneo97"
        },
        "content": "infringement or for any other reason (not limited to patent issues),"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "whneo97"
        },
        "content": "conditions are imposed on you (whether by court order, agreement or"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "whneo97"
        },
        "content": "otherwise) that contradict the conditions of this License, they do not"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "whneo97"
        },
        "content": "excuse you from the conditions of this License.  If you cannot"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute so as to satisfy simultaneously your obligations under this"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "whneo97"
        },
        "content": "License and any other pertinent obligations, then as a consequence you"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "whneo97"
        },
        "content": "may not distribute the Library at all.  For example, if a patent"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "whneo97"
        },
        "content": "license would not permit royalty-free redistribution of the Library by"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all those who receive copies directly or indirectly through you, then"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the only way you could satisfy both it and this License would be to"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "whneo97"
        },
        "content": "refrain entirely from distribution of the Library."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "whneo97"
        },
        "content": "If any portion of this section is held invalid or unenforceable under any"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "whneo97"
        },
        "content": "particular circumstance, the balance of the section is intended to apply,"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and the section as a whole is intended to apply in other circumstances."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "whneo97"
        },
        "content": "It is not the purpose of this section to induce you to infringe any"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "whneo97"
        },
        "content": "patents or other property right claims or to contest validity of any"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "whneo97"
        },
        "content": "such claims; this section has the sole purpose of protecting the"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "whneo97"
        },
        "content": "integrity of the free software distribution system which is"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "whneo97"
        },
        "content": "implemented by public license practices.  Many people have made"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "whneo97"
        },
        "content": "generous contributions to the wide range of software distributed"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "whneo97"
        },
        "content": "through that system in reliance on consistent application of that"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "whneo97"
        },
        "content": "system; it is up to the author/donor to decide if he or she is willing"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "whneo97"
        },
        "content": "to distribute software through any other system and a licensee cannot"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "whneo97"
        },
        "content": "impose that choice."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "whneo97"
        },
        "content": "This section is intended to make thoroughly clear what is believed to"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "whneo97"
        },
        "content": "be a consequence of the rest of this License."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  12. If the distribution and/or use of the Library is restricted in"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "whneo97"
        },
        "content": "certain countries either by patents or by copyrighted interfaces, the"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "whneo97"
        },
        "content": "original copyright holder who places the Library under this License may add"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "whneo97"
        },
        "content": "an explicit geographical distribution limitation excluding those countries,"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "whneo97"
        },
        "content": "so that distribution is permitted only in or among countries not thus"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "whneo97"
        },
        "content": "excluded.  In such case, this License incorporates the limitation as if"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "whneo97"
        },
        "content": "written in the body of this License."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  13. The Free Software Foundation may publish revised and/or new"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "whneo97"
        },
        "content": "versions of the Lesser General Public License from time to time."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Such new versions will be similar in spirit to the present version,"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "whneo97"
        },
        "content": "but may differ in detail to address new problems or concerns."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Each version is given a distinguishing version number.  If the Library"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "whneo97"
        },
        "content": "specifies a version number of this License which applies to it and"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"any later version\", you have the option of following the terms and"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "whneo97"
        },
        "content": "conditions either of that version or of any later version published by"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Free Software Foundation.  If the Library does not specify a"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "whneo97"
        },
        "content": "license version number, you may choose any version ever published by"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Free Software Foundation."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  14. If you wish to incorporate parts of the Library into other free"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "whneo97"
        },
        "content": "programs whose distribution conditions are incompatible with these,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "whneo97"
        },
        "content": "write to the author to ask for permission.  For software which is"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copyrighted by the Free Software Foundation, write to the Free"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Software Foundation; we sometimes make exceptions for this.  Our"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "whneo97"
        },
        "content": "decision will be guided by the two goals of preserving the free status"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of all derivatives of our free software and of promoting the sharing"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and reuse of software generally."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                            NO WARRANTY"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "whneo97"
        },
        "content": "WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "whneo97"
        },
        "content": "EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "whneo97"
        },
        "content": "OTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "whneo97"
        },
        "content": "KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "whneo97"
        },
        "content": "IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "whneo97"
        },
        "content": "PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "whneo97"
        },
        "content": "LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "whneo97"
        },
        "content": "THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "whneo97"
        },
        "content": "WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "whneo97"
        },
        "content": "AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "whneo97"
        },
        "content": "FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "whneo97"
        },
        "content": "CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "whneo97"
        },
        "content": "LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "whneo97"
        },
        "content": "RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "whneo97"
        },
        "content": "FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "whneo97"
        },
        "content": "SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "whneo97"
        },
        "content": "DAMAGES."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                     END OF TERMS AND CONDITIONS"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "whneo97"
        },
        "content": "           How to Apply These Terms to Your New Libraries"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  If you develop a new library, and you want it to be of the greatest"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "whneo97"
        },
        "content": "possible use to the public, we recommend making it free software that"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "whneo97"
        },
        "content": "everyone can redistribute and change.  You can do so by permitting"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "whneo97"
        },
        "content": "redistribution under these terms (or, alternatively, under the terms of the"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "whneo97"
        },
        "content": "ordinary General Public License)."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  To apply these terms, attach the following notices to the library.  It is"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "whneo97"
        },
        "content": "safest to attach them to the start of each source file to most effectively"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "whneo97"
        },
        "content": "convey the exclusion of warranty; and each file should have at least the"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"copyright\" line and a pointer to where the full notice is found."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    \u003cone line to give the library\u0027s name and a brief idea of what it does.\u003e"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Copyright (C) \u003cyear\u003e  \u003cname of author\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    This library is free software; you can redistribute it and/or"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    modify it under the terms of the GNU Lesser General Public"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    License as published by the Free Software Foundation; either"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    version 2.1 of the License, or (at your option) any later version."
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    This library is distributed in the hope that it will be useful,"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    but WITHOUT ANY WARRANTY; without even the implied warranty of"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Lesser General Public License for more details."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    You should have received a copy of the GNU Lesser General Public"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    License along with this library; if not, write to the Free Software"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Also add information on how to contact you by electronic and paper mail."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You should also get your employer (if you work as a programmer) or your"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "whneo97"
        },
        "content": "school, if any, to sign a \"copyright disclaimer\" for the library, if"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "whneo97"
        },
        "content": "necessary.  Here is a sample; alter the names:"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Yoyodyne, Inc., hereby disclaims all copyright interest in the"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  library `Frob\u0027 (a library for tweaking knobs) written by James Random Hacker."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  \u003csignature of Ty Coon\u003e, 1 April 1990"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Ty Coon, President of Vice"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "whneo97"
        },
        "content": "That\u0027s all there is to it!"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      }
    ],
    "authorContributionMap": {
      "whneo97": 533
    }
  },
  {
    "path": "javafx-sdk-11.0.2/legal/javafx.media/libffi.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "## LibFFI v3.2.1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### LibFFI License"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "libffi - Copyright (c) 1996-2014  Anthony Green, Red Hat, Inc and others."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "See source files for details."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Permission is hereby granted, free of charge, to any person obtaining"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a copy of this software and associated documentation files (the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "``Software\u0027\u0027), to deal in the Software without restriction, including"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "without limitation the rights to use, copy, modify, merge, publish,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute, sublicense, and/or sell copies of the Software, and to"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "permit persons to whom the Software is furnished to do so, subject to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the following conditions:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "The above copyright notice and this permission notice shall be"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "included in all copies or substantial portions of the Software."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "THE SOFTWARE IS PROVIDED ``AS IS\u0027\u0027, WITHOUT WARRANTY OF ANY KIND,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "whneo97": 29
    }
  },
  {
    "path": "javafx-sdk-11.0.2/legal/javafx.web/icu_web.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "## IBM International Components for Unicode (ICU4C) v62.1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### ICU License"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "COPYRIGHT AND PERMISSION NOTICE (ICU 58 and later)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Copyright © 1991-2018 Unicode, Inc. All rights reserved."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Distributed under the Terms of Use in http://www.unicode.org/copyright.html."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Permission is hereby granted, free of charge, to any person obtaining"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a copy of the Unicode data files and any associated documentation"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "(the \"Data Files\") or Unicode software and any associated documentation"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "(the \"Software\") to deal in the Data Files or Software"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "without restriction, including without limitation the rights to use,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copy, modify, merge, publish, distribute, and/or sell copies of"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Data Files or Software, and to permit persons to whom the Data Files"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "or Software are furnished to do so, provided that either"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "(a) this copyright and permission notice appear with all copies"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of the Data Files or Software, or"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "(b) this copyright and permission notice appear in associated"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Documentation."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "THE DATA FILES AND SOFTWARE ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "NONINFRINGEMENT OF THIRD PARTY RIGHTS."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "PERFORMANCE OF THE DATA FILES OR SOFTWARE."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Except as contained in this notice, the name of a copyright holder"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "shall not be used in advertising or otherwise to promote the sale,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "use or other dealings in these Data Files or Software without prior"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "written authorization of the copyright holder."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "---------------------"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Third-Party Software Licenses"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "This section contains third-party software notices and/or additional"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "terms for licensed third-party software components included within ICU"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "libraries."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "1. ICU License - ICU 1.8.1 to ICU 57.1"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "COPYRIGHT AND PERMISSION NOTICE"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Copyright (c) 1995-2016 International Business Machines Corporation and others"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "All rights reserved."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Permission is hereby granted, free of charge, to any person obtaining"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a copy of this software and associated documentation files (the"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"Software\"), to deal in the Software without restriction, including"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "without limitation the rights to use, copy, modify, merge, publish,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute, and/or sell copies of the Software, and to permit persons"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "to whom the Software is furnished to do so, provided that the above"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copyright notice(s) and this permission notice appear in all copies of"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Software and that both the above copyright notice(s) and this"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "permission notice appear in supporting documentation."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "SPECIAL INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Except as contained in this notice, the name of a copyright holder"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "shall not be used in advertising or otherwise to promote the sale, use"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "or other dealings in this Software without prior written authorization"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of the copyright holder."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "All trademarks and registered trademarks mentioned herein are the"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "property of their respective owners."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "2. Chinese/Japanese Word Break Dictionary Data (cjdict.txt)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #     The Google Chrome software developed by Google is licensed under"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # the BSD license. Other software included in this distribution is"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # provided under other licenses, as set forth below."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  The BSD License"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  http://opensource.org/licenses/bsd-license.php"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Copyright (C) 2006-2008, Google Inc."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  All rights reserved."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Redistribution and use in source and binary forms, with or without"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # modification, are permitted provided that the following conditions are met:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Redistributions of source code must retain the above copyright notice,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # this list of conditions and the following disclaimer."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Redistributions in binary form must reproduce the above"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # copyright notice, this list of conditions and the following"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # disclaimer in the documentation and/or other materials provided with"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # the distribution."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Neither the name of  Google Inc. nor the names of its"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # contributors may be used to endorse or promote products derived from"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # this software without specific prior written permission."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  The word list in cjdict.txt are generated by combining three word lists"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # listed below with further processing for compound word breaking. The"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # frequency is generated with an iterative training against Google web"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # corpora."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  * Libtabe (Chinese)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    - https://sourceforge.net/project/?group_id\u003d1519"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    - Its license terms and conditions are shown below."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  * IPADIC (Japanese)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    - http://chasen.aist-nara.ac.jp/chasen/distribution.html"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    - Its license terms and conditions are shown below."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  ---------COPYING.libtabe ---- BEGIN--------------------"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  /*"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * Copyright (c) 1999 TaBE Project."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * Copyright (c) 1999 Pai-Hsiang Hsiao."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * All rights reserved."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * Redistribution and use in source and binary forms, with or without"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * modification, are permitted provided that the following conditions"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * are met:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * . Redistributions of source code must retain the above copyright"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   notice, this list of conditions and the following disclaimer."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * . Redistributions in binary form must reproduce the above copyright"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   notice, this list of conditions and the following disclaimer in"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   the documentation and/or other materials provided with the"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   distribution."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * . Neither the name of the TaBE Project nor the names of its"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   contributors may be used to endorse or promote products derived"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   from this software without specific prior written permission."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * OF THE POSSIBILITY OF SUCH DAMAGE."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  /*"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * Copyright (c) 1999 Computer Systems and Communication Lab,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *                    Institute of Information Science, Academia"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #       *                    Sinica. All rights reserved."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * Redistribution and use in source and binary forms, with or without"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * modification, are permitted provided that the following conditions"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * are met:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * . Redistributions of source code must retain the above copyright"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   notice, this list of conditions and the following disclaimer."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * . Redistributions in binary form must reproduce the above copyright"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   notice, this list of conditions and the following disclaimer in"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   the documentation and/or other materials provided with the"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   distribution."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * . Neither the name of the Computer Systems and Communication Lab"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   nor the names of its contributors may be used to endorse or"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   promote products derived from this software without specific"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *   prior written permission."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   * OF THE POSSIBILITY OF SUCH DAMAGE."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #   */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Copyright 1996 Chih-Hao Tsai @ Beckman Institute,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #      University of Illinois"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  c-tsai4@uiuc.edu  http://casper.beckman.uiuc.edu/~c-tsai4"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  ---------------COPYING.libtabe-----END--------------------------------"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  ---------------COPYING.ipadic-----BEGIN-------------------------------"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Copyright 2000, 2001, 2002, 2003 Nara Institute of Science"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  and Technology.  All Rights Reserved."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Use, reproduction, and distribution of this software is permitted."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Any copy of this software, whether in its original form or modified,"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  must include both the above copyright notice and the following"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  paragraphs."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Nara Institute of Science and Technology (NAIST),"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  the copyright holders, disclaims all warranties with regard to this"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  software, including all implied warranties of merchantability and"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  fitness, in no event shall NAIST be liable for"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  any special, indirect or consequential damages or any damages"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  whatsoever resulting from loss of use, data or profits, whether in an"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  action of contract, negligence or other tortuous action, arising out"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  of or in connection with the use or performance of this software."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  A large portion of the dictionary entries"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  originate from ICOT Free Software.  The following conditions for ICOT"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Free Software applies to the current dictionary as well."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Each User may also freely distribute the Program, whether in its"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  original form or modified, to any third party or parties, PROVIDED"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  that the provisions of Section 3 (\"NO WARRANTY\") will ALWAYS appear"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  on, or be attached to, the Program, which is distributed substantially"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  in the same form as set out herein and that such intended"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  distribution, if actually made, will neither violate or otherwise"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  contravene any of the laws and regulations of the countries having"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  jurisdiction over the User or the intended distribution itself."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  NO WARRANTY"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  The program was produced on an experimental basis in the course of the"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  research and development conducted during the project and is provided"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  to users as so produced on an experimental basis.  Accordingly, the"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  program is provided without any warranty whatsoever, whether express,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  implied, statutory or otherwise.  The term \"warranty\" used herein"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  includes, but is not limited to, any warranty of the quality,"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  performance, merchantability and fitness for a particular purpose of"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  the program and the nonexistence of any infringement or violation of"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  any right of any third party."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Each user of the program will agree and understand, and be deemed to"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  have agreed and understood, that there is no warranty whatsoever for"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  the program and, accordingly, the entire risk arising from or"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  otherwise connected with the program is assumed by the user."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Therefore, neither ICOT, the copyright holder, or any other"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  organization that participated in or was otherwise related to the"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  development of the program and their respective officials, directors,"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  officers and other employees shall be held liable for any and all"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  damages, including, without limitation, general, special, incidental"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  and consequential damages, arising out of or otherwise in connection"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  with the use or inability to use the program or any product, material"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  or result produced or otherwise obtained by using the program,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  regardless of whether they have been advised of, or otherwise had"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  knowledge of, the possibility of such damages at any time during the"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  project or thereafter.  Each user will be deemed to have agreed to the"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  foregoing by his or her commencement of use of the program.  The term"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  \"use\" as used herein includes, but is not limited to, the use,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  modification, copying and distribution of the program and the"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  production of secondary products from the program."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  In the case where the program, whether in its original form or"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  modified, was distributed or delivered to or received by a user from"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  any person, organization or entity other than ICOT, unless it makes or"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  grants independently of ICOT any specific warranty to the user in"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  writing, such person, organization or entity, will also be exempted"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  from and not be held liable to the user for any such damages as noted"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  above as far as the program is concerned."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  ---------------COPYING.ipadic-----END----------------------------------"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "whneo97"
        },
        "content": "3. Lao Word Break Dictionary Data (laodict.txt)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Copyright (c) 2013 International Business Machines Corporation"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  and others. All Rights Reserved."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # Project: http://code.google.com/p/lao-dictionary/"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # Dictionary: http://lao-dictionary.googlecode.com/git/Lao-Dictionary.txt"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # License: http://lao-dictionary.googlecode.com/git/Lao-Dictionary-LICENSE.txt"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #              (copied below)"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  This file is derived from the above dictionary, with slight"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  modifications."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  ----------------------------------------------------------------------"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Copyright (C) 2013 Brian Eugene Wilson, Robert Martin Campbell."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  All rights reserved."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Redistribution and use in source and binary forms, with or without"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  modification,"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  are permitted provided that the following conditions are met:"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # Redistributions of source code must retain the above copyright notice, this"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  list of conditions and the following disclaimer. Redistributions in"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  binary form must reproduce the above copyright notice, this list of"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  conditions and the following disclaimer in the documentation and/or"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  other materials provided with the distribution."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # OF THE POSSIBILITY OF SUCH DAMAGE."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  --------------------------------------------------------------------------"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "whneo97"
        },
        "content": "4. Burmese Word Break Dictionary Data (burmesedict.txt)"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Copyright (c) 2014 International Business Machines Corporation"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  and others. All Rights Reserved."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  This list is part of a project hosted at:"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    github.com/kanyawtech/myanmar-karen-word-lists"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  --------------------------------------------------------------------------"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Copyright (c) 2013, LeRoy Benjamin Sharon"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  All rights reserved."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  Redistribution and use in source and binary forms, with or without"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  modification, are permitted provided that the following conditions"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  are met: Redistributions of source code must retain the above"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  copyright notice, this list of conditions and the following"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  disclaimer.  Redistributions in binary form must reproduce the"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  above copyright notice, this list of conditions and the following"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  disclaimer in the documentation and/or other materials provided"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  with the distribution."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    Neither the name Myanmar Karen Word Lists, nor the names of its"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    contributors may be used to endorse or promote products derived"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    from this software without specific prior written permission."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  SUCH DAMAGE."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #  --------------------------------------------------------------------------"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "whneo97"
        },
        "content": "5. Time Zone Database"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  ICU uses the public domain data and code derived from Time Zone"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Database for its time zone support. The ownership of the TZ database"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "whneo97"
        },
        "content": "is explained in BCP 175: Procedure for Maintaining the Time Zone"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Database section 7."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "whneo97"
        },
        "content": " # 7.  Database Ownership"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    The TZ database itself is not an IETF Contribution or an IETF"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    document.  Rather it is a pre-existing and regularly updated work"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    that is in the public domain, and is intended to remain in the"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    public domain.  Therefore, BCPs 78 [RFC5378] and 79 [RFC3979] do"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    not apply to the TZ Database or contributions that individuals make"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    to it.  Should any claims be made and substantiated against the TZ"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    Database, the organization that is providing the IANA"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    Considerations defined in this RFC, under the memorandum of"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    understanding with the IETF, currently ICANN, may act in accordance"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    with all competent court orders.  No ownership claims will be made"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    by ICANN or the IETF Trust on the database or the code.  Any person"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    making a contribution to the database or code waives all rights to"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "whneo97"
        },
        "content": " #    future claims in that contribution or in the TZ Database."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "whneo97"
        },
        "content": "6. Google double-conversion"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Copyright 2006-2011, the V8 project authors. All rights reserved."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Redistribution and use in source and binary forms, with or without"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modification, are permitted provided that the following conditions are"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "whneo97"
        },
        "content": "met:"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    * Redistributions of source code must retain the above copyright"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      notice, this list of conditions and the following disclaimer."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    * Redistributions in binary form must reproduce the above"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      copyright notice, this list of conditions and the following"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      disclaimer in the documentation and/or other materials provided"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      with the distribution."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    * Neither the name of Google Inc. nor the names of its"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      contributors may be used to endorse or promote products derived"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      from this software without specific prior written permission."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "whneo97"
        },
        "content": "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "whneo97"
        },
        "content": "LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "whneo97"
        },
        "content": "A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "whneo97"
        },
        "content": "OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "whneo97"
        },
        "content": "SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "whneo97"
        },
        "content": "LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "whneo97"
        },
        "content": "DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "whneo97"
        },
        "content": "THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "whneo97"
        },
        "content": "(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "whneo97"
        },
        "content": "OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      }
    ],
    "authorContributionMap": {
      "whneo97": 419
    }
  },
  {
    "path": "javafx-sdk-11.0.2/legal/javafx.web/libxml2.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "## xmlsoft.org: libxml2 v2.9.7"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### libxml2 License"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Permission is hereby granted, free of charge, to any person obtaining a copy of"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this software and associated documentation files (the \"Software\"), to deal in"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Software without restriction, including without limitation the rights to"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of the Software, and to permit persons to whom the Software is furnished to do"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "so, subject to the following conditions:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "The above copyright notice and this permission notice shall be included in all"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copies or substantial portions of the Software."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "SOFTWARE."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      }
    ],
    "authorContributionMap": {
      "whneo97": 23
    }
  },
  {
    "path": "javafx-sdk-11.0.2/legal/javafx.web/libxslt.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "## xmlsoft.org: libxslt v1.1.32"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### libxslt License"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Copyright (C) 1998-2012 Daniel Veillard.  All Rights Reserved."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Permission is hereby granted, free of charge, to any person obtaining a"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copy of this software and associated documentation files (the \"Software\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "to deal in the Software without restriction, including without limitation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the rights to use, copy, modify, merge, publish, distribute, sublicense,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and/or sell copies of the Software, and to permit persons to whom the"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Software is furnished to do so, subject to the following conditions:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "The above copyright notice and this permission notice shall be included"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "in all copies or substantial portions of the Software."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL BLFS"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      }
    ],
    "authorContributionMap": {
      "whneo97": 24
    }
  },
  {
    "path": "javafx-sdk-11.0.2/legal/javafx.web/webkit.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "## WebKit Open Source Project: WebKit v606.1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### WebKit Notice"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You are receiving a copy of WebKit in either source or"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "object code in the JavaFX runtime or JavaFX SDK. The terms of the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Oracle license do NOT apply to WebKit; it is"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "licensed under the following license, separately from the Oracle programs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you receive. If you do not wish to install this library, you may delete"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this library:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   - On Linux systems: delete $(JAVA_HOME)/lib/libjfxwebkit.so"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   - On Mac OS X systems: delete $(JAVA_HOME)/lib/libjfxwebkit.dylib"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   - On Windows systems: delete $(JAVA_HOME)\\bin\\jfxwebkit.dll"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "A copy of the Oracle modified WebKit library source code is located"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "in the following OpenJDK Mercurial repository:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   http://hg.openjdk.java.net/openjfx/jfx/rt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You can use Mercurial to clone the repository or you can browse the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "source using a web browser. The root directory of the WebKit source"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "code is here:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   rt/modules/javafx.web/src/main/native/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "### LGPL 2.1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                  GNU LESSER GENERAL PUBLIC LICENSE"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                       Version 2.1, February 1999"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": " Copyright (C) 1991, 1999 Free Software Foundation, Inc."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": " 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": " Everyone is permitted to copy and distribute verbatim copies"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": " of this license document, but changing it is not allowed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "[This is the first released version of the Lesser GPL.  It also counts"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": " as the successor of the GNU Library Public License, version 2, hence"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": " the version number 2.1.]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                            Preamble"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  The licenses for most software are designed to take away your"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "freedom to share and change it.  By contrast, the GNU General Public"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Licenses are intended to guarantee your freedom to share and change"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "free software--to make sure the software is free for all its users."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  This license, the Lesser General Public License, applies to some"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "specially designated software packages--typically libraries--of the"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Free Software Foundation and other authors who decide to use it.  You"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "can use it too, but we suggest you first think carefully about whether"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this license or the ordinary General Public License is the better"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "strategy to use in any particular case, based on the explanations below."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  When we speak of free software, we are referring to freedom of use,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "not price.  Our General Public Licenses are designed to make sure that"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you have the freedom to distribute copies of free software (and charge"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "for this service if you wish); that you receive source code or can get"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it if you want it; that you can change the software and use pieces of"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it in new free programs; and that you are informed that you can do"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "these things."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  To protect your rights, we need to make restrictions that forbid"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distributors to deny you these rights or to ask you to surrender these"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rights.  These restrictions translate to certain responsibilities for"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you if you distribute copies of the library or if you modify it."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  For example, if you distribute copies of the library, whether gratis"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "or for a fee, you must give the recipients all the rights that we gave"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you.  You must make sure that they, too, receive or can get the source"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "code.  If you link other code with the library, you must provide"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "complete object files to the recipients, so that they can relink them"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "with the library after making changes to the library and recompiling"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it.  And you must show them these terms so they know their rights."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  We protect your rights with a two-step method: (1) we copyright the"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library, and (2) we offer you this license, which gives you legal"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "permission to copy, distribute and/or modify the library."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  To protect each distributor, we want to make it very clear that"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "there is no warranty for the free library.  Also, if the library is"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modified by someone else and passed on, the recipients should know"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that what they have is not the original version, so that the original"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "author\u0027s reputation will not be affected by problems that might be"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "introduced by others."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Finally, software patents pose a constant threat to the existence of"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "any free program.  We wish to make sure that a company cannot"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "effectively restrict the users of a free program by obtaining a"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "restrictive license from a patent holder.  Therefore, we insist that"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "any patent license obtained for a version of the library must be"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": "consistent with the full freedom of use specified in this license."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Most GNU software, including some libraries, is covered by the"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": "ordinary GNU General Public License.  This license, the GNU Lesser"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "General Public License, applies to certain designated libraries, and"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "is quite different from the ordinary General Public License.  We use"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this license for certain libraries in order to permit linking those"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "libraries into non-free programs."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  When a program is linked with a library, whether statically or using"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a shared library, the combination of the two is legally speaking a"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": "combined work, a derivative of the original library.  The ordinary"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "General Public License therefore permits such linking only if the"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "entire combination fits its criteria of freedom.  The Lesser General"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Public License permits more lax criteria for linking other code with"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the library."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  We call this license the \"Lesser\" General Public License because it"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": "does Less to protect the user\u0027s freedom than the ordinary General"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Public License.  It also provides other free software developers Less"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of an advantage over competing non-free programs.  These disadvantages"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "are the reason we use the ordinary General Public License for many"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "libraries.  However, the Lesser license provides advantages in certain"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "special circumstances."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  For example, on rare occasions, there may be a special need to"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": "encourage the widest possible use of a certain library, so that it becomes"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a de-facto standard.  To achieve this, non-free programs must be"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "allowed to use the library.  A more frequent case is that a free"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library does the same job as widely used non-free libraries.  In this"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": "case, there is little to gain by limiting the free library to free"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "software only, so we use the Lesser General Public License."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  In other cases, permission to use a particular library in non-free"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": "programs enables a greater number of people to use a large body of"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": "free software.  For example, permission to use the GNU C Library in"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "non-free programs enables many more people to use the whole GNU"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "operating system, as well as its variant, the GNU/Linux operating"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": "system."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Although the Lesser General Public License is Less protective of the"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "whneo97"
        },
        "content": "users\u0027 freedom, it does ensure that the user of a program that is"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "whneo97"
        },
        "content": "linked with the Library has the freedom and the wherewithal to run"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that program using a modified version of the Library."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  The precise terms and conditions for copying, distribution and"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modification follow.  Pay close attention to the difference between a"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"work based on the library\" and a \"work that uses the library\".  The"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "whneo97"
        },
        "content": "former contains code derived from the library, whereas the latter must"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "whneo97"
        },
        "content": "be combined with the library in order to run."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                  GNU LESSER GENERAL PUBLIC LICENSE"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  0. This License Agreement applies to any software library or other"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "whneo97"
        },
        "content": "program which contains a notice placed by the copyright holder or"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "whneo97"
        },
        "content": "other authorized party saying it may be distributed under the terms of"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this Lesser General Public License (also called \"this License\")."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Each licensee is addressed as \"you\"."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  A \"library\" means a collection of software functions and/or data"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "whneo97"
        },
        "content": "prepared so as to be conveniently linked with application programs"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "whneo97"
        },
        "content": "(which use some of those functions and data) to form executables."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  The \"Library\", below, refers to any such software library or work"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "whneo97"
        },
        "content": "which has been distributed under these terms.  A \"work based on the"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library\" means either the Library or any derivative work under"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copyright law: that is to say, a work containing the Library or a"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "whneo97"
        },
        "content": "portion of it, either verbatim or with modifications and/or translated"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "whneo97"
        },
        "content": "straightforwardly into another language.  (Hereinafter, translation is"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "whneo97"
        },
        "content": "included without limitation in the term \"modification\".)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  \"Source code\" for a work means the preferred form of the work for"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "whneo97"
        },
        "content": "making modifications to it.  For a library, complete source code means"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all the source code for all modules it contains, plus any associated"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "whneo97"
        },
        "content": "interface definition files, plus the scripts used to control compilation"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and installation of the library."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Activities other than copying, distribution and modification are not"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "whneo97"
        },
        "content": "covered by this License; they are outside its scope.  The act of"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "whneo97"
        },
        "content": "running a program using the Library is not restricted, and output from"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "whneo97"
        },
        "content": "such a program is covered only if its contents constitute a work based"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "whneo97"
        },
        "content": "on the Library (independent of the use of the Library in a tool for"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "whneo97"
        },
        "content": "writing it).  Whether that is true depends on what the Library does"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and what the program that uses the Library does."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  1. You may copy and distribute verbatim copies of the Library\u0027s"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "whneo97"
        },
        "content": "complete source code as you receive it, in any medium, provided that"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "whneo97"
        },
        "content": "you conspicuously and appropriately publish on each copy an"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "whneo97"
        },
        "content": "appropriate copyright notice and disclaimer of warranty; keep intact"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all the notices that refer to this License and to the absence of any"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "whneo97"
        },
        "content": "warranty; and distribute a copy of this License along with the"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  You may charge a fee for the physical act of transferring a copy,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and you may at your option offer warranty protection in exchange for a"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fee."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  2. You may modify your copy or copies of the Library or any portion"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of it, thus forming a work based on the Library, and copy and"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute such modifications or work under the terms of Section 1"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "whneo97"
        },
        "content": "above, provided that you also meet all of these conditions:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a) The modified work must itself be a software library."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    b) You must cause the files modified to carry prominent notices"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    stating that you changed the files and the date of any change."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    c) You must cause the whole of the work to be licensed at no"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    charge to all third parties under the terms of this License."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    d) If a facility in the modified Library refers to a function or a"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    table of data to be supplied by an application program that uses"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    the facility, other than as an argument passed when the facility"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    is invoked, then you must make a good faith effort to ensure that,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    in the event an application does not supply such function or"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    table, the facility still operates, and performs whatever part of"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    its purpose remains meaningful."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    (For example, a function in a library to compute square roots has"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a purpose that is entirely well-defined independent of the"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    application.  Therefore, Subsection 2d requires that any"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    application-supplied function or table used by this function must"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    be optional: if the application does not supply it, the square"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    root function must still compute square roots.)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "whneo97"
        },
        "content": "These requirements apply to the modified work as a whole.  If"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "whneo97"
        },
        "content": "identifiable sections of that work are not derived from the Library,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and can be reasonably considered independent and separate works in"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "whneo97"
        },
        "content": "themselves, then this License, and its terms, do not apply to those"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "whneo97"
        },
        "content": "sections when you distribute them as separate works.  But when you"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the same sections as part of a whole which is a work based"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "whneo97"
        },
        "content": "on the Library, the distribution of the whole must be on the terms of"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this License, whose permissions for other licensees extend to the"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "whneo97"
        },
        "content": "entire whole, and thus to each and every part regardless of who wrote"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Thus, it is not the intent of this section to claim rights or contest"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "whneo97"
        },
        "content": "your rights to work written entirely by you; rather, the intent is to"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "whneo97"
        },
        "content": "exercise the right to control the distribution of derivative or"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "whneo97"
        },
        "content": "collective works based on the Library."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "whneo97"
        },
        "content": "In addition, mere aggregation of another work not based on the Library"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "whneo97"
        },
        "content": "with the Library (or with a work based on the Library) on a volume of"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "whneo97"
        },
        "content": "a storage or distribution medium does not bring the other work under"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the scope of this License."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  3. You may opt to apply the terms of the ordinary GNU General Public"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "whneo97"
        },
        "content": "License instead of this License to a given copy of the Library.  To do"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this, you must alter all the notices that refer to this License, so"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that they refer to the ordinary GNU General Public License, version 2,"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "whneo97"
        },
        "content": "instead of to this License.  (If a newer version than version 2 of the"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "whneo97"
        },
        "content": "ordinary GNU General Public License has appeared, then you can specify"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that version instead if you wish.)  Do not make any other change in"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "whneo97"
        },
        "content": "these notices."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Once this change is made in a given copy, it is irreversible for"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that copy, so the ordinary GNU General Public License applies to all"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "whneo97"
        },
        "content": "subsequent copies and derivative works made from that copy."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  This option is useful when you wish to copy part of the code of"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library into a program that is not a library."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  4. You may copy and distribute the Library (or a portion or"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "whneo97"
        },
        "content": "derivative of it, under Section 2) in object code or executable form"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "whneo97"
        },
        "content": "under the terms of Sections 1 and 2 above provided that you accompany"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "whneo97"
        },
        "content": "it with the complete corresponding machine-readable source code, which"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "whneo97"
        },
        "content": "must be distributed under the terms of Sections 1 and 2 above on a"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "whneo97"
        },
        "content": "medium customarily used for software interchange."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  If distribution of object code is made by offering access to copy"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "whneo97"
        },
        "content": "from a designated place, then offering equivalent access to copy the"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "whneo97"
        },
        "content": "source code from the same place satisfies the requirement to"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the source code, even though third parties are not"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "whneo97"
        },
        "content": "compelled to copy the source along with the object code."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  5. A program that contains no derivative of any portion of the"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library, but is designed to work with the Library by being compiled or"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "whneo97"
        },
        "content": "linked with it, is called a \"work that uses the Library\".  Such a"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "whneo97"
        },
        "content": "work, in isolation, is not a derivative work of the Library, and"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "whneo97"
        },
        "content": "therefore falls outside the scope of this License."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  However, linking a \"work that uses the Library\" with the Library"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "whneo97"
        },
        "content": "creates an executable that is a derivative of the Library (because it"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "whneo97"
        },
        "content": "contains portions of the Library), rather than a \"work that uses the"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library\".  The executable is therefore covered by this License."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Section 6 states terms for distribution of such executables."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  When a \"work that uses the Library\" uses material from a header file"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "whneo97"
        },
        "content": "that is part of the Library, the object code for the work may be a"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "whneo97"
        },
        "content": "derivative work of the Library even though the source code is not."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Whether this is true is especially significant if the work can be"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "whneo97"
        },
        "content": "linked without the Library, or if the work is itself a library.  The"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "whneo97"
        },
        "content": "threshold for this to be true is not precisely defined by law."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  If such an object file uses only numerical parameters, data"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "whneo97"
        },
        "content": "structure layouts and accessors, and small macros and small inline"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "whneo97"
        },
        "content": "functions (ten lines or less in length), then the use of the object"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "whneo97"
        },
        "content": "file is unrestricted, regardless of whether it is legally a derivative"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "whneo97"
        },
        "content": "work.  (Executables containing this object code plus portions of the"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library will still fall under Section 6.)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Otherwise, if the work is a derivative of the Library, you may"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the object code for the work under the terms of Section 6."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Any executables containing that work also fall under Section 6,"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "whneo97"
        },
        "content": "whether or not they are linked directly with the Library itself."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  6. As an exception to the Sections above, you may also combine or"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "whneo97"
        },
        "content": "link a \"work that uses the Library\" with the Library to produce a"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "whneo97"
        },
        "content": "work containing portions of the Library, and distribute that work"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "whneo97"
        },
        "content": "under terms of your choice, provided that the terms permit"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modification of the work for the customer\u0027s own use and reverse"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "whneo97"
        },
        "content": "engineering for debugging such modifications."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  You must give prominent notice with each copy of the work that the"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library is used in it and that the Library and its use are covered by"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this License.  You must supply a copy of this License.  If the work"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "whneo97"
        },
        "content": "during execution displays copyright notices, you must include the"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copyright notice for the Library among them, as well as a reference"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "whneo97"
        },
        "content": "directing the user to the copy of this License.  Also, you must do one"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of these things:"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a) Accompany the work with the complete corresponding"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    machine-readable source code for the Library including whatever"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    changes were used in the work (which must be distributed under"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Sections 1 and 2 above); and, if the work is an executable linked"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    with the Library, with the complete machine-readable \"work that"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    uses the Library\", as object code and/or source code, so that the"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    user can modify the Library and then relink to produce a modified"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    executable containing the modified Library.  (It is understood"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    that the user who changes the contents of definitions files in the"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Library will not necessarily be able to recompile the application"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    to use the modified definitions.)"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    b) Use a suitable shared library mechanism for linking with the"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Library.  A suitable mechanism is one that (1) uses at run time a"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    copy of the library already present on the user\u0027s computer system,"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    rather than copying library functions into the executable, and (2)"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    will operate properly with a modified version of the library, if"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    the user installs one, as long as the modified version is"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    interface-compatible with the version that the work was made with."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    c) Accompany the work with a written offer, valid for at"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    least three years, to give the same user the materials"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    specified in Subsection 6a, above, for a charge no more"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    than the cost of performing this distribution."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    d) If distribution of the work is made by offering access to copy"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    from a designated place, offer equivalent access to copy the above"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    specified materials from the same place."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    e) Verify that the user has already received a copy of these"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    materials or that you have already sent this user a copy."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  For an executable, the required form of the \"work that uses the"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library\" must include any data and utility programs needed for"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "whneo97"
        },
        "content": "reproducing the executable from it.  However, as a special exception,"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the materials to be distributed need not include anything that is"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "whneo97"
        },
        "content": "normally distributed (in either source or binary form) with the major"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "whneo97"
        },
        "content": "components (compiler, kernel, and so on) of the operating system on"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "whneo97"
        },
        "content": "which the executable runs, unless that component itself accompanies"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the executable."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  It may happen that this requirement contradicts the license"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "whneo97"
        },
        "content": "restrictions of other proprietary libraries that do not normally"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "whneo97"
        },
        "content": "accompany the operating system.  Such a contradiction means you cannot"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "whneo97"
        },
        "content": "use both them and the Library together in an executable that you"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  7. You may place library facilities that are a work based on the"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library side-by-side in a single library together with other library"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "whneo97"
        },
        "content": "facilities not covered by this License, and distribute such a combined"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "whneo97"
        },
        "content": "library, provided that the separate distribution of the work based on"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library and of the other library facilities is otherwise"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "whneo97"
        },
        "content": "permitted, and provided that you do these two things:"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    a) Accompany the combined library with a copy of the same work"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    based on the Library, uncombined with any other library"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    facilities.  This must be distributed under the terms of the"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Sections above."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    b) Give prominent notice with the combined library of the fact"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    that part of it is a work based on the Library, and explaining"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    where to find the accompanying uncombined form of the same work."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  8. You may not copy, modify, sublicense, link with, or distribute"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library except as expressly provided under this License.  Any"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "whneo97"
        },
        "content": "attempt otherwise to copy, modify, sublicense, link with, or"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the Library is void, and will automatically terminate your"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rights under this License.  However, parties who have received copies,"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "whneo97"
        },
        "content": "or rights, from you under this License will not have their licenses"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "whneo97"
        },
        "content": "terminated so long as such parties remain in full compliance."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  9. You are not required to accept this License, since you have not"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "whneo97"
        },
        "content": "signed it.  However, nothing else grants you permission to modify or"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute the Library or its derivative works.  These actions are"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "whneo97"
        },
        "content": "prohibited by law if you do not accept this License.  Therefore, by"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "whneo97"
        },
        "content": "modifying or distributing the Library (or any work based on the"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library), you indicate your acceptance of this License to do so, and"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all its terms and conditions for copying, distributing or modifying"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Library or works based on it."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  10. Each time you redistribute the Library (or any work based on the"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Library), the recipient automatically receives a license from the"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "whneo97"
        },
        "content": "original licensor to copy, distribute, link with or modify the Library"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "whneo97"
        },
        "content": "subject to these terms and conditions.  You may not impose any further"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "whneo97"
        },
        "content": "restrictions on the recipients\u0027 exercise of the rights granted herein."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You are not responsible for enforcing compliance by third parties with"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "whneo97"
        },
        "content": "this License."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  11. If, as a consequence of a court judgment or allegation of patent"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "whneo97"
        },
        "content": "infringement or for any other reason (not limited to patent issues),"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "whneo97"
        },
        "content": "conditions are imposed on you (whether by court order, agreement or"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "whneo97"
        },
        "content": "otherwise) that contradict the conditions of this License, they do not"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "whneo97"
        },
        "content": "excuse you from the conditions of this License.  If you cannot"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "whneo97"
        },
        "content": "distribute so as to satisfy simultaneously your obligations under this"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "whneo97"
        },
        "content": "License and any other pertinent obligations, then as a consequence you"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "whneo97"
        },
        "content": "may not distribute the Library at all.  For example, if a patent"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "whneo97"
        },
        "content": "license would not permit royalty-free redistribution of the Library by"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "whneo97"
        },
        "content": "all those who receive copies directly or indirectly through you, then"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the only way you could satisfy both it and this License would be to"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "whneo97"
        },
        "content": "refrain entirely from distribution of the Library."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "whneo97"
        },
        "content": "If any portion of this section is held invalid or unenforceable under any"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "whneo97"
        },
        "content": "particular circumstance, the balance of the section is intended to apply,"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and the section as a whole is intended to apply in other circumstances."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "whneo97"
        },
        "content": "It is not the purpose of this section to induce you to infringe any"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "whneo97"
        },
        "content": "patents or other property right claims or to contest validity of any"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "whneo97"
        },
        "content": "such claims; this section has the sole purpose of protecting the"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "whneo97"
        },
        "content": "integrity of the free software distribution system which is"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "whneo97"
        },
        "content": "implemented by public license practices.  Many people have made"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "whneo97"
        },
        "content": "generous contributions to the wide range of software distributed"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "whneo97"
        },
        "content": "through that system in reliance on consistent application of that"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "whneo97"
        },
        "content": "system; it is up to the author/donor to decide if he or she is willing"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "whneo97"
        },
        "content": "to distribute software through any other system and a licensee cannot"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "whneo97"
        },
        "content": "impose that choice."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "whneo97"
        },
        "content": "This section is intended to make thoroughly clear what is believed to"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "whneo97"
        },
        "content": "be a consequence of the rest of this License."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  12. If the distribution and/or use of the Library is restricted in"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "whneo97"
        },
        "content": "certain countries either by patents or by copyrighted interfaces, the"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "whneo97"
        },
        "content": "original copyright holder who places the Library under this License may add"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "whneo97"
        },
        "content": "an explicit geographical distribution limitation excluding those countries,"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "whneo97"
        },
        "content": "so that distribution is permitted only in or among countries not thus"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "whneo97"
        },
        "content": "excluded.  In such case, this License incorporates the limitation as if"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "whneo97"
        },
        "content": "written in the body of this License."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  13. The Free Software Foundation may publish revised and/or new"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "whneo97"
        },
        "content": "versions of the Lesser General Public License from time to time."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Such new versions will be similar in spirit to the present version,"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "whneo97"
        },
        "content": "but may differ in detail to address new problems or concerns."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Each version is given a distinguishing version number.  If the Library"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "whneo97"
        },
        "content": "specifies a version number of this License which applies to it and"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"any later version\", you have the option of following the terms and"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "whneo97"
        },
        "content": "conditions either of that version or of any later version published by"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Free Software Foundation.  If the Library does not specify a"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "whneo97"
        },
        "content": "license version number, you may choose any version ever published by"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "whneo97"
        },
        "content": "the Free Software Foundation."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  14. If you wish to incorporate parts of the Library into other free"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "whneo97"
        },
        "content": "programs whose distribution conditions are incompatible with these,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "whneo97"
        },
        "content": "write to the author to ask for permission.  For software which is"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "whneo97"
        },
        "content": "copyrighted by the Free Software Foundation, write to the Free"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Software Foundation; we sometimes make exceptions for this.  Our"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "whneo97"
        },
        "content": "decision will be guided by the two goals of preserving the free status"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "whneo97"
        },
        "content": "of all derivatives of our free software and of promoting the sharing"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "whneo97"
        },
        "content": "and reuse of software generally."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                            NO WARRANTY"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "whneo97"
        },
        "content": "WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "whneo97"
        },
        "content": "EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "whneo97"
        },
        "content": "OTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "whneo97"
        },
        "content": "KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "whneo97"
        },
        "content": "IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "whneo97"
        },
        "content": "PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "whneo97"
        },
        "content": "LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "whneo97"
        },
        "content": "THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "whneo97"
        },
        "content": "WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "whneo97"
        },
        "content": "AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "whneo97"
        },
        "content": "FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "whneo97"
        },
        "content": "CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "whneo97"
        },
        "content": "LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "whneo97"
        },
        "content": "RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "whneo97"
        },
        "content": "FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "whneo97"
        },
        "content": "SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "whneo97"
        },
        "content": "DAMAGES."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                     END OF TERMS AND CONDITIONS"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\f"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "whneo97"
        },
        "content": "           How to Apply These Terms to Your New Libraries"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  If you develop a new library, and you want it to be of the greatest"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "whneo97"
        },
        "content": "possible use to the public, we recommend making it free software that"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "whneo97"
        },
        "content": "everyone can redistribute and change.  You can do so by permitting"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "whneo97"
        },
        "content": "redistribution under these terms (or, alternatively, under the terms of the"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "whneo97"
        },
        "content": "ordinary General Public License)."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  To apply these terms, attach the following notices to the library.  It is"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "whneo97"
        },
        "content": "safest to attach them to the start of each source file to most effectively"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "whneo97"
        },
        "content": "convey the exclusion of warranty; and each file should have at least the"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"copyright\" line and a pointer to where the full notice is found."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    \u003cone line to give the library\u0027s name and a brief idea of what it does.\u003e"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Copyright (C) \u003cyear\u003e  \u003cname of author\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    This library is free software; you can redistribute it and/or"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    modify it under the terms of the GNU Lesser General Public"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    License as published by the Free Software Foundation; either"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    version 2.1 of the License, or (at your option) any later version."
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    This library is distributed in the hope that it will be useful,"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    but WITHOUT ANY WARRANTY; without even the implied warranty of"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Lesser General Public License for more details."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    You should have received a copy of the GNU Lesser General Public"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    License along with this library; if not, write to the Free Software"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Also add information on how to contact you by electronic and paper mail."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You should also get your employer (if you work as a programmer) or your"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "whneo97"
        },
        "content": "school, if any, to sign a \"copyright disclaimer\" for the library, if"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "whneo97"
        },
        "content": "necessary.  Here is a sample; alter the names:"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Yoyodyne, Inc., hereby disclaims all copyright interest in the"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  library `Frob\u0027 (a library for tweaking knobs) written by James Random Hacker."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  \u003csignature of Ty Coon\u003e, 1 April 1990"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "whneo97"
        },
        "content": "  Ty Coon, President of Vice"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "whneo97"
        },
        "content": "That\u0027s all there is to it!"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/pre\u003e"
      }
    ],
    "authorContributionMap": {
      "whneo97": 533
    }
  },
  {
    "path": "src/main/java/seedu/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.Duke;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.ui.MainWindow;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * A GUI for seedu.duke.model.Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Start method called to start the Duke program by building the necessary JavaFx components."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param stage A Stage taken in where the GUI of Duke program is run."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            scene.getStylesheets().addAll(this.getClass().getResource(\"/view/style.css\").toExternalForm());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            stage.setTitle(\"Duke V2.0\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/commons/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a DukeException object that extends the Exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of DukeException that stores the error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Takes in and stores the display message for users."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param message Message that indicates to users details regarding the exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of DukeException that stores both the error message and cause."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Takes in and stores the display message and a Throwable cause for users."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param message Message that indicates to users details regarding the exception."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param cause Throwable cause that chains this exception to the exception (or other Throwable)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *              that gave rise to it."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Command object that adds Tasks into the TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Contains a method that executes commands by adding tasks into the TaskLst."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Stores information on the task to be created, so the task can be created when the execute method is"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * called by a client of this class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String[] strArr;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String taskString;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private DateAndTime dateAndTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /** Creates an instance of AddCommand."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores to attributes of AddCommand relevant information required to create an AddCommand."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param command String representation of a single-word command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString String representation of task description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param dateAndTime DateAndTime object storing the date and times relevant to the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *                    If the task does not require any date or time, null may be passed in as an argument."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public AddCommand(String command, String taskString, DateAndTime dateAndTime) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskString \u003d taskString;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /** Executes an AddCommand object using information stored in instance attributes."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Modifies a given TaskList by adding the task defined by its attributes to it."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Saves the updated TaskList to the given Storage."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Displays a message indicating successful addition after addition process has been completed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList to which a given task is to be added by this command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param ui Ui with methods that are called to display a message upon successful addition of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param storage Storage that contains saved String representation of the given TaskList and is to be modified"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *                upon successful addition of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException if execution of the command is unsuccessful."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Todo todo \u003d new Todo(taskString);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ui.showAddedMessage(todo.addedMessage(tasks));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Deadline deadline \u003d new Deadline(taskString, dateAndTime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ui.showAddedMessage(deadline.addedMessage(tasks));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Event event \u003d new Event(taskString, dateAndTime);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ui.showAddedMessage(event.addedMessage(tasks));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            storage.save(tasks, ui);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw ex;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Execution of command unsuccessful.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 73
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines an abstract Command class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Contains an executable method that all extensions of Command must include."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Contains a method defines whether or not the command should cause the program to exit."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /** Executes a Command object using information stored in instance attributes."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Modifies a given Tasklist and Storage based on implementation of concrete class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * May possibly display a message indicating successful execution after process is completed, depending on"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * implementation of concrete class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList to which a given task is to be modified by this command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param ui Ui with methods that are called to display a message upon successful exeuction of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param storage Storage that contains saved String representation of the given TaskList and is to be modified"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *                upon successful execution of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException if execution of the command is unsuccessful."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns whether or not the Command instructs the program to exit."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Defines that a command causes the program to continue running unless overridden."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return A boolean representing whether or not the Command instructs the program to exit."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.validation.Validation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Command object that removes Tasks from the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Contains a method that executes commands by removing tasks from the TaskLst."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Stores information on the task to be removed, so the task can be removed when the execute method is"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * called by a client of this class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String taskString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /** Creates an instance of DeleteCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString String representation of task description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DeleteCommand(String taskString) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskString \u003d taskString.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /** Executes a DeleteCommand object using information stored in instance attributes."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Modifies a given TaskList by delete the task defined by its attributes to it."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Saves the updated TaskList to the given Storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Displays a message indicating successful removal after removal process has been completed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList to which a given task is to be removed by this command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param ui Ui with methods that are called to display a message upon successful removal of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param storage Storage that contains saved String representation of the given TaskList and is to be modified"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *                upon successful removal of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException if execution of the command is unsuccessful."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            int i \u003d Validation.getValidatedListIndex(tasks, taskString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            tasks.remove(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ui.showDeletedMessage(task.deletedMessage(tasks));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            storage.save(tasks, ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw ex;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Execution of command unsuccessful.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 51
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.validation.Validation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Command object that marks Tasks in the TaskList as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Contains a method that executes commands by marking tasks in the TaskLst as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Stores information on the task to be marked as done, so the task can be marked as done when the execute method is"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * called by a client of this class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String taskString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /** Creates an instance of DoneCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString String representation of task description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DoneCommand(String taskString) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskString \u003d taskString.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /** Executes a DoneCommand object using information stored in instance attributes."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Modifies a given TaskList by marking the task defined by its attributes as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Saves the updated TaskList to the given Storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Displays a message indicating successful marking after marking process has been completed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList to which a given task is to be marked as sdone by this command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param ui Ui with methods that are called to display a message upon successful marking of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param storage Storage that contains saved String representation of the given TaskList and is to be modified"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *                upon successful marking of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException if execution of the command is unsuccessful."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            int i \u003d Validation.getValidatedListIndex(tasks, taskString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            task.setIsDone(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ui.showDoneMessage(task.doneMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            storage.save(tasks, ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw ex;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Execution of command unsuccessful.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 51
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Command object that instructs the program to exit."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /** Executes an ExitCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Displays a message indicating exiting of the program before the program exits."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList that was being used by a client of this command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param ui Ui with methods that are called to display a message before the program exits."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param storage Storage that contains saved String representation of the given TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns information that the ExitCommand instructs the program to exit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Defines that the ExitCommand causes the program to exit."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return A boolean representing that the ExitCommand instructs the program to exit."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Command object that lists out all Tasks in the TaskList to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    String taskString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of FindCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores to attributes of FindCommand relevant search information required to create a FindCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString String representation of search description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public FindCommand(String taskString) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskString \u003d taskString;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /** Executes a FindCommand object using information stored in instance attributes."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Displays a message that shows the String representation of the TaskList containing search results when called."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList that was being used by a client of this command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param ui Ui with methods that are called to display a message showing the String representation of the"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *           given TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param storage Storage that contains saved String representation of the given TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ui.showSearchResults(tasks.find(taskString));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Command object that lists out command definitions specified."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Instructs users on how to use commands of this program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    // A list of constant definitions and usage instructions for all commands known to the program that may be of"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    // help to a user who requests for these definitions."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static final String TODOHELP \u003d \"todo: Adds a todo into the tasklist.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"Requires input to be in the format \\\u0027todo [task]\\\u0027.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static final String DEADLINEHELP \u003d \"deadline: Adds a deadline into the tasklist.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"Requires input to be in the format \\\u0027deadline [task] /by [DD/MM/YYYY]\\\u0027, \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"or \\\u0027deadline [task] /by [DD/MM/YYYY] [HHMM]\\\u0027, where dates and times (24-hour clock) are valid.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static final String EVENTHELP \u003d \"event: Adds an event into the tasklist.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"Requires input to be in the format \\\u0027event [task] /at [DD/MM/YYYY] [HHMM]\\\u0027, \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"where dates and times (24-hour clock) are valid.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static final String DONEHELP \u003d \"done: Marks a task in the tasklist as done.\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"Requires input to be in the format \\\u0027done [number representing task in tasklist]\\\u0027.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static final String DELETEHELP \u003d \"delete: Deletes a task from the tasklist.\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"Requires input to be in the format \\\u0027delete [number representing task in tasklist]\\\u0027.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static final String LISTHELP \u003d \"list: Lists all tasks in the tasklist stored.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"Requires input to be in the format \\\u0027list\\\u0027.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static final String FINDHELP \u003d \"find: Finds tasks in the tasklist given keywords.\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"Requires input to be in the format \\\u0027find [keyword]\\\u0027.\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"Keywords could be name of tasks, substrings of it, type of tasks, date in DD/MM/YYYY format, \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"time in HHMM format, or whether or not the task is done in the form \\\u0027done\\\u0027, \\\u0027not done\\\u0027, \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            +  \"or \\\u0027undone\\\u0027.\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"Keywords are not case-sensitive.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static final String BYEHELP \u003d \"bye: Instructs the program to exit.\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"Requires input to be in the format \\\u0027bye\\\u0027.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static final String HELPHELP \u003d \"help: Shows a list of specified commands or all known commands so far.\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"Requires input to be in the format \\\u0027help\\\u0027 or \\\u0027help [command1] [command2] etc.\\\u0027.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static final String UNKNOWN \u003d \"Unknown command.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static final String FURTHERPROMPT \u003d \"Can\u0027t find what you\u0027re looking for?\\nInput \\\u0027help\\\u0027 \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"for the full list of commands known to the this program and information on their usage.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String taskString;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of HelpCommand."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores to attributes of HelpCommand relevant search information required to create a HelpCommand."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString String representation of keywords user needs help with."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public HelpCommand(String taskString) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskString \u003d taskString;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a String containing compiled definitions for commands requested by a client that calls this method."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Takes in variable number of arguments depending on the number of commands required by the user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param requestedCommandList A list of Strings containing possible commands the user needs help with."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String containing compiled definitions for commands the user needs help with."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String getHelpDefinitions(String...requestedCommandList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String out \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        for (String requestedCommand : requestedCommandList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (requestedCommand.equals(\"todo\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                out +\u003d TODOHELP;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (requestedCommand.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                out +\u003d DEADLINEHELP;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (requestedCommand.equals(\"event\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                out +\u003d EVENTHELP;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (requestedCommand.equals(\"done\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                out +\u003d DONEHELP;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (requestedCommand.equals(\"delete\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                out +\u003d DELETEHELP;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (requestedCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                out +\u003d LISTHELP;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (requestedCommand.equals(\"find\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                out +\u003d FINDHELP;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (requestedCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                out +\u003d BYEHELP;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (requestedCommand.equals(\"help\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                out +\u003d HELPHELP;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                out +\u003d requestedCommand + \": \" + UNKNOWN;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            out +\u003d \"\\n\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return out.trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /** Executes a HelpCommand object using information stored in instance attributes."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Displays a message that shows all help information requested"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList that was being used by a client of this command."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param ui Ui with methods that are called to display a message showing all command definitions requested."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param storage Storage that contains saved String representation of the given TaskList."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String helpDefinitions \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (taskString.equals(\"\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            helpDefinitions \u003d getHelpDefinitions(\"todo\", \"deadline\", \"event\", \"done\", \"delete\","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    \"list\", \"find\", \"bye\", \"help\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            helpDefinitions \u003d getHelpDefinitions(taskString.split(\" \")) + \"\\n\\n\" + FURTHERPROMPT;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ui.showHelpMessage(helpDefinitions);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 107
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Command object that lists out all Tasks in the TaskList to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /** Executes a ListCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Displays a message that shows the String representation of the given TaskList when called."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList that was being used by a client of this command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param ui Ui with methods that are called to display a message showing the String representation of the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *           given tasklist."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param storage Storage that contains saved String representation of the given TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.validation.DeadlineValidation;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.validation.EventValidation;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.validation.LoadValidation;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.validation.Validation;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Parse object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Contains methods to parse contents in storage files and user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a Command object given a full line of text."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param fullCommand Line of instructions presumably from user input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Command object based on information extracted from full command given."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If full command taken in is invalid and cannot be used to return any Command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Scanner sc \u003d new Scanner(fullCommand.trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (!sc.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyCommand(\"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String command \u003d sc.next();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String taskString \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            taskString \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new AddCommand(\"todo\", taskString, null);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            String[] descriptionAndDateTime \u003d DeadlineValidation.getValidatedDescriptionAndDateTime(taskString);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            taskString \u003d descriptionAndDateTime[0];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            String dateTimeString \u003d descriptionAndDateTime[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            DateAndTime dateAndTime \u003d DeadlineValidation.getValidatedDateAndTime(dateTimeString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new AddCommand(\"deadline\", taskString, dateAndTime);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            String[] descriptionAndDateTime \u003d EventValidation.getValidatedDescriptionAndDateTime(taskString);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            taskString \u003d descriptionAndDateTime[0];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            String dateTimeString \u003d descriptionAndDateTime[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            DateAndTime dateAndTime \u003d EventValidation.getValidatedDateAndTime(dateTimeString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new AddCommand(\"event\", taskString, dateAndTime);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new FindCommand(taskString);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new DoneCommand(taskString);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new DeleteCommand(taskString);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"help\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new HelpCommand(taskString);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyCommand(command);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a TaskList of Tasks given a Storage containing the storage-format String representation of a TaskList."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates Tasks based on tokens from the Storage and adds them to the TaskList to be returned"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param storage Storage containing the storage-format String representation of a TaskList to be parsed."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return TaskList of Tasks extracted from the given Storage."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If there are invalid tokens in the Storage that cannot be converted to Tasks or"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *                       adding the Tasks into the TaskList is unsuccessful."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static TaskList parse(Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            File file \u003d new File(storage.getFilePath());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                String[] arr \u003d sc.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                String type \u003d LoadValidation.getValidatedTaskType(arr[0].trim());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                LoadValidation.ensureValidNumberOfTokens(type, arr);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                boolean isDone \u003d LoadValidation.getValidatedDoneStatus(arr[1].trim()) \u003d\u003d 1 ? true : false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                String taskString \u003d arr[2].trim();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                DateAndTime dateAndTime \u003d null;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Validation.ensureNonEmptyTaskString(type, taskString);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    dateAndTime \u003d EventValidation.getValidatedDateAndTime(arr[3]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    taskList.add(new Event(taskString, dateAndTime, isDone));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    dateAndTime \u003d DeadlineValidation.getValidatedDateAndTime(arr[3]);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    taskList.add(new Deadline(taskString, dateAndTime, isDone));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    taskList.add(new Todo(taskString, isDone));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"We cannot find your file.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 131
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/validation/DeadlineValidation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a DeadlineValidation class containing static methods."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Validates Strings parsed to create a Deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Inherits methods from Validation class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DeadlineValidation extends Validation {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a String array of two elements containing task description and date / time respectively."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param descriptionAndDateTimeString String in the form [task description] [\" /by \"] [date and optional time]."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String array of two elements containing task description and date / time respectively."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If the format of the String entered is invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static String[] getValidatedDescriptionAndDateTime(String descriptionAndDateTimeString)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (!descriptionAndDateTimeString.contains(\"/by \")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please separate deadline description and date/time by \\\" /by \\\". \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    + \"Note that date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] arr \u003d descriptionAndDateTimeString.split(\" /by \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (arr.length \u003c 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"The description of an deadline cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return new String[]{arr[0], arr[1]};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a String array of two elements containing date and time respectively."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param dateAndTimeString String in the form of either [date] or [date] [time]."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String array of two elements containing task description and date / time respectively."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If the format of the String entered is invalid."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static DateAndTime getValidatedDateAndTime(String dateAndTimeString) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] dateTimeArr \u003d dateAndTimeString.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (dateTimeArr.length \u003e 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure date format is either in DD/MM/YYYY format or \" "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    + \"DD/MM/YYYY HHMM format (24 hours).\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Date date \u003d getValidatedDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Time time \u003d dateTimeArr.length \u003e 1 ? getValidatedTime(dateTimeArr[1]) : null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (time !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new DateAndTime(date, time);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new DateAndTime(date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 59
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/validation/EventValidation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines an EventValidation class containing static methods."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Validates strings parsed to create an Event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Inherits methods from Validation class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class EventValidation extends Validation {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a String array of two elements containing task description, date, start and end time respectively."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param descriptionAndDateTimeString String in the form [task description] [\" /at \"] [start time] [\"-\"]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *                                     [\"end time]."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String array of two elements containing task description, date, start and end time respectively."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If the format of the String entered is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static String[] getValidatedDescriptionAndDateTime(String descriptionAndDateTimeString)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (!descriptionAndDateTimeString.contains(\"/at \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please separate deadline description and date/time by \\\" /at \\\". \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    + \"Note that date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] arr \u003d descriptionAndDateTimeString.split(\" /at \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (arr.length \u003c 2) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return new String[]{arr[0], arr[1]};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a String array of three elements containing date, start time and end time respectively."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param dateAndTimeString String in the form of [date] [start time] [end time]."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String array of three elements containing date, start time and end time respectively."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If the format of the String entered is invalid."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static DateAndTime getValidatedDateAndTime(String dateAndTimeString) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] dateTimeArr \u003d dateAndTimeString.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (dateTimeArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure date format is in DD/MM/YYYY HHMM-HHMM format (24 hours).\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Date date \u003d getValidatedDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] timeArr \u003d dateTimeArr[1].split(\"-\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (timeArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure time format is in HHMM-HHMM format (24 hours).\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Time timeStart \u003d getValidatedTime(timeArr[0]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Time timeEnd \u003d getValidatedTime(timeArr[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return new DateAndTime(date, timeStart, timeEnd);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 59
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/validation/LoadValidation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a LoadValidation class containing static methods."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Validates strings parsed from the file pointed to by the file path of a Storage object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Inherits methods from Validation class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class LoadValidation extends Validation {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a validated Type of Task represented by a single-character String."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param type Type of task represented by a single-character String."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Validated Type of Task based on given type of Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If input type of Task is invalid or does not correspond to any known Type of Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static String getValidatedTaskType(String type) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (!(type.equals(\"T\") || type.equals(\"D\") || type.equals(\"E\"))) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Incorrect Type in Load File\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns either 1 or 0, representing whether a Task has been marked as done (completed)."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param doneStatus String of either \"0\" or \"1\", with the latter representing that a Task has been marked as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return An integer 1 or 0, representing the state of whether a Task has been marked as done in the storage file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If doneStatus is anything other than the String \"0\" or \"1\"."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static int getValidatedDoneStatus(String doneStatus) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            int res \u003d Integer.parseInt(doneStatus);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (!(res \u003d\u003d 0 || res \u003d\u003d 1)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Invalid Done Status in Load File\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Ensures that there are valid number of tokens in a line of text in the Storage file representing a Task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param type String representation of Task type in the Storage file, denoted by a single letter."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param arr An array containing words from a line of text separated by spaces, with elements representing tokens."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If the number of tokens fails to correspond to that of it\u0027s Task type in the line of text."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static void ensureValidNumberOfTokens(String type, String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if ((type.equals(\"D\") || type.equals(\"E\")) \u0026\u0026 arr.length !\u003d 4) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Incorrect Number of Tokens in Load File\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (type.equals(\"T\") \u0026\u0026 arr.length !\u003d 3) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Incorrect Number of Tokens in Load File\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/validation/Validation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.logic.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Validation class containing static methods."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Validates strings parsed for general purposes"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Includes validation for commands, dates, times and lists."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Validation {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Ensures a command not meant to trailing strings following it does not have any."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Trailing spaces will be automatically removed by the program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param command String representation of a single-word command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Description of a task, following a single-word command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If taskString taken in is non-empty."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static void ensureEmptyTaskString(String command, String taskString) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (!taskString.equals(\"\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"There cannot be any additional characters after the \\\"\" + command + \"\\\" command\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    + \" (other than trailing spaces).\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Ensures a command or task requiring trailing string(s) following it has it / them."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param task Task or single-word command that requires a following description."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Description of a task, following a single-word command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If taskString taken in is empty."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static void ensureNonEmptyTaskString(String task, String taskString) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (taskString.equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (task.equals(\"delete\") || task.equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"The index for a \" + task + \" command cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (task.charAt(0) \u003d\u003d \u0027a\u0027 || task.charAt(0) \u003d\u003d \u0027e\u0027 || task.charAt(0) \u003d\u003d \u0027i\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    || task.charAt(0) \u003d\u003d \u0027o\u0027 || task.charAt(0) \u003d\u003d \u0027u\u0027) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"The description of an \" + task + \" cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"The description of a \" + task + \" cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Ensures that a user does not enter an empty line of command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param command String representation of a single-word command to the program."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If user inputs an empty line of command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static void ensureNonEmptyCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Command cannot be empty.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a validated Date object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Ensures that input String is in valid DD/MM/YYYY format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Ensures there are at most 12 months in a year."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Ensures the day of the month in the year entered is valid."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param date String representation of a date in DD/MM/YYYY format."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Validated Date object containing the day, month, year of the date parameter."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If the date entered is invalid."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static Date getValidatedDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (date.length() !\u003d 10) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure date format is in DD/MM/YYYY\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] dateArr \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (dateArr.length !\u003d 3) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure date format is in DD/MM/YYYY\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int day \u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int month \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int year \u003d 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        boolean isLeapYear \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            day \u003d Integer.parseInt(dateArr[0]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            month \u003d Integer.parseInt(dateArr[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            year \u003d Integer.parseInt(dateArr[2]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (day \u003c 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"Calendar day must start from 1\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (month \u003c 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"Calendar month must start from 1\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (year \u003c 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"Calendar year must start from 0\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (month \u003e 12) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"There cannot be more than 12 months in a year.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure date format is in DD/MM/YYYY\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (year % 4 \u003d\u003d 0 \u0026\u0026 year % 100 !\u003d 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            isLeapYear \u003d true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (year % 400 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            isLeapYear \u003d true;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if ((month \u003c\u003d 7 \u0026\u0026 month % 2 !\u003d 0) || (month \u003e 7 \u0026\u0026 month % 2 \u003d\u003d 0)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (day \u003e 31) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"There cannot be more than 31 days in \" + Date.getMonth(month));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (month !\u003d 2) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (day \u003e 30) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"There cannot be more than 30 days in \" + Date.getMonth(month));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (isLeapYear \u0026\u0026 day \u003e 29) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"There cannot be more than 29 days in \" + Date.getMonth(month) + \" \""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + year + \".\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (!isLeapYear \u0026\u0026 day \u003e 28) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"There cannot be more than 28 days in \" + Date.getMonth(month) + \" \""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + year + \".\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return new Date(day, month, year);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a validated Time object."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Ensures that input String is in valid HHMM format."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Ensures hours is not more than 23 and minutes is not more than 59."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param time String representation of a time in HHMM format."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Validated Time object containing the day, month, year of the time parameter."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If the time entered is invalid."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static Time getValidatedTime(String time) throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (time.length() !\u003d 4) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure time format is in HHMM format (24 hours).\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int hour \u003d 0;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int minute \u003d 0;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            hour \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            minute \u003d Integer.parseInt(time.substring(2, 4));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (hour \u003c 0 || minute \u003c 0) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure time format is in HHMM format (24 hours).\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (hour \u003e 23) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please check that hours is not more than 23.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (minute \u003e 59) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please check that minutes is not more than 59.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return new Time(hour, minute);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a validated index for the given list."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Takes in a string and ensures that it is a valid positive integer within the range of the given TaskList "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * (numbered from 1 to n in a TaskList of size n)."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Ensures that any n that is returned will be able to access the TaskList without encountering a general"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * number format exception that will cause the program to terminate in the event that the index is invalid or"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * out of bounds."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Post-condition: A client of this method may use the returned value to access tasks in the TaskList "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * if the String representing the index of the item in the taskList is valid."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList of which the validated index is to be returned."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param k String that represents the ith element of the TaskList (k ranges from 1 to n)."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return An integer value i that can be used to access the item in the taskList (i ranges from 0 to n - 1)."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If k is less than 0, more than the size of the list or cannot be parsed as an integer."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static int getValidatedListIndex(TaskList tasks, String k) throws DukeException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (k.equals(\"\")) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please enter a valid numerical value after the intended command\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    + \" (separated by a space).\\n\" + \"The number cannot be empty for this command.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int n \u003d 0;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            n \u003d Integer.parseInt(k);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (n \u003c\u003d 0 || n \u003e tasks.size()) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return n - 1;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"Please enter a valid numerical value from 1 to the taskList\u0027s size\""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \" after the intended command (separated by a space).\\n\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"There is currently 1 task in the list.\\n\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"Try entering \\\"list\\\" to view the full list of tasks.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"Please enter a valid numerical value from 1 to the taskList\u0027s size\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \" after the intended command (separated by a space).\\n\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"There are currently \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"Try entering \\\"list\\\" to view the full list of tasks.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 203
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines the Duke class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Contains the main method that is called to run the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of Duke with a default location of storage files."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Files are stored in a text file, inside the current folder where Duke is currently being run."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this(System.getProperty(\"user.dir\") + \"/data/duke.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of Duke with it\u0027s Storage for loading and saving data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param filePath Directory where the data file is located or is to be located."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Runs an iteration of the Duke program."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Performs the necessary input command given an input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param input String representation of input from the user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private void run(String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            String fullCommand \u003d input;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the response of Duke after calling it\u0027s run method."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param input String representation of input from the user."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return The response of Duke obtained from it\u0027s Ui after calling the run method of DUke."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        run(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return ui.getOutput();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the Ui attribute of this instance of Duke."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Ui instance employed by this Duke object."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns whether Duke has been called to exit after the most recent command."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return A boolean tha denotes whether or not Duke has been called to terminate by user command."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public boolean getIsExit() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "whneo97": 85
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/dateandtime/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.model.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Date object containing a day, month and year attribute."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of Date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param day Day of the month starting from 1 to the last day of the month."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param month Numerical representation of a month from 1 to 12."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param year Year beginning from 0 AD."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Date(int day, int month, int year) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the String representation of the month from its numerical representation."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param month Numerical representation of a month from 1 to 12."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String representation of the month (eg. January) converted from its numerical representation."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static String getMonth(int month) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return month \u003d\u003d 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"January\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 2"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"February\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 3"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"March\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 4"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"April\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 5"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"May\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 6"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"June\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 7"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"July\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 8"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"August\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 9"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"September\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 10"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"October\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 11"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"November\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 12"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ? \"December\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the String representation of a Date instance."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String representation of a Date instance in DD/MM/YYYY format."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return String.format(\"%02d\", day)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"/\" + String.format(\"%02d\", month)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"/\" + String.format(\"%02d\", year);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 66
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/dateandtime/DateAndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.model.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a DateAndTime object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Consists of different combination of Date and Time objects."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DateAndTime {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Time timeStart;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Time timeEnd;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of DateAndTime in [Date] format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a Date object as it\u0027s attribute."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param date Date object representing the date stored by an instance of this class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DateAndTime(Date date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of DateAndTime in [Date] [Time] format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a Date and Time object (ending time) as it\u0027s attributes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param date Date object representing the date stored by an instance of this class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param timeEnd Time object representing the ending time stored by an instance of this class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DateAndTime(Date date, Time timeEnd) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.timeEnd \u003d timeEnd;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of DateAndTime in [Date] [Time] [Time] format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a Date and two Time objects (both starting and ending time) as it\u0027s attributes."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param date Date object representing the date stored by an instance of this class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param timeStart Time object representing the starting time stored by an instance of this class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param timeEnd Time object representing the ending time stored by an instance of this class."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DateAndTime(Date date, Time timeStart, Time timeEnd) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this(date, timeEnd);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.timeStart \u003d timeStart;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a Date object stored as an attribute of this DateAndTime instance."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Date object representing the date stored in this DateAndTime instance."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a Time object (starting time) stored as an attribute of this DateAndTime instance."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Time object representing the starting Time stored in this DateAndTime instance."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Time getTimeStart() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return timeStart;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a Time object (ending time) stored as an attribute of this DateAndTime instance."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Time object representing the ending Time stored in this DateAndTime instance."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Time getTimeEnd() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return timeEnd;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the String representation of a DateAndTime instance."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String representation of a DateAndTime instance, with Time followed by Date."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (timeEnd \u003d\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return \"\" + date;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (this.timeStart \u003d\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return \"\" + date + \" \" + timeEnd;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return \"\" + date + \" \" + timeStart + \"-\" + timeEnd;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 83
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/dateandtime/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.model.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Time object containing hour and minute as attributes."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private int minute;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of Time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param hour Hour component of the 24 hour clock."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param minute Minute component of the 24 hour clock."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Time(int hour, int minute) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.hour \u003d hour;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.minute \u003d minute;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the String representation of a Time instance."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String representation of a Time instance in HHMM format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return String.format(\"%02d\", hour) + String.format(\"%02d\", minute);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Deadline object that represents a deadline task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Inherits attributes and methods from Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates a Deadline object with a task description and due date (and possibly time)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Task description of the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param dateAndTime DateAndTime object representing the date (and possibly time) which the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *                    with given deadline is due by."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Deadline(String taskString, DateAndTime dateAndTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        super(Type.DEADLINE, taskString, dateAndTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates a Deadline object with a task description, due date (and possibly time) and isDone state."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Allows a client of this client to define whether this Deadline has been completed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Task description of the Deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param dateAndTime DateAndTime object representing the date (and possibly time) which the task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *                    with given deadline is due by."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param isDone A boolean that denotes whether or not the Deadline to be created has already been completed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Deadline(String taskString, DateAndTime dateAndTime, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this(taskString, dateAndTime);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.setIsDone(isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the String representation of a Deadline instance."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String representation of a Deadline instance, including the date (and possibly time)."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return super.toString() + \" (by: \" + this.getDateAndTime() + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines an Event object that represents a event task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Inherits attributes and methods from Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an Event object with a task description, along with date and time of Event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Task description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param dateAndTime DateAndTime object representing the date and time during which the Event is occurring."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Event(String taskString, DateAndTime dateAndTime) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        super(Type.EVENT, taskString, dateAndTime);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates a Deadline object with a task description, along with date and time of Event, and isDone state."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Allows a client of this client to define whether this Event has been completed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Task description of the Event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param dateAndTime DateAndTime object representing the date and time during which the the Event is occurring."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param isDone A boolean that denotes whether or not the Event to be created has already been completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Event(String taskString, DateAndTime dateAndTime, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this(taskString, dateAndTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.setIsDone(isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the String representation of an Event instance."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String representation of an Event instance, including the date, start and end time."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return super.toString() + \" (at: \" + this.getDateAndTime() + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Task object that represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public enum Type {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String taskString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Type type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private DateAndTime dateAndTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates a Task object with a task description, type and date / time if any."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param type Type of Task to be created."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Task description of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param dateAndTime DateAndTime object representing the date and time associated with this task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *                    If there is no DateAndTime associated with this task, a client of this class may pass in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *                    null for this parameter."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Task(Type type, String taskString, DateAndTime dateAndTime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskString \u003d taskString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a String that indicates that this Task instance has been added to the given TaskList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Indicates also the updated number of tasks in the given TaskList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Pre-condition: This Task has indeed been added to the given TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList to which this Task has been added."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String indicating that this Task instance has been added to the given TaskList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String addedMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String s \u003d \"Got it. I\u0027ve added this task:\\n  \" + this + \"\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"Now you have \" + tasks.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            s +\u003d \" task in the list.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }  else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            s +\u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a String that indicates that this Task instance has been removed from the given TaskList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Indicates also the updated number of tasks remaining in the given TaskList"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Pre-condition: This Task has indeed been removed to the given TaskList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList to which this Task has been removed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String indicating that this Task instance has been removed from the given TaskList."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String deletedMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String s \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + this + \"\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            s +\u003d \"Now you have 1 task in the list.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            s +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a String that indicates that this Task instance has been marked as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Pre-condition: This Task has indeed been marked as done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String indicating that this Task instance has been marked as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String doneMessage() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n  \" + this;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the task description of this Task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Task description of this Task stored in the taskString attribute."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String getTaskString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the state of whether the Task has been marked as done (completed)."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return A boolean stored in the isDone attribute denoting whether the Task has been marked as done (completed)."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the type of Task stored in this Task instance\u0027s type attribute."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Represented by Type constant."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Type of task stored in this Task instance\u0027s type attribute."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Type getType() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a DateAndTime object stored in this Task instance\u0027s dateAndTime attribute."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns null if this Task has no date and time associated with it."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return DateAndTime object stored in this Task instance\u0027s dateAndTime attribute."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DateAndTime getDateAndTime() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return dateAndTime;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Sets the state of whether this Task has been completed."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param isDone A boolean passed in by a client of this method to determine whether this Task has been marked as"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *               done."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the String representation of a Task instance."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Formats the String to be returned such that it contains the Task\u0027s as type, state of whether it has been"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * completed, and task description in this order."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String representation of a Task instance."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String doneString \u003d isDone \u003d\u003d true ? \"[+]\" : \"[ ]\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return \"[\" + type.toString().charAt(0) + \"]\" + doneString + \" \" + this.taskString;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 132
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a TaskList object that stores instances of Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates a TaskList with the same contents as the TaskList of the given Storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param storage Storage from which this TaskList is to copy its initial content of Tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        TaskList sourceList \u003d storage.getTaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        for (int i \u003d 0; i \u003c sourceList.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            this.taskList.add(sourceList.get(i));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates a TaskList with an initial capacity of 100;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Initialises an ArrayList of Tasks with initial capacity of 100 to implement this TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Adds the given Task to this TaskList."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param task Task to be added to this TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Removes the given Task from this TaskList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param task Task to be removed from this TaskList."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void remove(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the size of this TaskList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return An integer representing the number of Tasks in this TaskList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the Task at the specified position of this TaskList."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param i Position of the Task to be retrieved, from index 0 to n-1 in a TaskList of n elements."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Task at given index of this TaskList."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a TaskList with search results for this TaskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Search keywords may contain the task description of tasks to be searched for,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * the status of whether tasks have been marked as done, the types of task, date / time"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * (in DD/MM/YYYY and HHMM format respectively), and separator keywords for the type of task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * (eg. \"at\" for event and \"by\" for deadline)."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * If none of the task descriptions, types, done statuses, dates/ times etc. of all the tasks match the"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * search keyword, the method returns an empty TaskList."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Keywords to be used to search this TaskList for relevant Tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return TaskList containing keywords searched for in the given taskString."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public TaskList find(String taskString) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        TaskList searchResults \u003d new TaskList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // If search keywords contain the task description or vice versa."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // the task is added to the list of search results."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (task.getTaskString().contains(taskString)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    || taskString.contains(task.getTaskString())) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                searchResults.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // If search keyword is \"done\" (i.e. search for tasks which have been marked as completed,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // the task is added to the list of search results if it has been marked as done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (task.getIsDone() \u003d\u003d true \u0026\u0026 taskString.equals(\"done\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                searchResults.add(task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // If search keyword is \"undone\" or \"not done\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // (i.e. search for tasks which have yet to be marked as completed),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // the task is added to the list of search results if it has yet to be marked as done."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (task.getIsDone() \u003d\u003d false \u0026\u0026 (taskString.equals(\"undone\")"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    || taskString.contains(\"not done\"))) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                searchResults.add(task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // If search keywords contain type of task (eg. deadline, event etc.),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // the task is added to the list of search results if it\u0027s type matches the type to be searched for."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // Type of task can be in any case (uppercase / lowercase)."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (task.getType().toString().toLowerCase().contains(taskString.toLowerCase())"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    || taskString.toLowerCase().contains(task.getType().toString().toLowerCase())) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                searchResults.add(task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // If search keywords are contained in the date (DD/MM/YYYY format) or time (HHMM format) attributes"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // of the task, the task is added to the list of search results."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (task.getDateAndTime() !\u003d null"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    \u0026\u0026 task.getDateAndTime().toString().contains(taskString)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    || taskString.contains(task.getTaskString())) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                searchResults.add(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // If search keyword is \"at\" for an event-type task or search keyword is \"by\" for an event-type task,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // the task is added to the list of search results if it is an event-type or"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            // deadline type task respectively."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if ((task.getType().toString().equals(\"EVENT\") \u0026\u0026 taskString.equals(\"at\"))"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    || (task.getType().toString().equals(\"DEADLINE\") \u0026\u0026 taskString.equals(\"by\"))) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                searchResults.add(task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return searchResults;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the String representation of a TaskList instance."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Formats elements in the TaskList as a list, numbered from 1 to n, where n is the size of the taskList."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String representation of a TaskList instance."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String out \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            out +\u003d count + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return out.trim();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 136
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Todo object that represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Inherits attributes and methods from Task class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates a Todo object with a task description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Task description of the todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Todo(String taskString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        super(Type.TODO, taskString, null);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates a Todo object with a task description and isDone state."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Allows a client of this client to define whether this Todo has been completed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Task description of the Todo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param isDone A boolean that denotes whether or not the Todo to be created has already been completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Todo(String taskString, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this(taskString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.setIsDone(isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Storage object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Contains a file path and TaskList stored in the file that the file path points to."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String dirPath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates a Storage object given a file path."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores the file path as an attribute of this particular instance of the Storage class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param filePath String representation of file path."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.dirPath \u003d getDirAsString(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a String representation of the directory the file at filePath is in."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param filePath Path of file to get directory of."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String representation of the directory the file at filePath is in."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static String getDirAsString(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        char dirSeparator \u003d System.getProperty(\"os.name\").startsWith(\"Windows\") ? \u0027\\\\\u0027 : \u0027/\u0027;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        for (int i \u003d filePath.length() - 2; i \u003e\u003d 0; i--) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (filePath.charAt(i) \u003d\u003d dirSeparator) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return filePath.substring(0, index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a new Storage object that contains TaskList of Tasks parsed from the file path of this storage."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Storage object containing TaskList of Tasks parsed from this storage\u0027s file path attribute."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If reading an existing file or creating a new file is unsuccessful."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Storage load() throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            File dir \u003d new File(dirPath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (file.createNewFile()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                this.taskList \u003d Parser.parse(this);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Error loading specified file.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Saves given TaskList to the file located at this Storage\u0027s file path."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList of Tasks, presumably stored in current memory."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param ui Ui instance used by a client that calls this method."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException If writing to the original file at this Storage\u0027s file path is unsuccessful."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void save(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            File dir \u003d new File(dirPath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            boolean directoryIsCreated \u003d dir.mkdir();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            boolean fileIsCreated \u003d file.createNewFile();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                char type \u003d task.getType().toString().charAt(0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                char isDone \u003d task.getIsDone() \u003d\u003d true ? \u00271\u0027 : \u00270\u0027;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                String taskString \u003d task.getTaskString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                DateAndTime dateAndTime \u003d task.getDateAndTime();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                String out \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                if (task.getDateAndTime() !\u003d null) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    out \u003d type + \" | \" + isDone + \" | \" + taskString + \" | \" + dateAndTime + \"\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    out \u003d type + \" | \" + isDone + \" | \" + taskString + \"\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                fileWriter.append(out);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (directoryIsCreated) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ui.showNotification(\"Original storage directory no longer exists!\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"BUT don\u0027t worry! We have restored a new one in it\u0027s place in the same location and \""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"performed the required operation. :)\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (fileIsCreated) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ui.showNotification(\"Original storage file no longer exists!\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"BUT don\u0027t worry! We have restored a new one in it\u0027s place in the same location and \""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"performed the required operation. :)\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Critical Error: Saving Unsuccessful.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the file path of this Storage instance as a String."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return This Storage\u0027s filePath attribute."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the TaskList stored in this instance of Storage."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return This Storage\u0027s taskList attribute."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 136
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.effect.Glow;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.text.FontWeight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * A custom control using FXML that represents a dialog box."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Dialog box consists of an ImageView to represent the speaker\u0027s face and a label containing text from the speaker."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of DialogBox that stores a String and an Image."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param text String representing a message from a party in a conversation."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param img An avatar representing the party who sent the given input message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (text.equals(Ui.showLogo())) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            dialog.setFont(Font.font(\"Courier\", FontWeight.BOLD, 16));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            dialog.setTextFill(Color.YELLOW);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Glow glow \u003d new Glow();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            glow.setLevel(15);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            dialog.setEffect(glow);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            dialog.setFont(Font.font(\"Calibri\", 16));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            dialog.setTextFill(Color.WHITE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dialog.setPadding(new Insets(0,0,0,7));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a DialogBox object that represents the User\u0027s part of the dialog."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param text String representation of text input from the user."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param img Image representing the user in the chat application."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return DialogBox object representing the User\u0027s part of the dialog."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        //Colour Experimentation"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        //db.dialog.setTextFill(Color.rgb(150, 255, 160));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a DialogBox object that represents Duke\u0027s part of the dialog."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param text String representation of text input from Duke."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param img Image representing Duke in the chat application."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return DialogBox object representing Duke\u0027s part of the dialog."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        //Colour Experimentation:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        //if (!text.equals(Ui.showLogo())) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        //db.dialog.setTextFill(Color.rgb(255, 255, 180));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        //}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 100
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.Duke;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    //Icon made by Smashicons (https://www.flaticon.com/authors/smashicons) from www.flaticon.com"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    //Icon made by Freepik (https://www.flaticon.com/authors/freepik) from www.flaticon.com"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Initialises the program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Binds height of the dialog container to the scrollPane."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Displays to the user the welcome message of Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                DialogBox.getDukeDialog(Ui.showLogo(), dukeImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Sets the Duke instance to be the version of Duke program to be run."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param d A version of Duke to be run from this instance of MainWindow."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing seedu.duke.model.Duke\u0027s reply."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Appends the two dialog boxes to the dialog container."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private void handleUserInput() throws InterruptedException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (duke.getIsExit()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            PauseTransition delay \u003d new PauseTransition(Duration.seconds(0.9));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            delay.setOnFinished(event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            delay.play();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 76
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Defines a Ui class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Interacts with user of the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private String output;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private static String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates an instance of Ui."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Initialises a Scanner object stored in the sc attribute of this Ui."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a String that displays the Duke Logo to the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String representation of Duke Logo to be displayed to the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static String showLogo() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return logo;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns a String that displays the welcome message to the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return String representation of the welcome message to be displayed to the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return \"\\nHello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"What can I do for you?\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the next line of text obtained from user input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Next line of text obtained from user input via Scanner stored in sc attribute."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores the separator line between program inputs / outputs to be displayed to the user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        output \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a loading error message to be displayed to the user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Pre-condition: An error is thrown to the client that calls this method, specifically when loading a file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        output \u003d \"Error loading specified file.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a notification message to be displayed to the user with the given message."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Pre-condition: A notification is to be displayed to client that calls this method."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param message Notification message that is to be displayed to a client that calls this method."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showNotification(String message) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        output +\u003d \"\\n\\nNotification: \" + message;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores an error message to be displayed to the user with the given message."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Pre-condition: An error is thrown to the client that calls this method."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param message Error message from Exception that is thrown to a client that calls this method."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        output \u003d \"OOPS!!! \" + message + \"\\n\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"Input \\\u0027help [command1] [command2] etc.\\\u0027 for usage information for requested commands or \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"simply input \\\u0027help\\\u0027 for the full list of commands known to this program.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a message to be displayed to the user that a Task has been added to a TaskList."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Presumably called by the Task class when a client adds it to a TaskList."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param addedMessage Message to indicate to the user that a Task has been added to a TaskList."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showAddedMessage(String addedMessage) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        output \u003d addedMessage;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a message to be displayed to the user that a Task has been removed from a TaskList."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Presumably called by the Task class when a client removes it from a TaskList."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param deletedMessage Message to indicate to the user that a Task has been removed from a TaskList."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showDeletedMessage(String deletedMessage) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        output \u003d deletedMessage;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a message to be displayed to the user that a Task has been marked as done (completed)."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Presumably called by the Task class when a client marks it as done."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param doneMessage Message to indicate to the user that a Task has been marked as done."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showDoneMessage(String doneMessage) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        output \u003d doneMessage;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a message to the be displayed to the user the message that a search on a TaskList has been completed."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Completed message is followed by search results."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param searchResults TaskList containing list of search results based on keyword from user input."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showSearchResults(TaskList searchResults) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        output \u003d \"Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + searchResults;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a message to be displayed to the user the String representation of a TaskList."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Presumably called by the toString method of the TaskList class."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param tasks TaskList to be displayed as its String representation."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        output \u003d \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + tasks.toString();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a message to be displayed to the user the String representations of all definitions of commands requested."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param helpDefinitions Definitions and usage of the commands to be displayed to the user."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showHelpMessage(String helpDefinitions) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        output \u003d helpDefinitions;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Stores a messsage to be displayed to the user an exit message."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * This message is displayed before the program terminates."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        output \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the current input of this instance of Ui."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Current input taken in and stored in this instance of Ui."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return this.input;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Returns the current output of this instance of Ui."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return Current output stored in this instance of Ui."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return this.output;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 169
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            \u003cFont name\u003d\"Calibri\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"76.0\" fitWidth\u003d\"76.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "whneo97": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003cAnchorPane fx:id\u003d\"anchorPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"WHITE\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hvalue\u003d\"1.0\" maxHeight\u003d\"Infinity\" pannable\u003d\"true\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background: transparent;\" styleClass\u003d\"scrollables\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "whneo97": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/dateandtime/DateAndTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DateAndTimeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Date date \u003d new Date(1, 4, 2018);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Time time \u003d new Time(17, 42);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Assertions.assertEquals(\"01/04/2018 1742\", new DateAndTime(date, time).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/dateandtime/DateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DateTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetMonth() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Assertions.assertEquals(\"February\", Date.getMonth(2));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"29/02/2019\", new Date(29, 2, 2019).toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 21
    }
  },
  {
    "path": "src/test/java/seedu/duke/dateandtime/TimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class TimeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Assertions.assertEquals(\"2359\", new Time(23, 59).toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Assertions.assertEquals(\"dir1/dir2\", Storage.getDirAsString(\"dir1/dir2/dummyFile.txt/\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 13
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Deadline dummyDeadline \u003d new Deadline(\"dummyString\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            new DateAndTime(new Date(1, 3, 2014)));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Deadline dummyDeadline2 \u003d new Deadline(\"dummyString\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            new DateAndTime(new Date(2, 4, 2024), new Time(14, 4)), true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[D][ ] dummyString (by: 01/03/2014)\", dummyDeadline.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString2() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[D][+] dummyString (by: 02/04/2024 1404)\", dummyDeadline2.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 28
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Event dummyEvent \u003d new Event(\"dummyString\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            new DateAndTime(new Date(7, 5, 2031), new Time(12, 32),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    new Time(15, 13)));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Event dummyEvent2 \u003d new Event(\"dummyString\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            new DateAndTime(new Date(3, 12, 2064),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    new Time(12, 34), new Time(23, 54)), true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[E][ ] dummyString (at: 07/05/2031 1232-1513)\", dummyEvent.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString2() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[E][+] dummyString (at: 03/12/2064 1234-2354)\", dummyEvent2.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 30
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Task dummyTask \u003d new Todo(\"dummyTaskString\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Task dummyTask2 \u003d new Todo(\"dummyTaskString2\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private TaskList dummyTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyAdd() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTasks.add(dummyTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"1.[T][ ] dummyTaskString\", dummyTasks.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyRemove() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTasks.add(dummyTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTasks.remove(dummyTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"\", dummyTasks.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGet() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTasks.add(dummyTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[T][ ] dummyTaskString\", dummyTasks.get(0).toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummySize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTasks.add(dummyTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(1, dummyTasks.size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTasks.add(dummyTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTasks.add(dummyTask2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"1.[T][ ] dummyTaskString\\n2.[T][ ] dummyTaskString2\", dummyTasks.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 49
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Task dummyTask \u003d new Todo(\"dummyTaskString\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private TaskList dummyTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyAddedMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTasks.add(dummyTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String s \u003d \"Got it. I\u0027ve added this task:\\n  [T][ ] dummyTaskString\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"Now you have 1 task in the list.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(s, dummyTask.addedMessage(dummyTasks));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyDeletedMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTasks.add(dummyTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTasks.remove(dummyTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String s \u003d \"Noted. I\u0027ve removed this task:\\n[T][ ] dummyTaskString\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"Now you have 0 tasks in the list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(s, dummyTask.deletedMessage(dummyTasks));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyDoneMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTask.setIsDone(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String s \u003d \"Nice! I\u0027ve marked this task as done:\\n  [T][+] dummyTaskString\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(s, dummyTask.doneMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetTaskString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"dummyTaskString\", dummyTask.getTaskString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetIsDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        dummyTask.setIsDone(true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(true, dummyTask.getIsDone());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetType() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(Task.Type.TODO, dummyTask.getType());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetDateAndTime() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(null, dummyTask.getDateAndTime());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[T][ ] dummyTaskString\", dummyTask.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 64
    }
  },
  {
    "path": "src/test/java/seedu/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Todo dummyTodo \u003d new Todo(\"dummyString\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Todo dummyTodo2 \u003d new Todo(\"dummyString2\", true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[T][ ] dummyString\", dummyTodo.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString2() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[T][+] dummyString2\", dummyTodo2.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 23
    }
  },
  {
    "path": "src/test/java/seedu/duke/validation/DeadlineValidationTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.validation.DeadlineValidation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DeadlineValidationTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDescriptionAndDateTimeString() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] arr \u003d DeadlineValidation.getValidatedDescriptionAndDateTime(\"dummyTaskString /by 01/03/2010\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"dummyTaskString\", arr[0]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"01/03/2010\", arr[1]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDateAndTime() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        DateAndTime dummyDateAndTime \u003d DeadlineValidation.getValidatedDateAndTime(\"13/12/2019 0807\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"13/12/2019 0807\", dummyDateAndTime.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 23
    }
  },
  {
    "path": "src/test/java/seedu/duke/validation/EventValidationTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.validation.EventValidation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class EventValidationTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDescriptionAndDateTimeString() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] arr \u003d EventValidation.getValidatedDescriptionAndDateTime(\"dummyTaskString /at \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"03/01/2017 1400-1600\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"dummyTaskString\", arr[0]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"03/01/2017 1400-1600\", arr[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDateAndTime() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        DateAndTime dummyDateAndTime \u003d EventValidation.getValidatedDateAndTime(\"11/14/2011 0905-0745\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"11/14/2011 0905-0745\", dummyDateAndTime.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 24
    }
  },
  {
    "path": "src/test/java/seedu/duke/validation/LoadValidationTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.validation.LoadValidation;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class LoadValidationTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedTaskType() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Assertions.assertEquals(\"T\", LoadValidation.getValidatedTaskType(\"T\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDoneStatus() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(1, LoadValidation.getValidatedDoneStatus(\"1\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 22
    }
  },
  {
    "path": "src/test/java/seedu/duke/validation/ValidationTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package seedu.duke.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.logic.validation.Validation;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.model.dateandtime.Time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import seedu.duke.commons.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class ValidationTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDate() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Assertions.assertEquals((new Date(13, 9, 2018)).toString(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Validation.getValidatedDate(\"13/09/2018\").toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedTime() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals((new Time(11, 55)).toString(),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Validation.getValidatedTime(\"1155\").toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "whneo97": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/seedu.duke.model.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "java -classpath ../bin seedu.duke.model.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "whneo97": 34
    }
  },
  {
    "path": "tutorials/gradleTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle is a _build automation tool_ used to automate build processes. There are many ways of integrating Gradle into a project. In this guide, we will be using the _Gradle wrapper_."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* [Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Gradle Support to Your Project](#adding-gradle-support-to-your-project)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Plugins](#adding-plugins)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [CheckStyle](#checkstyle)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Shadow](#shadow)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Dependencies](#adding-dependencies)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [JUnit](#junit)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Further Reading](#further-reading)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "As a developer, you write a _build file_ that describes the project. A build file mainly consists of _plugins_, _tasks_ and _properties_. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* **Plugins** extend the functionality of Gradle. For example, the `java` plugin adds support for `Java` projects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* **Tasks** are reusable blocks of logic.  For example, the task `clean` simply deletes the project build directory. Tasks can be composed of other tasks or be dependent on another task. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* **Properties** change the behavior of tasks. For instance, `mainClassName` of the `application` plugin is a compulsory property which tells Gradle which class is the entrypoint to your application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  As Gradle favors [_convention over configuration_](https://en.wikipedia.org/wiki/Convention_over_configuration), there is not much to you need to configure if you follow the recommended directory structure."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Gradle Support to Your Project "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Pull the branch named `gradle`. Merge it to the `master` branch. This will add the Gradle wrapper to your project."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout --track origin/gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout master"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   git merge gradle"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "1. Open the `build.gradle` file in an editor. Update the following code block to point to the main class (i.e., the one containing the `main` method) of your application. The code below assumes your main class is `seedu.seedu.duke.model.Duke`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   ```groovy"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "       mainClassName \u003d seedu"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "1. To check if Gradle has been added to the project correctly, open a terminal window, navigate to the root directory of your project and run the command `gradlew run`. This should result in Gradle running the main method of your project."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Simply run the command `gradlew {taskName}` in the terminal and Gradle will run the task! Here are some example commands:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew tasks` (or `gradlew tasks --all`): shows a list of tasks available"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew run`: runs the main class of your project"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Some plugins may add more helpful tasks so be sure to check their documentation!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "#### Using Gradle from within Intellij"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. After adding support for Gradle, Intellij might automatically ask you (via a pop-up at the bottom right corner of the Window) whether to import the project as a Gradle project. In that case, go ahead and say yes."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t happen, import the Gradle project by `Help \u003e Find Action \u003e Import Gradle Project`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Import Gradle](assets/ImportGradle.png)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t work either, close Intellij, delete the Intellij project files (i.e., `.idea` folder and `*.iml` files), and set up the project again, but instead of choosing `Create project from existing sources`, choose `Import project from external model` -\u003e `Gradle`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "After this, IntelliJ IDEA will identify your project as a Gradle project and you will gain access to the `Gradle Toolbar`. Through the toolbar, you run Gradle tasks and view your project\u0027s dependencies."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "You can click on the Gradle icon in the Gradle toolbar and create a new run configuration for running Gradle tasks without needing to type a `gradlew` command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "![Gradle icon](assets/GradleIcon.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Plugins"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle plugins are reusable units of build logic. Most common build tasks are provided as core plugins by Gradle. Given below are instructions on how to use some useful plugins:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "### CheckStyle"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "To add support for _Checkstyle_ (a tool to check if your code complies with a set of style rules), which comes as a core plugin, simply add the line `id \u0027checkstyle\u0027` into the `plugins` block."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Your build file should look something like this now:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "// ..."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Checkstyle expects configuration files for checkstyle to be in `./config/checkstyle/` by convention."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "A sample checkstyle rule configuration is provided in the branch."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin adds a few _tasks_ to your project. Run `gradlew checkstyleMain checkstyleTest` to verify that you have set up Checkstyle properly (the command will check your main code and test code against the style rules)."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for CheckStyle plugin](https://docs.gradle.org/current/userguide/checkstyle_plugin.html)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "### Shadow"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Shadow is a plugin that packages an application into an executable jar file. To use it, first add the following line to your Gradle build file:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin can be configured by setting some properties. Let\u0027s try to produce a jar file with the name in format of `{baseName}-{version}.jar`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following block to your build file:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Now you can run the command `gradlew shadowJar`.It publishes an executable jar to `./build/libs/`. You should be able to able to execute the created jar file by double-clicking it or using the command `java -jar {jarName}`?"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for Shadow plugin](https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* [More about the Shadow plugin](https://imperceptiblethoughts.com/shadow/introduction/)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Dependencies"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle can automate the management of dependencies to third-party libraries. Given below are some examples."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "JUnit is a testing framework for Java. It allows developers to write tests and run them. To manage JUnit dependency via Gradle, add the following to your build file:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Then, configure Gradle to use JUnit by adding the following block to your build file:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "By convention, java tests belong in `src/test/java` folder. Create a new `test/java` folder in under `src`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "src"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "├─main"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "│  └─java"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "whneo97"
        },
        "content": "│     └─seedu/duke/seedu.duke.model.Duke.java"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "└─test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    └─java"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        └─seedu/duke/DukeTest.java"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "If you have imported your Gradle project into IntelliJ IDEA, you will notice that IDEA is able to mark the test directory as the _Test root_ (colored in green by default) automatically."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "You can now write a test (e.g., `test/java/seedu/duke/DukeTest.java`) and run it with `gradlew test`."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "## Further Reading"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Now that you have a general idea of how to accomplish basic tasks with Gradle, here\u0027s a list of material you can read to further your understanding."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* [Official Gradle Documentation](https://docs.gradle.org/current/userguide/userguide.html)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "----------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "-": 167,
      "whneo97": 3
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart1.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial Part 1 – Introduction"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## JavaFX lifecycle of an application"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Imagine yourself as a director of a play. First you provision the props that you will feature in your play. These can be hand props for your actors to interact with or even set dressings just to liven up the background. You then decide where to layout the props for every scene. With a proper script in hand, you can finally approach a theatre and request for a stage. There on, it’s just a matter of pulling the curtains on your masterpiece."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![Hierarchy of Objects in JavaFX](assets/JavaFxHierarchy.png)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "A JavaFX application is like a play you are directing. Instead of creating props, you create `Nodes` (`Nodes` are the fundamental building blocks of a JavaFX application), and place them onto a `Scene` (a scene is a graph of `Node`s). Then, you set your `Scene` on a `Stage` provided by JavaFX. When you call `Stage#show()` method, JavaFX renders a window with your `Stage` on it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up Java FX"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "### If you are not using Gradle"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Download the [JavaFX 11 SDK](https://gluonhq.com/products/javafx/) and unzip it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the `libs` folder from the SDK into your project (note: `JAVAFX_HOME` is the directory in which you have unzipped the JavaFX SDK). "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   `File` \u003e `Project Structure` \u003e `Libraries` \u003e `+` \u003e `Java` \u003e `{JAVAFX_HOME}/lib`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. From `Run` \u003e `Edit Configurations`, add the following line into your `VM options` for each of the `main` classes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   `--module-path {JAVAFX_HOME}/lib --add-modules javafx.controls,javafx.fxml`\u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   e.g., `--module-path C:/javafx-sdk-11.0.2/lib --add-modules javafx.controls,javafx.fxml`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "### If you are using Gradle"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Update your `build.gradle` to include the following lines:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Writing your first program"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "As customary, let’s start off with a simple “Hello World” program. Modify your `seedu.duke.model.Duke` class to extend `javafx.application.Application`. This requires you to override the `Application#start()` method and provide a concrete implementation. Notice that the method signature for `Application#start()` has a parameter `Stage`. This is the _primary stage_ that JavaFX provides."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class seedu.duke.model.Duke extends Application {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Note how we have created a `Label` to contain the text that we want to show. We then create the `Scene` and set its content. Finally, we set the stage and show it. "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "Next, we create another Java class, `Launcher`, as an entry point to our application."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "The `Launcher` class is reproduced below in its entirety."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Application.launch(seedu.duke.model.Duke.class, args);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "Run `Launcher` and you should see something like this:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "![Hello World](assets/HelloWorld.png) "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! You have created your first GUI application!"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "1. We mentioned that `Node`s are the fundamental building blocks of JavaFX and used a `Label` as our root node in the HelloWorld application."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What are some of the other types of `Node`s?"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   1. How does JavaFX group them?"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "1. `Node`s can be interacted with like Plain Old Java Objects (POJO)."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What properties of a `Label` can you change programmatically?"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Try changing the `Label` to have a font of Arial at size 50."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "1. You’ve learnt that a `Stage` can be thought of as a window. "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Can you have more than one `Stage` an application?"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Try creating another stage and showing it! What happens?"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "-": 107,
      "whneo97": 3
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart2.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# JavaFX Tutorial Part 2 - Creating a GUI for seedu.duke.model.Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "In this tutorial, we will be creating a GUI for seedu.duke.model.Duke from scratch based on the following mockup."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "![Mockup for seedu.duke.model.Duke](assets/DukeMockup.png)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## JavaFX controls"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Controls are reusable UI elements. Refer to the [JavaFX\u0027s official documentation](https://openjfx.io/javadoc/11/javafx.controls/javafx/scene/control/package-summary.html) for a list of controls available."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "From the mockup above, can you identify the controls that we will need to use? "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Mockup | Control "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "------ | :---: |"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "![ImageView](assets/MockupImageView.png) | ImageView"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "![Label](assets/MockupLabel.png) | Label"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "![Button](assets/MockupButton.png) | Button"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "![TextField](assets/MockupTextField.png) | TextField"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "![ScrollPane](assets/MockupScrollPane.png) | ScrollPane"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "## Designing the Layout"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Now that we know what controls we need to implement our UI, let’s start programming! We quickly run into a problem: how do we show all of them on the screen at once? "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "Each scene is initialized with a root `Node`. In the previous tutorial, our root `Node` was a `Label`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "What happens when we need to display more than one `Node` on the `Scene`? For that, we need to understand the JavaFX hierarchy. Recall from the previous tutorial:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "![Hierarchy of Objects in JavaFX](assets/JavaFxHierarchy.png)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "From the diagram, you see that the root `Node` can contain many other `Nodes` and similarly, each of those `Nodes` can contain many other `Nodes`. This means that if we can find a _container_ to set as our root `Node`, we can place all our other `Nodes` in it."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "But how do we get the exact layout we want in the UI? JavaFX provides that functionality in the form of **layout panes** in `javafx.scene.layouts`. Each layout pane follows a _layout policy_ to decide how to arrange its children. For example, the `VBox` lays out its children in a single vertical column and its counterpart, the `HBox` lays out its children in a single horizontal row. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: A comprehensive list of layouts and how they behave is available here from the [official documentation](https://openjfx.io/javadoc/11/javafx.graphics/javafx/scene/layout/package-summary.html)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "One way to obtain the layout in the mockup is as follows. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "![seedu.duke.model.Duke\u0027s layout](assets/DukeSceneGraph.png) "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "To get that layout, we create a new `AnchorPane` and add our controls to it. Similarly, we create a new `VBox` to hold the contents of the `ScrollPane`. The code should look something like this:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class seedu.duke.model.Duke extends Application {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // ... "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "         //Step 1. Setting up required components"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "         "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "         scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "         dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "         scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "         userInput \u003d new TextField();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "         sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "         AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "         mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "         scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "         stage.setScene(scene);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "         stage.show();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application and you should see something like this:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "![seedu.duke.model.Duke\u0027s raw layout](assets/RawLayout.png)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "That is not what we were expecting, what did we forget to do?"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "## Styling the Controls"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "Almost every JavaFX object offer properties that you can set to customize its look and feel. For example, the `Stage` allows you to set its preferred size and title. Again, refer to the official JavaFX documentation for a comprehensive list of properties that you can modify. Here’s how you can get the application to look like the mockup:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following code to the bottom of the `start` method. You\u0027ll have to add `import javafx.scene.layout.Region;` to the imports too."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        //Step 1. Formatting the window to look as expected."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "         "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        //..."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        stage.setTitle(\"seedu.duke.model.Duke\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this. "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application again. It should now look like this:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "whneo97"
        },
        "content": "![seedu.duke.model.Duke\u0027s Final layout](assets/FinalLayout.png)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "1. In the tutorial, we used an `AnchorPane` to achieve the desired layout.  "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Can you find other ways to obtain a similar layout? "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What are the advantages and disadvantages of your layout?"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "1. Try interacting with the application"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What happens when you press the `Enter` key or left-click the send button?"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Why?"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "-": 150,
      "whneo97": 8
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart3.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 3 – Interacting with the user"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Picking up from where we left off last tutorial, we have successfully achieved the desired layout. Now let’s make the application respond to user input. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Rather than to do everything in one try, let’s iterate and build up towards our final goal. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 1 – Echoing the User"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "JavaFX has an _event-driven architecture style_. As such, we programmatically define _handler_ methods to execute as a response to certain _events_. When an event is detected, JavaFX will call the respective handlers."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "For seedu.duke.model.Duke, there are two events that we want to respond to, namely the user pressing `Enter` in the `TextField` and left-clicking the `Button`. These are the `onAction` event for the `TextField` and the `onMouseClicked` event for the `Button`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "For now, let’s have the application add a new `Label` with the text from the `TextField`. Update the `Main` class as follows. You\u0027ll need to add an `import javafx.scene.control.Label;` too."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Step 1 code here"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 2 code here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 1:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * @param text String containing text to add"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    return textToAdd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and give it a whirl!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "![Echo not scrolling as intended](assets/EchoNotScrolling.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "At first glance everything appears to work perfectly. However, when the `VBox` stretches beyond the confines of the `ScrollPane`, the `ScrollPane` does not scroll down automatically as expected. We can remedy this by attaching a handler on the `VBox` to react to its own size changing and scrolling the `ScrollPane` down."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Update the `start` method as shown below."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    // current code ..."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Verify that the `ScrollPane` scrolls as intended."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 2 – Adding Dialog Boxes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "In the mockup of the UI, notice that the dialog boxes are composed of two different controls (`ImageView` and `Label`) and reused multiple times. In situations like this, it is often beneficial to create our own custom control."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s create our custom control `DialogBox`:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "We use the code in our main class just like any other control. Here are the steps to update the code to use the custom control in `Main.java`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "First, add these imports:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "Next, add two images to the `main/resources/images` folder."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "For this tutorial, we have two images `DaUser.png` and `DaDuke.png` to represent the user avatar and seedu.duke.model.Duke\u0027s avatar respectively but you can use any image you want."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "Image|Filename"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "---|---"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "![DaDuke](assets/DaUser.png) | `DaUser.png`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "![DaUser](assets/DaDuke.png) | `DaDuke.png`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class seedu.duke.model.Duke extends Application {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Add a new method to handle user input:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 2:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * Creates two dialog boxes, one echoing user input and the other containing seedu.duke.model.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": " * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": " * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": " * Replace this stub with your completed method."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "private String getResponse(String input) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    return \"seedu.duke.model.Duke heard: \" + input;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "Update the event handler code in the `start` method to use the new `handleUserInput` method:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and see how it works."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 2](assets/DialogBoxesIteration2.png) "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 3 – Adding custom behavior to DialogBox"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "whneo97"
        },
        "content": "One additional benefit of defining a custom control is that we can add behavior specific to our `DialogBox`. Let’s add a method to flip a dialog box such that the image on the left to differentiate between user input and seedu.duke.model.Duke’s output."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": " * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "private void flip() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    db.flip();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    return db;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "You\u0027ll need to update the imports as follows:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "Now, we can go back to the `Main` class and change the event handler to use our new `DialogBox`. "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application and play around with it. "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 3](assets/DialogBoxesIteration3.png)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "whneo97"
        },
        "content": "You have successfully implemented a fully functional GUI for seedu.duke.model.Duke!  "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "1. While the GUI looks similar to the mockup, there are still parts that need to be refined. Try your hand at some of these tasks:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each DialogBox"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each ImageView and its Label"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "   * Clip the ImageView into a circle"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add background color to each dialog box"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "1. After attempting the changes, reflect critically on the following:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * What was the development workflow like?"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   * Is the code base well-organized?"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "-": 236,
      "whneo97": 7
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart4.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 4 – FXML "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "While we have produced a fully functional prototype, there are a few major problems with our application."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "1. The process of visually enhancing the GUI is long and painful:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   * Does the `TextField` need to be 330px or 325px wide? "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   * How much padding is enough padding to look good?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   Every small change requires us to rebuild and run the application.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Components are heavily dependent on each other:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   Why does `Main` need to know that `DialogBox` needs a `Label`? "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   What happens if we change the `Label` to a custom `ColoredLabel` in the future?  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    We need to minimize the amount of information each control needs to know about another."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    Otherwise, making changes in the future will break existing features."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. The code is untidy and long:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   Why is all the code in one place?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   The `Main` class attempts to do it all. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   Code for visual tweaks, listeners and even utility methods are all in one file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   This makes it difficult to find and make changes to existing code."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FXML is a XML-based language that allows us to define our user interface. Properties of JavaFX objects can be defined in the FXML file. For example:  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "The FXML snippet define a TextField similar to the one that we programmatically defined previous in Tutorial 2. Notice how concise FXML is compared to the plain Java version."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Let\u0027s return to seedu.duke.model.Duke and convert it to use FXML instead."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# Rebuilding the Scene using FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Scene Builder is a tool developed by Oracle and currently maintained by Gluon. It is a What-You-See-Is-What-You-Get GUI creation tool. [Download](https://gluonhq.com/products/scene-builder/#download) the appropriate version for your OS and install it."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Create the following files in `src/main/resources/view`:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.fxml**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.fxml**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s explore the provided FXML files in Scene Builder. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    Running the tool brings up the main screen."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    Select `Open Project` \u003e `src/main/resources/view/MainWindow.fxml`. Inspect each control and its properties."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   ![SceneBuilder opening MainWindow.fxml](assets/SceneBuilder.png)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the right accordion pane, you can modify the properties of the control that you have selected. Try changing the various settings and see what they do!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the left accordion, you can see that we have set the controller class to `MainWindow`. "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "We will get to that later."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Controller for MainWindow](assets/MainWindowController.png)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s repeat the process for `DialogBox`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   The main difference here is that DialogBox checks `Use fx:root construct` and _does not define a controller class_. "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Settings for DialogBox](assets/DialogBoxController.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "## Using Controllers"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": "As part of the effort to separate the code handling seedu.duke.model.Duke\u0027s logic and UI, let\u0027s _refactor_ the UI-related code to its own class."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "We call these UI classes _controllers_. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s implement the `MainWindow` controller class that we specified in `MainWindow.fxml`."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.java**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private seedu.duke.model.Duke duke;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void setDuke(seedu.duke.model.Duke d) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing seedu.duke.model.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "The `@FXML` annotation marks a `private` or `protected` member and makes it accessible to FXML despite its modifier."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "Without the annotation, we will have to make everything `public` and expose our UI to unwanted changes."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "The `FXMLLoader` will map the a control with a `fx:id` defined in FXML to a variable with the same name in its controller."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "Notice how in `MainWindow`, we can invoke `TextField#clear()` on `userInput` and access its content just as we did in the previous example."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Similarly, methods like private methods like `handleUserInput` can be used in FXML when annotated by `@FXML`. "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "## Using FXML in our application"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Let\u0027s create a new `Main` class as the bridge between the existing logic in `seedu.duke.model.Duke` and the UI in `MainWindow`."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "**Main.java**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "whneo97"
        },
        "content": " * A GUI for seedu.duke.model.Duke using FXML."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private seedu.duke.model.Duke duke \u003d new seedu.duke.model.Duke();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "Again, we can interact with the `AnchorPane` defined in the FXML as we would have if we created the `AnchorPane` ourselves."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "For our custom `DialogBox`, we did not define a controller so let\u0027s create a controller for it."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.java**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "When we create a new instance of `DialogBox`, we set both the controller and root Node to `DialogBox`. "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "From this point onwards we can interact with `DialogBox` as we have in the previous tutorials."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "The last change that we have to make is to point our `Launcher` class in the right direction:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "In `Launcher.java`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "//...    "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "[todo]: # (Discussion on the fx:root pattern.)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "1. Convert `MainWindow` to use the `fx:root` construct."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "1. Extend `MainWindow` to have a `Stage` as a root Node."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "1. Customize the appearance of the application further with CSS."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "-": 286,
      "whneo97": 8
    }
  },
  {
    "path": "tutorials/textUiTestingTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Text UI Testing Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "1. Create a folder `[project root]\\text-validation-test`"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add a `runtest.bat` (if you are on Windows) or `runtest.sh` (if you are on a *nix OS) into the folder, containing the script below.\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  `runtest.bat`:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   @ECHO OFF"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\seedu.duke.model.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   java -classpath ..\\bin seedu.duke.model.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   `runtest.sh`:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   ```shell"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "       mkdir ../bin"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/seedu.duke.model.Duke.java"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "   java -classpath ../bin seedu.duke.model.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   else"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "1. Update the `javac` and `java` commands in the script to match the name/location of your main class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `EXPECTED.txt` to the same folder, containing the expected output."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `input.txt` containing the input commands."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "1. Run the `.bat`/`.sh` file to execute the test."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: based on se-edu/addressbook-level2, adapted by Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "-": 69,
      "whneo97": 5
    }
  }
]
