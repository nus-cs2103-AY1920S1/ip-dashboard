[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    mainClassName \u003d \"duke.ui.Launcher\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "run{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 39,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "1. [Features](#1-features) \u003cbr/\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    1.1. [Adding new task](#11-add-new-task) : `todo`, `event`, `deadline` \u003cbr/\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    1.2. [Delete a task](#12-delete-a-task) : `delete` \u003cbr/\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    1.3. [Complete a task](#13-complete-a-task) : `done` \u003cbr/\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    1.4. [List all tasks](#14-list-all-tasks) : `list` \u003cbr/\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    1.5. [Tag a task](#15-tag-a-task): \u003cbr/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    * 1.5.1 [Add a tag](#151-add-a-tag) : `addtag` \u003cbr/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    * 1.5.2 [Delete a tag](#152-delete-a-tag) : `deltag` \u003cbr/\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    * 1.5.3 [Filter by tag](#153-filter-by-tag) : `findtag` \u003cbr/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    * 1.5.4 [List all tags](#154-list-all-tags) : `listtag` \u003cbr/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    1.6. [Filter by keyword](#16-filter-by-keyword) : `find` \u003cbr/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    1.7. [Exit Duke](#17-exit-duke) : `bye` \u003cbr/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "## 1. Features"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "### 1.1 Add new task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Adds a task to your task list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "There are three types of task: `todo` `event` `deadline` \u003cbr/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Format: \u003cbr/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`todo (description)`\u003cbr/\u003e "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`deadline (description) /by (dd/MM/yyyy HHmm)`\u003cbr/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`deadline (description) /by (dd/MM/yyyy HHmm) /tag (tag)`\u003cbr/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`event (description) /at (dd/MM/yyyy HHmm)`\u003cbr/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`event (description) /at (dd/MM/yyyy HHmm) /tag (tag)`\u003cbr/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Example: \u003cbr/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`todo borrow book` : Creates a Todo task \u003cbr/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`todo borrow book /tag school cs` : Creates a Todo task with tags `school` and `cs` \u003cbr/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`deadline lab /by 11/09/2019 2359` : Creates a Deadline task \u003cbr/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "### 1.2 Delete a task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Deletes a task from your list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Format: \u003cbr/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`delete (task number)` \u003cbr/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Example: \u003cbr/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`delete 3` : Deletes task number 3 \u003cbr/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "### 1.3 Complete a task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Completes a task in your list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Format:\u003cbr/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`done (task number)` \u003cbr/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Example: \u003cbr/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`done 3` : Mark task number 3 as completed \u003cbr/\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "###  1.4 List all tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Lists out all the tasks in your list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Format: \u003cbr/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`list` \u003cbr/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "### 1.5 Tag a task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Tags a task. Tags can only be one word."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Includes the various functionality: \u003cbr/\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "### 1.5.1 Add a tag"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Adds a tag to the specified task. \u003cbr/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Format: \u003cbr/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " `addtag (task number) (tag name)` \u003cbr/\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " Example: \u003cbr/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " `addtag 3 school` : Adds the tag `school` to task number 3 \u003cbr/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "### 1.5.2 Delete a tag"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Deletes a tag from a specified task. \u003cbr/\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Format: \u003cbr/\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " `deltag (task number) (tag name)` \u003cbr/\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " Example: \u003cbr/\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " `deltag 3 school` : Deletes tag `school` from task number 3 \u003cbr/\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "### 1.5.3 Filter by tag "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Filters tasks based on specified tag. \u003cbr/\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Format: \u003cbr/\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`findtag (tag name)` \u003cbr/\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Example: \u003cbr/\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`findtag school` : Filters out all the tasks with tag `school` \u003cbr/\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "### 1.5.4 List all tags"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Output a list of all tags. \u003cbr/\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Format: \u003cbr/\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`listtag` \u003cbr/\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "### 1.6 Filter by keyword"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Filters tasks based on specified keyword \u003cbr/\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Format: \u003cbr/\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`find (keyword)` \u003cbr/\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Example: \u003cbr/\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`find book` : Filters out all the task with the word `book` \u003cbr/\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "### 1.7 Exit Duke"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Exits from Duke. \u003cbr/\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "Format: \u003cbr/\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "waifonglee": 108,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a bot which tracks user\u0027s tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Storage to load, save and store user data. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Storage storage \u003d new Storage(\"data.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** TaskList to store all the tasks. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Boolean to check whether user is exiting Duke. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Previously saved data will be loaded and converted into a list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Otherwise, an empty list will be initialized."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return notice notifying the user of whether data is loaded."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String loadStorage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String s \u003d \"Hello i\u0027m Duke! What can i do for you?\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"Successfully loaded previous data. \\n\" + s;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return e.getMessage() + \"\\n\" + s;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Checks whether user is exiting Duke."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return boolean signifying whether user is exiting Duke."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Gets response to the user input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param input commands users entered to be executed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return response to the user to be printed out."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Command c \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            CommandResult result \u003d c.execute(tasks, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            isExit \u003d result.isExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return result.getFeedBack();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 63
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to add a deadline object to TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class AddDeadline extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Description and deadline of task entered by user.*/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String userIn;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            + \"%s\" + \"\\n\" + \"Now you have %d task(s) in the list.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_INPUT \u003d \"Invalid Input entered:\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            + \"deadline (desc) /by (date\u0026time) /tag (tags separated by spaces) -\u003e tags are optional\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes an AddDeadline Object with the user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn description and deadline of task entered by user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public AddDeadline(String userIn) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Adds a Deadline task object into the list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task newDl;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            boolean isTagged \u003d isTagged(userIn);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (isTagged) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                newDl \u003d createTagged(userIn);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                newDl \u003d createUntagged(userIn);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks.addTask(newDl);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            int taskNum \u003d tasks.getSize();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, newDl, taskNum));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean isTagged(String userIn) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return userIn.contains(\"/tag\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String[] getTaggedArgs(String userIn) throws ArrayIndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d new String[3];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] splitBy \u003d userIn.split(\"/by\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] splitTag \u003d splitBy[1].split(\"/tag\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[0] \u003d splitBy[0].trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[1] \u003d splitTag[0].trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[2] \u003d splitTag[1].trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (checkEmpty(args)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String[] getUntaggedArgs(String userIn) throws ArrayIndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] splitBy \u003d userIn.split(\" /by \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d new String[2];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[0] \u003d splitBy[0].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[1] \u003d splitBy[1].trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (checkEmpty(args)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Checks if arguments are empty strings."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param args args to be checked."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return if any argument is empty string."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean checkEmpty(String[] args) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        for (String a : args) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (a.isEmpty()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Deadline createTagged(String userIn) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d getTaggedArgs(userIn);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        HashSet\u003cTag\u003e tags \u003d Parser.parseTags(args[2]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new Deadline(args[0], args[1], tags);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Deadline createUntagged(String userIn) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d getUntaggedArgs(userIn);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new Deadline(args[0], args[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 118
    }
  },
  {
    "path": "src/main/java/duke/command/AddEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to add an event object to TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class AddEvent extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Description of event entered by user. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String userIn;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            + \"%s\" + \"\\n\" + \"Now you have %d task(s) in the list.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_INPUT \u003d \"Invalid Input entered\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            + \":event (desc) /at (date\u0026time) /tag (tags separated by spaces) -\u003e tags are optional\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes an Event object with the user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn description of event entered by user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public AddEvent(String userIn) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Adds an event object into the list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task newEvent;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            boolean isTagged \u003d isTagged(userIn);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (isTagged) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                newEvent \u003d createTagged(userIn);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                newEvent \u003d createUntagged(userIn);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks.addTask(newEvent);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            int taskNum \u003d tasks.getSize();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, newEvent, taskNum));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean isTagged(String userIn) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return userIn.contains(\"/tag\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String[] getTaggedArgs(String userIn) throws ArrayIndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d new String[3];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] splitBy \u003d userIn.split(\"/at\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] splitTag \u003d splitBy[1].split(\"/tag\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[0] \u003d splitBy[0].trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[1] \u003d splitTag[0].trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[2] \u003d splitTag[1].trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (checkEmpty(args)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String[] getUntaggedArgs(String userIn) throws ArrayIndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] splitBy \u003d userIn.split(\"/at\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d new String[2];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[0] \u003d splitBy[0].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[1] \u003d splitBy[1].trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (checkEmpty(args)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Checks if arguments are whitespaces."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param args args to be checked."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return if any argument is whitespace."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean checkEmpty(String[] args) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        for (String a : args) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (a.isEmpty()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Event createTagged(String userIn) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d getTaggedArgs(userIn);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        HashSet\u003cTag\u003e tags \u003d Parser.parseTags(args[2]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new Event(args[0], args[1], tags);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Event createUntagged(String userIn) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d getUntaggedArgs(userIn);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new Event(args[0], args[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 117
    }
  },
  {
    "path": "src/main/java/duke/command/AddTagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class AddTagCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** User input. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    String userIn;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"Tag has been added \\n %s\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_FORMAT \u003d \"Invalid input: addtag (valid task num) (1 tag only)\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_NUM_TAG \u003d \"One tag only\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes an instance of AddTagCommand with user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public AddTagCommand(String userIn) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Adds a tag to specified task by user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String[] args \u003d getArgs(userIn);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            boolean isOneWordTag \u003d isOneWord(args[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (isOneWordTag) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                Task t \u003d addTag(tasks, args);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS, t));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                throw new DukeException(MESSAGE_INVALID_NUM_TAG);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean isOneWord(String tags) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return !tags.contains(\" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String[] getArgs(String userIn) throws IndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d new String[2];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] splitInput \u003d userIn.split(\" \", 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[0] \u003d splitInput[0].trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[1] \u003d splitInput[1].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (checkEmpty(args)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Checks if arguments are whitespaces."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param args args to be checked."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return if any argument is whitespace."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean checkEmpty(String[] args) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        for (String a : args) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (a.isEmpty()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Task addTag(TaskList tasks, String[] args) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Tag tag \u003d new Tag(args[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        int taskInd \u003d Integer.parseInt(args[0]) - 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Task t \u003d tasks.getTask(taskInd);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tasks.alterTaskTag(taskInd, tag, true);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 89
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to add a Todo object to TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class AddTodo extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Description of task entered by user.*/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String userIn;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            + \"%s\" + \"\\n\" + \"Now you have %d task(s) in the list.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_INPUT \u003d \"Invalid description entered\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            + \"todo (desc) /tag (tags separated by space) -\u003e tags are optional\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes an AddTodo Object with the user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn description of task entered by user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public AddTodo(String userIn) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Adds a Todo task object into the list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task newTodo;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            boolean isTagged \u003d isTagged(userIn);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (isTagged) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                newTodo \u003d createTagged(userIn);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                newTodo \u003d createUntagged(userIn);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks.addTask(newTodo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            int taskNum \u003d tasks.getSize();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, newTodo, taskNum));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean isTagged(String userIn) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return userIn.contains(\"/tag\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String[] getTaggedArgs(String userIn) throws ArrayIndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d new String[2];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] splitTag \u003d userIn.split(\"/tag\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[0] \u003d splitTag[0].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[1] \u003d splitTag[1].trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (checkEmpty(args)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String[] getUntaggedArgs(String userIn) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d new String[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[0] \u003d userIn.trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (checkEmpty(args)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Checks if arguments are empty strings."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param args args to be checked."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return if any argument is empty string."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean checkEmpty(String[] args) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        for (String a : args) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (a.isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Todo createTagged(String userIn) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d getTaggedArgs(userIn);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        HashSet\u003cTag\u003e tags \u003d Parser.parseTags(args[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new Todo(args[0], tags);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Todo createUntagged(String userIn) throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d getUntaggedArgs(userIn);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new Todo(args[0]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 113
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command entered by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Executes the command accordingly and make changes to the TaskList of tasks and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * the storage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public abstract CommandResult execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 22
    }
  },
  {
    "path": "src/main/java/duke/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/** Represents the result of executing a command. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Represents whether user wants to exit the program. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Feedback to be printed to user. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String feedBack;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Constructs a CommandResult instance. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult(String feedBack) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.feedBack \u003d feedBack;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns whether the user wants to exit the program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return whether user wants to exit the program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Sets isExit to true."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns the feedback to be printed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return feedback for user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getFeedBack() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return feedBack;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to delete a task in the list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Index of task user wants to delete. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    String userIn;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d  \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            + \"%s\" + \"\\n\" + \"Now you have %d task(s) in the list.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_NUM \u003d \"Invalid task number entered\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a DeleteCommand with the user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn index of task user wants to delete."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public DeleteCommand(String userIn) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn.trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Deletes a specified task requested by the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if index in user input is invalid."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            int taskInd \u003d Integer.parseInt(userIn) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task delTask \u003d tasks.getTask(taskInd);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tasks.deleteTask(taskInd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            int taskNum \u003d tasks.getSize();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, delTask, taskNum));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_NUM);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteTagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class DeleteTagCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** User input. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    String userIn;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"Tag has been deleted \\n %s\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_FORMAT \u003d \"Invalid input: deltag (valid task num) (1 tag only)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_NUM_TAG \u003d \"One tag only\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes an instance of DeleteTagCommand with user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public DeleteTagCommand(String userIn) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn.trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Deletes a tag from specified task by user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String[] args \u003d getArgs(userIn);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            boolean isOneWordTag \u003d isOneWord(args[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (isOneWordTag) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                Task t \u003d delTag(tasks, args);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS, t));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                throw new DukeException(MESSAGE_INVALID_NUM_TAG);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean isOneWord(String tags) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return !tags.contains(\" \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String[] getArgs(String userIn) throws IndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d new String[2];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] splitInput \u003d userIn.split(\" \", 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[0] \u003d splitInput[0].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        args[1] \u003d splitInput[1].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (checkEmpty(args)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Checks if arguments are whitespaces."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param args args to be checked."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return if any argument is whitespace."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private boolean checkEmpty(String[] args) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        for (String a : args) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (a.isEmpty()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Task delTag(TaskList tasks, String[] args) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Tag tag \u003d new Tag(args[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        int taskInd \u003d Integer.parseInt(args[0]) - 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Task t \u003d tasks.getTask(taskInd);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tasks.alterTaskTag(taskInd, tag, false);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "waifonglee": 91
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to complete a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Index of task user has completed. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    String userIn;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"Nice! I\u0027ve marked this task as done: \\n\" + \"%s\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_NUM \u003d \"Invalid task number entered\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a DoneCommand with the user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn index of task user has completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public DoneCommand(String userIn) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Completes a specified task by marking it as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if index in user input is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            int taskInd \u003d Integer.parseInt(userIn) - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Task currTask \u003d tasks.getTask(taskInd);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            currTask.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, currTask));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_NUM);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to exit the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Saves the TaskList in the storage file and changes isExit to true to exit the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if there is a saving error."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        storage.saveAll(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        CommandResult result \u003d new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        result.exit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 26
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents command to search for a task by searching a keyword."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Keyword entered by user. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String userIn;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a FindCommand object with keyword entered by user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn keyword entered by user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public FindCommand(String userIn) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Finds tasks that contain the keyword entered by user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList representing a list of all tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage used for saving, loading and storing user data."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        List\u003cTask\u003e taskWithKey \u003d tasks.getStream()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                .filter(t -\u003e t.hasWord(userIn)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new CommandResult(listTasks(taskWithKey));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String listTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        sb.append(\"Here are the matching tasks in your list \\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        for (Task t:tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            sb.append(count + \": \" + t + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 49
    }
  },
  {
    "path": "src/main/java/duke/command/FindTagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to list out all the tasks tagged with a specific tag."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class FindTagCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Tag name entered by user. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String userIn;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Tag object. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected Tag tag;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a FindTagCommand object with tag name entered by user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param userIn tag name entered by user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public FindTagCommand(String userIn) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.userIn \u003d userIn;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tag \u003d new Tag(userIn);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Finds tasks that are tagged with the specific tag."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList representing a list of all tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage used for saving, loading and storing user data."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        List\u003cTask\u003e sameTagTasks \u003d tasks.getStream().filter(task -\u003e task.hasTag(tag))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new CommandResult(listTasks(sameTagTasks));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String listTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        sb.append(\"Here are the tasks under \" + userIn + \":\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            sb.append(count + \": \" + t + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 55
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to list out all the tasks created by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Lists out the tasks created by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new CommandResult(listTasks(tasks));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String listTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        sb.append(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        sb.append(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ListTagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a command to list out all the tags created by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class ListTagCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_LIST_TAG \u003d \"Here are all the tags: \\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Lists out the tags created by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks TaskList object which represents the list of tasks created by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param storage storage which loads, saves and stores data of user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return CommandResult result of executing the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new CommandResult(listTasks(tasks));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String listTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        sb.append(MESSAGE_LIST_TAG);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        sb.append(tasks.getAllTags());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 28
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents exception which arises from errors when running Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes the DukeException object with a message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param message message describing the error."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 14
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.AddDeadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.AddEvent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.AddTagCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.AddTodo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.DeleteTagCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.FindTagCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.command.ListTagCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a Parser which is used to convert user input into the necessary objects."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_INPUT \u003d \"Invalid Input entered\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_TAG \u003d \"Invalid Tag entered\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Converts commands from user into the corresponding command objects to execute the commands."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param command command from the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return Command object created from the command from user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if command is invalid."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public static Command parseCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String[] args \u003d getArgs(command.trim());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String commandWord \u003d args[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            boolean isOneWord \u003d isOneWord(command.trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (isOneWord) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                switch (commandWord.toLowerCase()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new ListCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new ExitCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"listtag\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new ListTagCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                switch (commandWord.toLowerCase()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new AddTodo(args[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new AddDeadline(args[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new AddEvent(args[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new DoneCommand(args[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new DeleteCommand(args[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new FindCommand(args[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"findtag\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new FindTagCommand(args[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"addtag\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new AddTagCommand(args[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                case \"deltag\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    return new DeleteTagCommand(args[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                    throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_INPUT);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static String[] getArgs(String command) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return command.split(\" \", 2);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static boolean isOneWord(String command) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return command.split(\" \").length \u003d\u003d 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Creates new Task objects depending on the saved data of the user"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * and adds it to the list of tasks. Completion of tasks are also checked"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * against the data and will be marked as done if the task is completed."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param loadData saved data from the user to be loaded."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks ArrayList of tasks created from loading previously saved data."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if description or time and date of tasks are invalid."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public static void parseLoad(String loadData, ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] args \u003d loadData.split(\" \\0 \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String taskType \u003d args[0];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t \u003d createTodo(args);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t \u003d createDeadline(args);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t \u003d createEvent(args);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assert t !\u003d null;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static Task createTodo(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String desc \u003d args[2];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isDone \u003d args[1].equals(\"1\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isTagged \u003d args.length \u003d\u003d 4;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isTagged) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String tags \u003d args[3];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t \u003d new Todo(desc, parseTags(tags));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t \u003d new Todo(desc);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static Task createDeadline(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String desc \u003d args[2];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isDone \u003d args[1].equals(\"1\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isTagged \u003d args.length \u003d\u003d 5;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String by \u003d args[3];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isTagged) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String tags \u003d args[4];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t \u003d new Deadline(desc, by, parseTags(tags));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static Task createEvent(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String desc \u003d args[2];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isDone \u003d args[1].equals(\"1\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isTagged \u003d args.length \u003d\u003d 5;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String at \u003d args[3];"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isTagged) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            String tags \u003d args[4];"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t \u003d new Event(desc, at, parseTags(tags));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Puts all the tags specified in a string in a hashset."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param t string of tags."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return hashset of tag objects."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public static HashSet\u003cTag\u003e parseTags(String t) throws DukeException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isWhiteSpace \u003d t.trim().isEmpty();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isWhiteSpace) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_TAG);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        HashSet\u003cTag\u003e tags \u003d new HashSet\u003cTag\u003e();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String[] splitTags \u003d t.split(\" \");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Arrays.stream(splitTags).map(Tag::new).forEach(tags::add);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 205
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a storage to store, load and save data of user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Path of the file. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** File object of the filePath. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected File dataFile;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_NO_PREV_DATA \u003d \"No previously saved data.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a Storage object with the specified file path."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param filePath file path of the file to be used to save data."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Loads any previous data of the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Data is converted into an ArrayList of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return ArrayList of tasks which were saved previously by the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if there is error loading the data or there is"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     *     no previous data."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            boolean shouldCreate \u003d dataFile.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (shouldCreate) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                throw new DukeException(MESSAGE_NO_PREV_DATA);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Scanner sc \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                String data \u003d sc.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                Parser.parseLoad(data, tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Saves the list of tasks created by the user into the file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks ArrayList of tasks to be saved."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if there is error saving the tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void saveAll(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            FileWriter fw \u003d new FileWriter(dataFile);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                Task currTask \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                fw.write(currTask.getSaveData());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 84
    }
  },
  {
    "path": "src/main/java/duke/tag/Tag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.tag;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Tag object tagged with a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private String tagName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a tag instance with its name."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tagName name of the tag."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Tag(String tagName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getTagName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tagName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tagName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tagName.hashCode();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return this \u003d\u003d o"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                || (o instanceof Tag"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                \u0026\u0026 tagName.equals(((Tag) o).getTagName()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 37
    }
  },
  {
    "path": "src/main/java/duke/tag/TagManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.tag;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Manages and keeps track of all the tags created."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class TagManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private HashMap\u003cTag, Integer\u003e tagList \u003d new HashMap\u003cTag, Integer\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes tags in taglist."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks tasklist which tracks all tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void initTags(TaskList tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tasks.getStream().map(t -\u003e t.getTagSet()).forEach(ts -\u003e putTags(ts));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Enters tags tagged with a task into the taglist."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Also keeps track of the number of tasks tagged with the tag."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tagSet set of tag tagged with the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void putTags(HashSet\u003cTag\u003e tagSet) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Iterator\u003cTag\u003e value \u003d tagSet.iterator();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        while (value.hasNext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Tag currTag \u003d value.next();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            addTag(currTag);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Adds a tag into the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tag tag to be added."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void addTag(Tag tag) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean hasTag \u003d tagList.containsKey(tag);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (hasTag) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            int oldVal \u003d tagList.get(tag);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tagList.replace(tag, oldVal + 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tagList.put(tag, 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Decreases the number of task associated with the tags of deleted task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Remove the tag from the taglist if count reaches 0."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tagSet set of tags tagged with the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void decreaseCount(HashSet\u003cTag\u003e tagSet) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Iterator\u003cTag\u003e value \u003d tagSet.iterator();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        while (value.hasNext()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Tag currTag \u003d value.next();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            rmTag(currTag);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Removes a tag from the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tag tag to be removed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void rmTag(Tag tag) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        int count \u003d tagList.get(tag) - 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (count \u003c\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tagList.remove(tag);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tagList.replace(tag, count);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Iterator\u003cTag\u003e value \u003d tagList.keySet().iterator();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        while (value.hasNext()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            sb.append(value.next() + \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 85
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a Task which has a deadline to adhere to."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** String which represents the deadline of the task. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Date object which represents the deadline of the task. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected Date dateBy;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Formatter object to format the deadline correctly. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected static SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_DATE \u003d \"Invalid Date entered.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Invalid Date format entered : dd/mm/yyyy HHmm\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a Deadline Object with the description of the task and the deadline of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * This object is initialized as uncompleted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param by deadline of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if deadline is of the wrong format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        checkValidBy();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a Deadline Object with the description, deadline and tags of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param by deadline of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tags tags tagged with tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if deadline is of the wrong format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Deadline(String description, String by, HashSet\u003cTag\u003e tags) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        super(description, tags);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        checkValidBy();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private void checkValidBy() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            this.dateBy \u003d formatter.parse(by);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            boolean isEquivDate \u003d formatter.format(dateBy).equals(by);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (!isEquivDate) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                throw new DukeException(MESSAGE_INVALID_DATE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_DATE_FORMAT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Checks whether the task contains a certain word."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param word word to search for."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return whether task contains the word."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public boolean hasWord(String word) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assert dateBy !\u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String s \u003d description + by;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return s.toLowerCase().contains(word.toLowerCase());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation to be used for saving data of this object."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object for saving."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getSaveData() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assert dateBy !\u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String status \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isTagged \u003d !tags.isEmpty();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isTagged) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"D \\0 \" + status + \" \\0 \" + description + \" \\0 \" + by + \" \\0 \" + getTags();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"D \\0 \" + status + \" \\0 \" + description + \" \\0 \" + by;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation of this object."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assert dateBy !\u003d null;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isTagged \u003d !tags.isEmpty();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isTagged) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (by: \" + dateBy + \")\" + \" \" + tags;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (by: \" + dateBy + \")\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 108
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents an Event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** String which represents the date and time of the event. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Date object which represents the date and time of the event. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected Date dateAt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Formatter object to format the date and time correctly. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected static SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_DATE \u003d \"Invalid Date entered.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Invalid Date format entered : dd/mm/yyyy HHmm\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes an Event Object with the description of the event and its date"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * and time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * This object is initialized as uncompleted."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of the event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param at date and time of the event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if date and time is of the wrong format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        checkValidAt();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes an Event Object with the description, date and time and tags."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of event."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param at date and time of event."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tags tags tagged with event."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if date and time is of wrong format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Event(String description, String at, HashSet\u003cTag\u003e tags) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        super(description, tags);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        checkValidAt();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private void checkValidAt() throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            this.dateAt \u003d formatter.parse(at);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            boolean isEquivDate \u003d formatter.format(dateAt).equals(at);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            if (!isEquivDate) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                throw new DukeException(MESSAGE_INVALID_DATE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_INVALID_DATE_FORMAT);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Checks whether the task contains a certain word."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param word word to search for."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return whether task contains the word."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public boolean hasWord(String word) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assert dateAt !\u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String s \u003d description + at;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return s.toLowerCase().contains(word.toLowerCase());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation to be used for saving data of this object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object for saving."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getSaveData() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assert dateAt !\u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String status \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isTagged \u003d !tags.isEmpty();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isTagged) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"E \\0 \" + status + \" \\0 \" + description + \" \\0 \" + at + \" \\0 \" + getTags();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"E \\0 \" + status + \" \\0 \" + description + \" \\0 \" + at;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation of this object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assert dateAt !\u003d null;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isTagged \u003d !tags.isEmpty();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isTagged) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (at: \" + dateAt + \")\" + \" \" + tags;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (at: \" + dateAt + \")\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 109
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** String which represents the description of the task. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Boolean which represents whether the task is completed. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** Hashset of tags belonging to this task. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected HashSet\u003cTag\u003e tags \u003d new HashSet\u003cTag\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_DUPLICATE_TAG \u003d \"Duplicate tag\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private static final String MESSAGE_NO_SUCH_TAG \u003d \"No such tag\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a Task Object with the description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Task Object initializes as uncompleted."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a Task Object with description and its tags."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tags tags belonging to the tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Task(String description, HashSet\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a status icon to represent whether this task is completed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return Status icon to represent whether this task is completed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Completes this task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Checks whether the task description contains a certain word."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param word word to search for."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return whether description contains the word."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public boolean hasWord(String word) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return description.toLowerCase().contains(word.toLowerCase());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation to be used for saving data of this object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object for saving."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getSaveData() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String status \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isTagged \u003d !tags.isEmpty();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isTagged) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return status + \" \\0 \" + description + \" \\0 \" + getTags();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return status + \" \\0 \" + description;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns string representation of all tags with this task for writing data."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return string representation of tags."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    protected String getTags() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Iterator value \u003d tags.iterator();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        while (value.hasNext()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            sb.append(value.next() + \" \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return sb.toString().trim();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Checks if this task is tagged with the specific tag."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tag tag to be checked against."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return if task is tagged with the tag."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public boolean hasTag(Tag tag) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tags.contains(tag);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Adds a tag into its list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tag tag to be added."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if its a duplicate tag."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void addTag(Tag tag) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (!tags.contains(tag)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tags.add(tag);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_DUPLICATE_TAG);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Removes a tag from its list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tag tag to be removed."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if there is no such tag."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void rmTag(Tag tag) throws DukeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (tags.contains(tag)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tags.remove(tag);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            throw new DukeException(MESSAGE_NO_SUCH_TAG);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public HashSet\u003cTag\u003e getTagSet() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation of this object."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        boolean isTagged \u003d !tags.isEmpty();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isTagged) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"[\" + getStatusIcon() + \"] \" + description + \" \" + tags;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 148
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.TagManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a list of every task created by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** ArrayList of tasks created by the user in this TaskList.*/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /** TagManager to manage all the tags created in this list of task. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private TagManager tm \u003d new TagManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a TaskList object with the specified list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Also initialises all the tags created."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tasks an existing list of tasks which will be initialized with the TaskList object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tm.initTags(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a TaskList object with an empty list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Adds a specified task to the list as well as the tags."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param task task to be added to the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tm.putTags(task.getTagSet());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Deletes or adds a tag to the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param ind index of task to be altered."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tag tag to be added or deleted."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param isAdding boolean to represent whether to add or delete the tag."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @throws DukeException if the task does not have the tag to delete or if the task already"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     *     has the tag."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void alterTaskTag(int ind, Tag tag, boolean isAdding) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Task task \u003d tasks.get(ind);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (isAdding) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            task.addTag(tag);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tm.addTag(tag);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            task.rmTag(tag);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            tm.rmTag(tag);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Deletes a specified task from the list as well as the tags."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param ind index of the task to be deleted from the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void deleteTask(int ind) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Task t \u003d tasks.get(ind);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tm.decreaseCount(t.getTagSet());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        tasks.remove(ind);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a list of all tags created."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return list of all tags."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getAllTags() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tm.toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a specified task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param ind index of the task to be returned."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return Specified task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Task getTask(int ind) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tasks.get(ind);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return Size of the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns list in stream format."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return stream of the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Stream\u003cTask\u003e getStream() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return tasks.stream();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation of the tasklist."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return string representation of tasklist."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            sb.append(i + 1 + \". \" + tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 119
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Represents a task to be done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a Todo object with the description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * This object is initialized as uncompleted."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Initializes a Todo object with description and tags of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param tags tags tagged with the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public Todo(String description, HashSet\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        super(description, tags);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation to be used for saving data of this object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object for saving."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String getSaveData() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return \"T \\0 \" + super.getSaveData();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a string representation of this object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return String representation of this object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 47
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private DialogBox(String text, Image img, String color) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        dialog.setStyle(\"-fx-background-color:\" + color + \"; -fx-background-radius: 20\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        getCircleImg(img, displayPicture);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a DialogBox that represents user\u0027s input, with their image."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param text user\u0027s input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param img user\u0027s image"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return DialogBox representing user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return new DialogBox(text, img, \"MISTYROSE\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Returns a DialogBox that represents Duke\u0027s response to user\u0027s command, with their image."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param text Duke\u0027s response to user\u0027s command."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param img Duke\u0027s image."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @return DialogBox representing Duke."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        var db \u003d new DialogBox(text, img, \"LAVENDER\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Fills a circle with the image given to obtain a circular image."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param img image to be filled in the circle."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param cir circle which will be filled by image."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void getCircleImg(Image img, Circle cir) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        cir.setStroke(Color.LIGHTPINK);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        cir.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 87
    }
  },
  {
    "path": "src/main/java/duke/ui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "waifonglee": 13
    }
  },
  {
    "path": "src/main/java/duke/ui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        duke.getResponse(\"Bye\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "waifonglee": 38
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/wooyoo.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Sets duke to a Duke object to link MainWindow to it."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * @param d Duke object to link MainWindow to."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                DialogBox.getDukeDialog(duke.loadStorage(), dukeImage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        if (duke.isExit()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 66
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cCircle fx:id\u003d\"displayPicture\" centerX\u003d\"250.0\" centerY\u003d\"250.0\" radius\u003d\"34.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"603.0\" prefWidth\u003d\"610.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"3.0\" layoutY\u003d\"561.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"533.0\" style\u003d\"-fx-background-color: snow;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"534.0\" layoutY\u003d\"561.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-radius: 10; -fx-background-color: powderblue;\" text\u003d\"Enter\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"2.0\" prefHeight\u003d\"560.0\" prefWidth\u003d\"610.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"563.0\" prefWidth\u003d\"586.0\" style\u003d\"-fx-background-color: azure;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 19
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void testToString() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assertEquals(\"[D][✘] do 2103 project (by: Sat Sep 14 23:59:00 SGT 2019)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                new Deadline(\"do 2103 project\", \"14/09/2019 2359\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void testGetSaveData() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assertEquals(\"D \\0 0 \\0 test \\0 26/08/2019 1400\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                new Deadline(\"test\", \"26/08/2019 1400\").getSaveData());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 19
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void testToString() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assertEquals(\"[T][✘] do 2103 project\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                new Todo(\"do 2103 project\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waifonglee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    public void testGetSaveData() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "        assertEquals(\"T \\0 0 \\0 test\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "                new Todo(\"test\").getSaveData());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waifonglee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waifonglee": 19
    }
  }
]
