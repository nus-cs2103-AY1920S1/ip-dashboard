[
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "class ByeCommand implements Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 13
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "interface Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "    List\u003cString\u003e run(String[] words) throws DukeException, IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    default boolean isExit() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 10
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Deadline extends TimeTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Deadline(String description, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    static Command getCommand(List\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return words -\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "            List\u003cString\u003e wordList \u003d List.of(words);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "            int separator \u003d wordList.indexOf(\"/by\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "            if (separator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"A deadline must have a time.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } else if (separator \u003d\u003d 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } else if (separator \u003d\u003d words.length - 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String description \u003d String.join(\" \", wordList.subList(1, separator));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String time \u003d String.join(\" \", wordList.subList(separator + 1, words.length));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Task task \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "            storage.store(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return List.of(\"Got it. I\u0027ve added this task:\", \"  \" + task,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "                    \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getSaveString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"D|\" + super.getSaveString() + \"|\" + time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getTimeString() + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 38
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    DeleteCommand(List\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d tasks.remove(Integer.parseInt(words[1]) - 1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(\"Noted. I\u0027ve removed this task:\", \"  \" + task,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 20
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    DoneCommand(List\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d tasks.get(Integer.parseInt(words[1]) - 1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(\"Nice! I\u0027ve marked this task as done:\", \"  \" + task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "        printMessage(List.of(\"Hello! I\u0027m Duke\", \"What can I do for you?\"));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Storage storage \u003d new Storage(\"tasks.txt\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cTask\u003e tasks \u003d storage.load();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"todo\", ToDo.getCommand(tasks, storage));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"deadline\", Deadline.getCommand(tasks, storage));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"event\", Event.getCommand(tasks, storage));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"list\", new ListCommand(tasks));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"done\", new DoneCommand(tasks, storage));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"delete\", new DeleteCommand(tasks, storage));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"bye\", new ByeCommand());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        boolean exit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        while (!exit \u0026\u0026 input.hasNext()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String[] words \u003d input.nextLine().split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "                Command command \u003d parser.parse(words);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "                printMessage(command.run(words));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "                exit \u003d command.isExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "                printMessage(List.of(e.getMessage()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Prints the given list of messages to the standard output"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param messages the list of messages to print"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static void printMessage(List\u003cString\u003e messages) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "            System.out.println(\"     \" + message);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 42,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(\"☹ OOPS!!! \" + message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Event extends TimeTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Event(String description, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    static Command getCommand(List\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return words -\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "            List\u003cString\u003e wordList \u003d List.of(words);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "            int separator \u003d wordList.indexOf(\"/at\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "            if (separator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"An event must have a time.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } else if (separator \u003d\u003d 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } else if (separator \u003d\u003d words.length - 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String description \u003d String.join(\" \", wordList.subList(1, separator));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String time \u003d String.join(\" \", wordList.subList(separator + 1, words.length));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Task task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "            storage.store(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return List.of(\"Got it. I\u0027ve added this task:\", \"  \" + task,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "                    \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getSaveString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"E|\" + super.getSaveString() + \"|\" + time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getTimeString() + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 38
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "class ListCommand implements Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    ListCommand(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        messages.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "            messages.add(i + 1 + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return messages;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 20
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Map\u003cString, Command\u003e commands \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void register(String name, Command command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "        commands.put(name, command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Command parse(String[] words) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Command command \u003d commands.get(words[0]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 18
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Storage(String location) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        path \u003d Paths.get(location);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void store(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e save \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "            save.add(task.getSaveString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Files.write(path, save);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "            for (String line : Files.readAllLines(path)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "                tasks.add(parseTask(line));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String unescape(String str) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return str.replace(\"\\\\p\", \"|\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Task parseTask(String line) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String[] data \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "        switch (data[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "                task \u003d new ToDo(unescape(data[2]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "                task \u003d new Deadline(unescape(data[2]), unescape(data[3]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "                task \u003d new Event(unescape(data[2]), unescape(data[3]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "        if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 61
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getSaveString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        int doneInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return doneInt + \"|\" + description.replace(\"|\", \"\\\\p\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 27
    }
  },
  {
    "path": "src/main/java/TimeTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "class TimeTask extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private LocalDateTime time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    TimeTask(String description, String timeString) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        time \u003d LocalDateTime.parse(timeString, formatter);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getTimeString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return DateTimeFormatter.ofPattern(\"yyyy MMMM dd HHmm\").format(time);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 16
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    static Command getCommand(List\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return words -\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "            if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String[] nameArr \u003d Arrays.copyOfRange(words, 1, words.length);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Task task \u003d new ToDo(String.join(\" \", nameArr));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "            storage.store(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return List.of(\"Got it. I\u0027ve added this task:\", \"  \" + task,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "                    \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        };"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getSaveString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"T|\" + super.getSaveString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 32
    }
  }
]
