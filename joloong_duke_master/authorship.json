[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joloong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joloong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joloong"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joloong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joloong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joloong"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joloong"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joloong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joloong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joloong"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joloong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joloong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joloong"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joloong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joloong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joloong"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joloong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joloong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joloong": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joloong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joloong"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joloong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joloong"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joloong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joloong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joloong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joloong": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joloong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joloong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joloong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joloong"
        },
        "content": "     * Main method."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joloong"
        },
        "content": "     * "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joloong"
        },
        "content": "     * @param args arguments passed into main"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joloong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joloong"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joloong"
        },
        "content": "        ArrayList\u003cTask\u003e task \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joloong"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joloong"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joloong"
        },
        "content": "        String textInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joloong"
        },
        "content": "        while (!textInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joloong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joloong"
        },
        "content": "                if (textInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    String isPlural \u003d counter \u003d\u003d 1 ? \"is\" : \"are\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    String taskIfPlural \u003d counter \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    System.out.println(\"Here \" + isPlural + \" the \" + taskIfPlural + \" in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d counter; i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joloong"
        },
        "content": "                        System.out.println(i + \".\" + task.get(i - 1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joloong"
        },
        "content": "                } else if (textInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    if (textInput.equals(\"done\") || textInput.equals(\"done \")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joloong"
        },
        "content": "                        throw new DukeException(\"OOPS!!! Index required.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    int completedIndex \u003d Integer.parseInt(textInput.replaceFirst(\"done \", \"\")) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    if (completedIndex \u003c 0 || completedIndex \u003e\u003d counter) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joloong"
        },
        "content": "                        throw new DukeException(\"OOPS!!! Index not found.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    Task markAsDoneTask \u003d task.get(completedIndex);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    markAsDoneTask.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    System.out.println(markAsDoneTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joloong"
        },
        "content": "                } else if (textInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    if (textInput.equals(\"todo\") || textInput.equals(\"todo \")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joloong"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    String description \u003d textInput.replaceFirst(\"todo \", \"\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    task.add(new Todo(description));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    counter \u003d (new Duke()).printAddedTask(task, counter);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joloong"
        },
        "content": "                } else if (textInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    if (textInput.equals(\"deadline\") || textInput.equals(\"deadline \")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joloong"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    String removeTaskWord \u003d textInput.replaceFirst(\"deadline \", \"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    String[] taskSplit \u003d removeTaskWord.split(\" /by \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    task.add(new Deadline(taskSplit[0], taskSplit[1]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    counter \u003d (new Duke()).printAddedTask(task, counter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joloong"
        },
        "content": "                } else if (textInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    if (textInput.equals(\"event\") || textInput.equals(\"event \")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joloong"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    String removeTaskWord \u003d textInput.replaceFirst(\"event \", \"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    String[] taskSplit \u003d removeTaskWord.split(\" /at \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    task.add(new Event(taskSplit[0], taskSplit[1]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    counter \u003d (new Duke()).printAddedTask(task, counter);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joloong"
        },
        "content": "                } else if (textInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    if (textInput.equals(\"delete\") || textInput.equals(\"delete \")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joloong"
        },
        "content": "                        throw new DukeException(\"OOPS!!! Index required.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    int deletedIndex \u003d Integer.parseInt(textInput.replaceFirst(\"delete \", \"\")) - 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    if (deletedIndex \u003c 0 || deletedIndex \u003e\u003d counter) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joloong"
        },
        "content": "                        throw new DukeException(\"OOPS!!! Index not found.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    Task deletedTask \u003d task.remove(deletedIndex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    counter--;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    String taskIfPlural \u003d counter \u003c\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    System.out.println(deletedTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    System.out.println(\"Now you have \" + counter + \" \" + taskIfPlural + \" in the list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joloong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joloong"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joloong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joloong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joloong"
        },
        "content": "                System.err.println(e);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joloong"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joloong"
        },
        "content": "                textInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joloong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joloong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joloong"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joloong"
        },
        "content": "        // Close the scanner"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joloong"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joloong"
        },
        "content": "    private int printAddedTask(ArrayList\u003cTask\u003e task, int counter) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joloong"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task.get(counter));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joloong"
        },
        "content": "        counter++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joloong"
        },
        "content": "        String taskIfPlural \u003d counter \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joloong"
        },
        "content": "        System.out.println(\"Now you have \" + counter + \" \" + taskIfPlural + \" in the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joloong"
        },
        "content": "        return counter;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joloong": 102,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joloong"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joloong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joloong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joloong"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joloong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joloong": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joloong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joloong"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joloong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joloong"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joloong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joloong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joloong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joloong": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joloong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joloong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joloong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joloong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joloong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joloong"
        },
        "content": "        // return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joloong"
        },
        "content": "        return isDone ? \"O\" : \"X\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joloong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joloong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joloong"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joloong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joloong": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joloong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joloong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joloong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joloong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joloong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joloong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joloong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joloong": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joloong"
        },
        "content": "Hello I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joloong"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joloong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joloong"
        },
        "content": "[T][X] sleep"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joloong"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joloong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joloong"
        },
        "content": "[T][X] eat"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joloong"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joloong"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joloong"
        },
        "content": "1.[T][X] sleep"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joloong"
        },
        "content": "2.[T][X] eat"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joloong"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "joloong": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joloong"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joloong"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joloong"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joloong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "joloong": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joloong"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joloong"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joloong"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joloong"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joloong"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joloong"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joloong"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\Event.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\Todo.java ..\\src\\main\\java\\DukeException.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joloong"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joloong"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joloong"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joloong"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joloong"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joloong"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joloong"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joloong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joloong"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joloong"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "joloong": 21
    }
  }
]
