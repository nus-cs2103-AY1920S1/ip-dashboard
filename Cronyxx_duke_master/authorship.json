[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\tid \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\tstandardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 33,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "T | 1 | dkjsadksaj"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 1
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        assert text !\u003d null : \" Text is null\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        assert img !\u003d null : \" Img is null\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        displayPicture.setClip(new Circle(50, 50, 50));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        dialog.setPadding(new Insets(10, 10, 10, 10));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 70
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.ui.UserInterface;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Duke is a task manager which allows users to organise their tasks by adding different types"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * of tasks, list out the tasks, marking the tasks as done, deleting the task and storing the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * tasks into a file so that they can be retrieved the next time the user uses the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * This application reads word by word so any additional arguments would be ignored."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private MyList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private UserInterface ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a new Duke application."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        storage \u003d new Storage(\"./data/\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            taskList \u003d storage.loadList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            ui.printException(e.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        assert input !\u003d null : \" Input cannot be null\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return ui.printException(e.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 54,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.ui.DukeUserInterface;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.ui.UserInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private DukeUserInterface uI \u003d new UserInterface();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(uI.printIntro(), dukeImage));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        assert !input.equals(\"bye\") : \" Application should have exited\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 67
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeFileSaveException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeWrongDateFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.storage.DukeStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.ui.DukeUserInterface;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a command which contains an execute method that adds a task to the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * The AddCommand object requires the type, description and datetime of the task that is to be"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * added to the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a command which contains the task to be added."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param type Type of Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param description Description of Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param dateTime Date and Time of Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public AddCommand(String type, String description, String dateTime) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Adds the specified task to the task list, stores the task into the file and"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * prints the result."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskList The main task list of the application."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param ui The main user interface of the application."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param storage The main storage of the application."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeFileSaveException Thrown when the new task cannot be added to the file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeWrongDateFormatException Thrown when the user enters the wrong format for the"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * date and time of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String execute(MyList taskList, DukeUserInterface ui, DukeStorage storage) throws DukeFileSaveException,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            DukeWrongDateFormatException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            task \u003d new TodoTask(description);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } else if (type.equals((\"deadline\"))) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            task \u003d new DeadlineTask(description, dateTime);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            task \u003d new EventTask(description, dateTime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            storage.updateList(taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeFileSaveException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return ui.printAddTaskMsg(task, taskList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 70
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.storage.DukeStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.ui.DukeUserInterface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Base class for the other commands. Specifies the abstract method that is required to be implemented"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * by the children commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Executes what the command is suppose to do."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskList The main task list of the application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param ui The main user interface of the application."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param storage The main storage of the application."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeException Occurs when parts of the command cannot be executed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public abstract String execute(MyList taskList, DukeUserInterface ui, DukeStorage storage) throws DukeException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns true when a exit command is called. Else, returns false."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return Boolean which states whether to exit the application."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeFileSaveException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeTaskNotPresentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.storage.DukeStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.ui.DukeUserInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a command which contains an execute method that deletes a task from the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * This object accepts task number of the task in the list that is to be deleted from the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a command which contains the task to be deleted."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskNum The number of the task specified by the task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Deletes the specified task from the task list, updates the file and prints the result."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskList The main task list of the application."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param ui The main user interface of the application."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param storage The main storage of the application."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeTaskNotPresentException Thrown when the index of the task is out of bounds."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeFileSaveException Thrown when the file update fails."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String execute(MyList taskList, DukeUserInterface ui, DukeStorage storage) throws DukeTaskNotPresentException,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            DukeFileSaveException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        if (taskNum \u003c 1 || taskNum \u003e taskList.getNumTasks()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeTaskNotPresentException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        Task task \u003d taskList.removeTask(taskNum);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            storage.updateList(taskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeFileSaveException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return ui.printDeleteMsg(task, taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 51
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeFileSaveException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeTaskNotPresentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.storage.DukeStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.ui.DukeUserInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a command which contains an execute method that marks a task in the task list as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * The DoneCommand object requires the task number of the task that is to be marked in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a command which contains the task to be mark as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskNum The number of the task specified by the task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Mark the specified task from the task list as done, updates the file and prints the result."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskList The main task list of the application."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param ui The main user interface of the application."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param storage The main storage of the application."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeTaskNotPresentException Thrown when the index of the task is out of bounds."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeFileSaveException Thrown when the file update fails."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String execute(MyList taskList, DukeUserInterface ui, DukeStorage storage) throws DukeTaskNotPresentException,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            DukeFileSaveException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        if (taskNum \u003c 1 || taskNum \u003e taskList.getNumTasks()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeTaskNotPresentException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        Task task \u003d taskList.getTask(taskNum);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            storage.updateList(taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeFileSaveException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return ui.printDoneMsg(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.storage.DukeStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.ui.DukeUserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a command which contains an execute method that exits the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints the exit message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskList The main task list of the application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param ui The main user interface of the application."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param storage The main storage of the application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String execute(MyList taskList, DukeUserInterface ui, DukeStorage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return ui.printExitMsg();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns true when an exit command is called. Else, returns false."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return Boolean which states whether to exit the application."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 33
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.storage.DukeStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.ui.DukeUserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a command which contains an execute method that lists tasks whose description"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * contains the String word."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String word;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises the a command which contains the word to be used to find the list of"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param word String word to be used to check if a task contains it."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public FindCommand(String word) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Finds the list of tasks from the taskList that contains the String word in the"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * tasks\u0027 description. The list of tasks will then be printed out."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *  @param taskList The main task list of the application."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param ui The main user interface of the application."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param storage The main storage of the application."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String execute(MyList taskList, DukeUserInterface ui, DukeStorage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        MyList resultList \u003d taskList.findTasks(word);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return ui.printFindList(resultList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.storage.DukeStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.ui.DukeUserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a command which contains an execute method that lists the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Lists all the tasks in the task list and prints them out."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *  @param taskList The main task list of the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param ui The main user interface of the application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param storage The main storage of the application."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String execute(MyList taskList, DukeUserInterface ui, DukeStorage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return ui.printList(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 23
    }
  },
  {
    "path": "src/main/java/duke/constant/Consts.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a class of constants that is used within the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public final class Consts {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Logo of Duke application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    //To prevent users from creating an instance of this class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private Consts() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        throw new AssertionError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Format of input of date time that the user is supposed to follow."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public static final SimpleDateFormat DATE_TIME_FORMATTER \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Format of date time that is to be stored in the file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public static final SimpleDateFormat DATE_TIME_OUTPUT_FORMATTER \u003d new SimpleDateFormat(\"d LLL yyyy h:mm a\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 34
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeCorruptedDataException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the exception thrown when the data within the file does not fit the required format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeCorruptedDataException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Specifies the message to be printed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which is the message of the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"%s Data from file is corrupted!\", super.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeEmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the exception thrown when the description of the task is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeEmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises an exception with type of the task specified."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param type Type of Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public DukeEmptyDescriptionException(String type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Specifies the message to be printed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which is the message of the exception."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"%s The description of %s cannot be empty!\", super.toString(), type);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the base class of an Exception in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Specifies the message to be printed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which is the message of the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return \" \\u2639 OOPS!!! \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeFileSaveException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the exception thrown when updating the file fails."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeFileSaveException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Specifies the message to be printed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which is the message of the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"%s Failed to save to file!\", super.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeIntFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the exception thrown when the input is not an Integer."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeIntFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises the exception that specifies the type of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param type Type of Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public DukeIntFormatException(String type) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Specifies the message to be printed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which is the message of the exception."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"%s Please add an integer after %s!\", super.toString(), type);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 25
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeMissingDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the exception thrown when the input of datetime is missing."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeMissingDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises the exception that specifies the type of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param type Type of Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public DukeMissingDateTimeException(String type) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Specifies the message to be printed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which is the message of the exception."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"%s Datetime for %s must be specified!\", super.toString(), type);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 25
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeMissingFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the exception thrown when the file does not exist."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeMissingFileException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Specifies the message to be printed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which is the message of the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"%s File cannot be found!\", super.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeMissingKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the exception thrown when the keyword after the command is missing."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeMissingKeywordException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Specifies the message to be printed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which is the message of the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"%s Keyword cannot be found!\", super.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeTaskNotPresentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the exception thrown when the input index of the task is out of bounds of the"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * task list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeTaskNotPresentException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Specifies the message to be printed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which is the message of the exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"%s This task is not in list!\", super.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the exception thrown when an invalid command is entered."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeUnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Specifies the message to be printed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which is the message of the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"%s I\u0027m sorry, but I don\u0027t know what that means :-(\", super.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeWrongDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the exception thrown when the input format for datetime is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeWrongDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Specifies the message to be printed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which is the message of the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"%s Please follow the correct datetime format(dd/mm/yyyy HHMM)\", super.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 16
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a class that takes in inputs and translates them into different commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Takes in a string input and convert the input into a command which performs a set of"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * instructions on the task list, ui and storage."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param input String that contains the input of the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return A command that execute a set of instructions."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeException Thrown when there is a Duke exception."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        String[] arguments \u003d input.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        switch (arguments[0]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            int num;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                num \u003d Integer.parseInt(arguments[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                throw new DukeIntFormatException(arguments[0]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            if (arguments[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                return new DoneCommand(num);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                return new DeleteCommand(num);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            if (arguments.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                throw new DukeEmptyDescriptionException(arguments[0]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            int index \u003d -1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            if (arguments[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                index \u003d findIndexByToken(arguments, \"/by\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                    throw new DukeMissingDateTimeException(arguments[0]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            } else if (arguments[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                index \u003d findIndexByToken(arguments, \"/at\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                    throw new DukeMissingDateTimeException(arguments[0]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            if (arguments[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                String description \u003d parseArguments(arguments, 1, arguments.length);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                return new AddCommand(arguments[0], description, \"00/00/0000 0000\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                String description \u003d parseArguments(arguments, 1, index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                String dateTime \u003d parseArguments(arguments, index + 1, arguments.length);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                return new AddCommand(arguments[0], description, dateTime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            if (arguments.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                throw new DukeMissingKeywordException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return new FindCommand(arguments[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    //returns index of token if found, else returns -1"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    //stops at first occurrence of token"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private static int findIndexByToken(String[] array, String token) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        assert array !\u003d null : \" String array is null\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        assert token !\u003d null : \" Token is null\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        for (int i \u003d 1; i \u003c array.length; i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            if (array[i].equals(token)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    // Combines words into a sentence"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private static String parseArguments(String[] array, int start, int end) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        assert array !\u003d null : \" String array cannot be null\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        assert start \u003e\u003d 0 : \" Start cannot be less than 0\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        assert end \u003e\u003d 0 : \" End cannot be less than 0\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        if (start \u003e\u003d end) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        StringBuilder result \u003d new StringBuilder(array[start]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        for (int i \u003d start + 1; i \u003c end; i++) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            result.append(\" \").append(array[i]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 116
    }
  },
  {
    "path": "src/main/java/duke/storage/DukeStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeCorruptedDataException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeMissingFileException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeWrongDateFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents an Interface for a class responsible for saving and loading of files. Includes"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * methods such as updating the list in the file and retrieving data from the file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public interface DukeStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Updates the list in the file by writing to the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskList Current task list stored in the application."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws IOException Thrown when an error occurred while writing to a file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void updateList(MyList taskList) throws IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Reads the data stored in the file which would then be use to generate a task list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * that would be returned."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return A list from the data loaded from the file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeMissingFileException Thrown when the file does not exist."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeCorruptedDataException Thrown when the data of the file is corrupted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeWrongDateFormatException Thrown when the datetime Format is wrong."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public MyList loadList() throws DukeMissingFileException, DukeCorruptedDataException, DukeWrongDateFormatException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 34
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeCorruptedDataException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeMissingFileException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeWrongDateFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the storage of the application. Has methods that support the updating"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * of file and loading data from the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class Storage implements DukeStorage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String directory;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises the Storage with the directory of which the file resides and the name"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * of the file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param directory String of the directory the file is in."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public Storage(String directory) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.directory \u003d directory;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.filename \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Updates the data in the file by writing to the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskList Current task list stored in the application."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws IOException Thrown when writing to file fails."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void updateList(MyList taskList) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        FileWriter fw \u003d new FileWriter(directory + filename, false);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            StorageItem sI;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            if (task.getType().equals(\"T\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                sI \u003d new StorageItem(task.getType(), task.getIsDone(), task.getDescription());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                sI \u003d new StorageItem(task.getType(), task.getIsDone(), task.getDescription(), task.getDateTime());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            fw.write(sI.getData() + System.lineSeparator());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Reads the data stored in the file which would then be use to generate a task list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * that would be returned."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return A list from the data loaded from the file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeMissingFileException Thrown when the file does not exist."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeCorruptedDataException Thrown when the data of the file is corrupted."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeWrongDateFormatException Thrown when the datetime Format is wrong."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public MyList loadList() throws DukeMissingFileException, DukeCorruptedDataException, DukeWrongDateFormatException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        MyList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        File file \u003d new File(directory + filename);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                Task task \u003d dataParser(sc.nextLine());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeMissingFileException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private Task dataParser(String data) throws DukeCorruptedDataException, DukeWrongDateFormatException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        assert data !\u003d null : \" Data is null\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        String[] arguments \u003d data.split(\" \\\\| \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        isDone \u003d arguments[1].equals(\"1\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        switch (arguments[0]) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return new TodoTask(arguments[2], isDone);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return new DeadlineTask(arguments[2], arguments[3], isDone);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return new EventTask((arguments[2]), arguments[3], isDone);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeCorruptedDataException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 105
    }
  },
  {
    "path": "src/main/java/duke/storage/StorageItem.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.constant.Consts;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a data unit in the file. It is represented by a String."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class StorageItem {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String data;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a StorageItem using the type of the task, a boolean which states if the"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * task is done and the description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param type Type of Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param isDone Boolean that states whether the task is done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public StorageItem(String type, boolean isDone, String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        data \u003d String.format(\"%s | %d | %s\", type, isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a StorageItem using the type of the task, a boolean which states if the"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * task is done, description of the task and the datetime requirement of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param type Type of Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param isDone Boolean that states whether the task is done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param datetime Date object of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public StorageItem(String type, boolean isDone, String description, Date datetime) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        data \u003d String.format(\"%s | %d | %s | %s\", type, isDone ? 1 : 0, description, Consts.DATE_TIME_FORMATTER.format(datetime));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns the data of the Storage Item."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String that contains the formatted data to be stored."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return this.data;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 45
    }
  },
  {
    "path": "src/main/java/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.constant.Consts;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeWrongDateFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a deadline task in the application that extends the Task class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a deadline task with the description and date and time of the deadline task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param deadline String of datetime of the deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeWrongDateFormatException Thrown when the String deadline is of the wrong format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public DeadlineTask(String description, String deadline) throws DukeWrongDateFormatException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            this.dateTime \u003d Consts.DATE_TIME_FORMATTER.parse(deadline);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeWrongDateFormatException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a deadline task with the description, date and time and a boolean representing"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * the completion state of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param deadline String of datetime of the deadline task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param isDone Boolean representing the completion state of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeWrongDateFormatException Thrown when the String deadline is of the wrong format."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public DeadlineTask(String description, String deadline, boolean isDone) throws DukeWrongDateFormatException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            this.dateTime \u003d Consts.DATE_TIME_FORMATTER.parse(deadline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeWrongDateFormatException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns A string that includes the type task and the toString of Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String that adds the type of the task to the toString method of Task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), Consts.DATE_TIME_OUTPUT_FORMATTER.format(dateTime));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 58
    }
  },
  {
    "path": "src/main/java/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.constant.Consts;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeWrongDateFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents an event task in the application that extends the Task class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises an event task with the description and date and time of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param startDate String of datetime of the event task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeWrongDateFormatException Thrown when the String startDate is of the wrong format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public EventTask(String description, String startDate) throws DukeWrongDateFormatException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            this.dateTime \u003d Consts.DATE_TIME_FORMATTER.parse(startDate);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeWrongDateFormatException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises an event task with the description, date and time and a boolean representing"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * the completion state of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param startDate String of datetime of the event task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param isDone Boolean representing the completion state of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @throws DukeWrongDateFormatException Thrown when the String startDate is of the wrong format."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public EventTask(String description, String startDate, boolean isDone) throws DukeWrongDateFormatException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            this.dateTime \u003d Consts.DATE_TIME_FORMATTER.parse(startDate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeWrongDateFormatException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns A string that includes the type task, start date of the event and the"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * toString of Task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String that adds the type of the task and start date to the toString method of Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), Consts.DATE_TIME_OUTPUT_FORMATTER.format(dateTime));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a task in the application. A task has four protected fields, the description"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * of the task, the state of completion of the task, the type of the task and the date time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * information of the task. The Task class supports the getter methods to the four fields,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * as well as getting the icon (tick and cross) which corresponds to the isDone field. The"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Task class also supports a markAsDone method which sets the isDone field to true."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    protected Date dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a Task that has a default isDone field of false."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a Task where the user can specify the value of the isDone field."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param isDone Boolean that shows the state of completion of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns a tick or a cross depending on the field isDone."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return Icon which shows a tick or a cross."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Sets the boolean isDone to true."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String that represents the description of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String that represents the type of the task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns the boolean of whether the task is completed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return Boolean value of isDone."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns the datetime of the task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return Date object of the task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public Date getDateTime() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns A string that includes the status icon and the description of the task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String with status icon and description of task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 98
    }
  },
  {
    "path": "src/main/java/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents a todo task in the application that extends the Task class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * The dateTime field in this class is set to the default Date object as it is not used."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a todo task with type set to \"T\" and a default date Time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.dateTime \u003d new Date();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises a todo task where the user can specify the value of the isDone field."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param isDone Boolean that shows the state of completion of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public TodoTask(String description, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.dateTime \u003d new Date();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns A string that includes the type task and the toString of Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String that adds the type of the task to the toString method of Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 42
    }
  },
  {
    "path": "src/main/java/duke/tasklist/MyList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents an interface of a task list. Provides methods to add a task to the list,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * getting a List, getting the size of the list, getting a task using the index and removing"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * a task based on the index specified."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public interface MyList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public abstract void add(Task task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns a List of type Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public abstract List\u003cTask\u003e getList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return Size of list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public abstract int getNumTasks();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns a task based on the index specified."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param index Index of task tagged in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return Task tagged with the index."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public abstract Task getTask(int index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Removes a task from the list based on the index specified."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param index Index of task tagged in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return Task that was removed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public abstract Task removeTask(int index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns a list of tasks in the taskList whose description contain the String word"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * that is passed the method. Returns an empty list if none of the tasks\u0027 description"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * contains the word."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param word String to find within the tasks\u0027 description."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return MyList of tasks whose description contains word."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public abstract MyList findTasks(String word);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 60
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the task list used to store the tasks. Provides methods to add a task to the list,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * getting a List, getting the size of the list, getting a task using the index and removing"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * a task based on the index specified."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class TaskList implements MyList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Initialises the TaskList and creates an ArrayList to store the tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns a List of type Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return Size of list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns a task based on the index specified."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param index Index of task tagged in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return Task tagged with the index."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return list.get(index - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Removes a task from the list based on the index specified."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param index Index of task tagged in the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return Task that was removed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return list.remove(index - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Returns a list of tasks in the taskList whose description contain the String word"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * that is passed the method. Returns an empty list if none of the tasks\u0027 description"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * contains the word."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param word String to find within the tasks\u0027 description"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return TaskList of tasks whose description contains word."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public TaskList findTasks(String word) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            if (task.getDescription().contains(word)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 93
    }
  },
  {
    "path": "src/main/java/duke/ui/DukeUserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents an interface of the user interface of the application. Provides methods for"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * reading input and printing output to the console."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public interface DukeUserInterface {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints the introduction of the application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printIntro();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints the exit message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printExitMsg();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints a message when a task is added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param task Task that was added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskList Task List where the Task is stored."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printAddTaskMsg(Task task, MyList taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints the list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param myList List of tasks stored in the application."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printList(MyList myList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints out a message when a task is marked as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param task Task that was marked as done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printDoneMsg(Task task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints out the exception."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param msg Message of the exception."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printException(String msg);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints out the message when a task is deleted."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param task Task that was deleted."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskList Task list that the Task was removed from."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printDeleteMsg(Task task, MyList taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printFindList(MyList resultList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 56
    }
  },
  {
    "path": "src/main/java/duke/ui/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * Represents the user interface of the application. Provides methods for reading input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " * and printing output to the console."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class UserInterface implements DukeUserInterface {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints the introduction of the application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printIntro() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return \"Hello! I\u0027m Duke!\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                \"What can I do for you?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints the exit message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printExitMsg() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints a message when a task is added."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param task Task that was added."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskList Task List where the Task is stored."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which represents the output text."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printAddTaskMsg(Task task, MyList taskList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task: \\n%s\\nNow you have %d %s in the list.\", task,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                taskList.getNumTasks(), taskList.getNumTasks() \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints the list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param myList List of tasks stored in the application."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which represents the output text."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printList(MyList myList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        List\u003cTask\u003e list \u003d myList.getList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        int listNum \u003d 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        String[] array \u003d new String[myList.getNumTasks() + 1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        sb.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            sb.append(String.format(\" %d.%s\\n\", listNum, task));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            listNum++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints out the list of tasks that matches the String word from the Find command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param myList MyList of tasks which contains the String word from the Find command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which represents the output text."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printFindList(MyList myList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        List\u003cTask\u003e list \u003d myList.getList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        int listNum \u003d 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        String[] array \u003d new String[myList.getNumTasks() + 1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        sb.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            sb.append(String.format(\" %d.%s\\n\", listNum, task));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            listNum++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints out a message when a task is marked as done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param task Task that was marked as done."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which represents the output text."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printDoneMsg(Task task) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"Nice! I\u0027ve marked this task as done\\n%s\", task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints out the exception."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param msg Message of the exception."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which represents the output text."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printException(String msg) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * Prints out the message when a task is deleted."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param task Task that was deleted."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @param taskList Task list that the Task was removed from."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     * @return String which represents the output text."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String printDeleteMsg(Task task, MyList taskList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return String.format(\"Noted. I\u0027ve removed this task:\\n%s\\nNow you have %d %s in the list.\","
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                task, taskList.getNumTasks(), taskList.getNumTasks() \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 112
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 2
    }
  },
  {
    "path": "src/test/java/TodoTaskStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class TodoTaskStub extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public TodoTaskStub(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public TodoTaskStub(String description, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return \"Todo Task\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 19
    }
  },
  {
    "path": "src/test/java/duke/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.storage.StorageStub;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.TaskListStub;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.ui.UserInterfaceStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void execute_invalidCommand_WrongDateFormatException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            new AddCommand(\"E\", \"Testing\", \"Sunday\").execute(new TaskListStub(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                    new UserInterfaceStub(), new StorageStub(\"\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            assertEquals(\" \\u2639 OOPS!!!  Please follow the correct datetime format(dd/mm/yyyy HHMM)\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                    e.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 26
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void parse_invalidCommand_unknownCommandExceptionThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            Parser.parse(\"test\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            assertEquals(\" \\u2639 OOPS!!!  I\u0027m sorry, but I don\u0027t know what that means :-(\", e.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 19
    }
  },
  {
    "path": "src/test/java/duke/storage/StorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeCorruptedDataException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeMissingFileException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.exception.DukeWrongDateFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class StorageStub implements DukeStorage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String directory;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public StorageStub(String directory) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.directory \u003d directory;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        this.filename \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    //calls every time something is added or deleted"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void updateList(MyList taskList) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public MyList loadList() throws DukeMissingFileException, DukeCorruptedDataException, DukeWrongDateFormatException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        MyList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        File file \u003d new File(directory + filename);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                Task task \u003d dataParser(sc.nextLine());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeMissingFileException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private Task dataParser(String data) throws DukeCorruptedDataException, DukeWrongDateFormatException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        String[] arguments \u003d data.split(\" \\\\| \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        isDone \u003d arguments[1].equals(\"1\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        switch (arguments[0]) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return new TodoTask(arguments[2], isDone);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return new DeadlineTask(arguments[2], arguments[3], isDone);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            return new EventTask((arguments[2]), arguments[3], isDone);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "            throw new DukeCorruptedDataException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 64
    }
  },
  {
    "path": "src/test/java/duke/tasklist/TaskListStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class TaskListStub implements MyList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public TaskListStub() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    //adds a task to the list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    //returns the list of Strings"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return 10;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    //index is the number shown when list is called"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return new TodoTask(\"Testing get task\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return new TodoTask(\"Testing remove task\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public MyList findTasks(String word) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 47
    }
  },
  {
    "path": "src/test/java/duke/ui/UserInterfaceStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.constant.Consts;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.MyList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "public class UserInterfaceStub implements DukeUserInterface {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public UserInterfaceStub() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "        return \"Testing readCommand\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    //closes scanner"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    //prints line with indentation in front"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void printIntro() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void printExitMsg() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void printAddTaskMsg(Task task, MyList taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void printList(MyList myList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void printDoneMsg(Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void printException(String msg) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void printDeleteMsg(Task task, MyList taskList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    public void printFindList(MyList resultList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 63
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t  ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Here are the tasks in your list:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t  ☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t   [T][✘] Task 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Now you have 1 task in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Here are the tasks in your list:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t 1.[T][✘] Task 1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t  ☹ OOPS!!! The description of a deadline cannot be empty."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t  ☹ OOPS!!! /by must be present for a deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t   [D][✘] Task 2 (by: Sunday)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Here are the tasks in your list:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t 1.[T][✘] Task 1"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t 2.[D][✘] Task 2 (by: Sunday)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t  ☹ OOPS!!! /at must be present for an event."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t   [E][✘] Task 3 (at: Monday)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Here are the tasks in your list:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t 1.[T][✘] Task 1"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t 2.[D][✘] Task 2 (by: Sunday)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t 3.[E][✘] Task 3 (at: Monday)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t  ☹ OOPS!!! There is no such task with this index."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t  ☹ OOPS!!! There is no such task with this index."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t   [T][✓] Task 1"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Here are the tasks in your list:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t 1.[T][✓] Task 1"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t 2.[D][✘] Task 2 (by: Sunday)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t 3.[E][✘] Task 3 (at: Monday)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t  ☹ OOPS!!! There is no such task with this index."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t  ☹ OOPS!!! There is no such task with this index."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t   [D][✘] Task 2 (by: Sunday)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t Here are the tasks in your list:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t 1.[T][✓] Task 1"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t 2.[E][✘] Task 3 (at: Monday)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t  Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 115
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "todo Task 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "deadline Task 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "deadline Task 2 /by Sunday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "event Task 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "event Task 3 /at Monday"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "delete"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cronyxx"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Cronyxx": 34
    }
  }
]
