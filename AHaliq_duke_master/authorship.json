[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 18,
      "-": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import com.util.Printer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import com.core.State;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import com.core.Response;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Printer.printString(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        // greet"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        State state \u003d new State();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            while (!state.toExit) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                for (Response r : Response.values()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    if (r.call(input, state)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        } catch (NoSuchElementException ignored) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 26,
      "-": 3
    }
  },
  {
    "path": "src/main/java/com/core/Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "package com.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import com.util.Printer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import com.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import com.tasks.DoableTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import com.tasks.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import com.tasks.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "public enum Response {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    BYE(\"(?i)^bye\\\\s*\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Printer.printString(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        s.toExit \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    LIST(\"(?i)^list\\\\s*\", (j, s) -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        String finalString \u003d IntStream.range(0, s.list.size()).boxed().reduce(\"\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                (acc, ti) -\u003e acc + ((acc.equalsIgnoreCase(\"\") ? \"\" : \"\\n\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        + (ti + 1) + \".\" + s.list.get(ti).toString()),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                String::concat"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        );"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Printer.printString(finalString.equalsIgnoreCase(\"\") ? \"You have no tasks\" : finalString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    DONE(\"(?i)^done [0-9]+\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        int index \u003d getNumber(i) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        if (checkValidIndex(index, s)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            s.list.get(index).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            Printer.printString(\"Nice! I\u0027ve marked this task as done:\\n  \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    + s.list.get(index).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    DELETE(\"(?i)^delete [0-9]+\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        int index \u003d getNumber(i) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        if (checkValidIndex(index, s)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            Printer.printString(\"Noted! I\u0027ve removed this task:\\n  \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    + s.list.get(index).toString()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    + \"\\nNow you have \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    + (s.list.size() - 1)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            s.list.remove(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    TODO_NO_NAME(\"(?i)^todo\\\\s*\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Printer.printError(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    TODO(\"(?i)^todo .+\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        addTask(new Todo(i.split(\"todo \", 2)[1]), s);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    EVENT_NO_NAME(\"(?i)^event\\\\s*\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Printer.printError(\"The description of an event cannot be empty\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    EVENT_NO_TIME(\"^(?i)event (((?!/at).)+$)|(.+ /at\\\\s*$)\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Printer.printError(\"The date range of an event cannot be empty\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    EVENT(\"(?i)^event .+ /at .+\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        String[] parts \u003d splitTwoDelimiters(i, \"(?i)^event \", \"(?i)/at \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        addTask(new Event(parts[0], parts[1]), s);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    DEADLINE_NO_NAME(\"(?i)^deadline\\\\s*\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Printer.printError(\"The description of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    DEADLINE_NO_TIME(\"(?i)^deadline (((?!/by).)+$)|(.+ /by\\\\s*$)\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Printer.printError(\"The due date of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    DEADLINE(\"(?i)^deadline .+ /by .+\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        String[] parts \u003d splitTwoDelimiters(i, \"(?i)^deadline \", \"(?i)/by \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        addTask(new Deadline(parts[0], parts[1]), s);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    UNKNOWN(\".*\", (i, s) -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Printer.printError(\"I\u0027m sorry but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private String regex;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private ResponseFunc func;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    Response(String r, ResponseFunc f) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        regex \u003d r;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        func \u003d f;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Given a string and program state, if string matches regex this enum will call its response"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * function."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param i input string"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param s state object"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return boolean if the string has matched"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public boolean call(String i, State s) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        if (i.matches(regex)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            func.f(i, s);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Assuming input is \".+ [0-9]+\", it splits at whitespace and returns an Integer of the second"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * part of the string."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param input input string"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return integer of second part of string"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static int getNumber(String input) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return Integer.parseInt(input.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Given an index and state object, check if index in bounds of list in state object."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param index index to check"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param s     state object"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return False if out of bounds"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static boolean checkValidIndex(int index, State s) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        if (index \u003c 0 || index \u003e s.list.size() - 1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            Printer.printError(\"That is not a valid task index\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Assuming input is \"(head).*(mid).*\" returns the two texts between them."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param input input string"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param head  head regex match"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param mid   mid regex match"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return array of two text parts"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static String[] splitTwoDelimiters(String input, String head, String mid) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        String[] parts \u003d input.split(mid, 2);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        parts[0] \u003d parts[0].split(head)[1];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return parts;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Insert task into list and prints message string."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param t task to be added"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param s state object"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static void addTask(DoableTask t, State s) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        s.list.add(t);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Printer.printString(\"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                + t.toString()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                + \"\\nNow you have \" + s.list.size()"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                + \" tasks in the list.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 150
    }
  },
  {
    "path": "src/main/java/com/core/ResponseFunc.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "package com.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": " * Interface used by Enum to store references to lambdas."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "public interface ResponseFunc {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Lambda\u0027s signature interface."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param i input string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param s state object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    void f(String i, State s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 14
    }
  },
  {
    "path": "src/main/java/com/core/State.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "package com.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import com.tasks.DoableTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": " * An instance of the State class is a state of the running program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "public class State {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Flag to determine if program should terminate."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public boolean toExit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * List of DoableTask."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public ArrayList\u003cDoableTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 20
    }
  },
  {
    "path": "src/main/java/com/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "package com.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "public class Deadline extends DoableTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * The task\u0027s deadline string."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Create DoableTask of this type with deadline string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param taskName name of task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param due      deadline string"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public Deadline(String taskName, String due) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        deadline \u003d due;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * get string representation of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 29
    }
  },
  {
    "path": "src/main/java/com/tasks/DoableTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "package com.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "public class DoableTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Flag denoting task is done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Create instance of Task with isDone flag."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param taskName name of task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public DoableTask(String taskName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Set isDone to true."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Get icon based on isDone status."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return icon string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * get string representation of task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return string"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 44
    }
  },
  {
    "path": "src/main/java/com/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "package com.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "public class Event extends DoableTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * The task\u0027s dateRange string."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private String dateRange;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Create DoableTask of this type with dateRange string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param taskName name of task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param range    dateRange string"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public Event(String taskName, String range) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        dateRange \u003d range;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * get string representation of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + dateRange + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 29
    }
  },
  {
    "path": "src/main/java/com/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "package com.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Name of task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Create a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param taskName name of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        name \u003d taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * get string representation of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return string"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 27
    }
  },
  {
    "path": "src/main/java/com/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "package com.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "public class Todo extends DoableTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Create DoableTask of this type."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param taskName name of task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * get string representation of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 22
    }
  },
  {
    "path": "src/main/java/com/util/Printer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "package com.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "public class Printer {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * The spacing after padding for each line of text."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static final int MARGIN_LENGTH \u003d 1;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * The spacing before the horizontal line begin."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static final int PADDING_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * The length the right most tip of the horizontal line will span."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static final int HORIZONTAL_LINE_LENGTH \u003d 64;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Text to be inserted before every line of text."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static final String MARGIN_AND_PADDING \u003d repeatChar(MARGIN_LENGTH + PADDING_LENGTH,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            \u0027 \u0027);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Text to be inserted before the start of the first line and after the last line."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d repeatChar(PADDING_LENGTH, \u0027 \u0027)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            + repeatChar(HORIZONTAL_LINE_LENGTH - PADDING_LENGTH, \u0027_\u0027)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            + \"\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Displays duke logo."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public static void printDukeLogo() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Print with error decorator prefixing the string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param str string to be printed"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public static void printError(String str) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        System.out.print(formatString(\"☹ OOPS!!! \" + str));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Prints a string with formatting; border, margin and padding."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param str string to be printed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public static void printString(String str) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        System.out.print(formatString(str));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Builds a string with borders and margin and padding for each line."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param str string to be formatted"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return resulting formatted string"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static String formatString(String str) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        StringBuilder formattedString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        formattedString.append(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        for (String s : str.split(\"\\n\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            formattedString.append(MARGIN_AND_PADDING);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            formattedString.append(s);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            formattedString.append(\"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        formattedString.append(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        formattedString.append(\"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return formattedString.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Generates a string of repeated characters."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param length number of repetitions"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param c      character to be repeated"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return resulting repeated character string"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static String repeatChar(int length, char c) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return String.valueOf(c).repeat(Math.max(0, length));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 89
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    void placeHolder() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        assertEquals(2, 1 + 1);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 10
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [T][✘] read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [T][✘] join sports club"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [T][✓] join sports club"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     1.[T][✓] read book"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     4.[T][✓] join sports club"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     5.[T][✘] borrow book"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AHaliq": 69
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "#if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "#then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "#    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "#    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "#fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "#java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "java -jar ../build/libs/duke-0.1.3.jar \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "then"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "else"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 35
    }
  }
]
