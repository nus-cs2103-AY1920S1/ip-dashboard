[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "fabbbbbbyy": 1
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 1
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates an add command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String taskDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates an AddCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskType The type of task to be recorded."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskDescription The description of task to be recorded."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public AddCommand(String taskType, String taskDescription) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates an AddCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskType The type of task to be recorded."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskDescription The description of task to be recorded."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskDateTime The date \u0026 time of the task to be recorded."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public AddCommand(String taskType, String taskDescription, String taskDateTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskDateTime \u003d taskDateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the add command; creates and adds the task to the task list,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and prints the added message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isToDo(taskType)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            ToDo toDo \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            taskList.addTask(toDo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            ui.printAddedMessage(toDo, taskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isDeadline(taskType)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            taskList.addTask(deadline);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            ui.printAddedMessage(deadline, taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Event event \u003d new Event(taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            taskList.addTask(event);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            ui.printAddedMessage(event, taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isToDo(String str) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.equals(\"todo\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isDeadline(String str) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.equals(\"deadline\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 65
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a bye command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates an ByeCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the bye command; stores the task list in the hard drive,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and prints the bye message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        storage.storeList(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 28
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a possible command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns true if isExit is true, else false."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The boolean value of isExit."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 20
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Represents the date time of user input in proper format."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String[] months \u003d {\"DummyMonth\", \"January\", \"February\", \"March\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            \"December\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a DateTime instance with the appropriate attributes."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param day The day."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param month The month."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param year The year."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param time The time."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public DateTime(String day, String month, String year,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                            String time) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the user input into proper representation."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void format() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formatDay();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formatMonth();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formatTime();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the day into proper representation."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void formatDay() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(day.equals(\"01\") || day.equals(\"1\") || day.equals(\"21\") || day.equals(\"31\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            day +\u003d \"st\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(day.equals(\"02\") || day.equals(\"2\") || day.equals(\"22\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            day +\u003d \"nd\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(day.equals(\"03\") || day.equals(\"3\") || day.equals(\"23\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            day +\u003d \"rd\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            day +\u003d \"th\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the month into proper representation."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void formatMonth() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        month \u003d months[Integer.parseInt(month)];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the time into proper representation."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void formatTime() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int twentyFourHourTime \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int hours \u003d twentyFourHourTime / 100;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int minutes \u003d twentyFourHourTime % 100;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int convertedHours \u003d hours % 12;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(convertedHours \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            convertedHours \u003d 12;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String meridian;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(hours \u003c 12) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            meridian \u003d \"am\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            meridian \u003d \"pm\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(minutes \u003d\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            time \u003d convertedHours + meridian;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            time \u003d convertedHours + \":\" + minutes + meridian;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns a string representation of a DateTime object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The day, month, year and time formatted into proper"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * representation."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return day + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 105
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a deadline task for accessing and updating descriptions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * and done statuses."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a Deadline instance with the appropriate attributes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Deadline(String description, String dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the task in suitable String representation for"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * writing to file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String formattedTask \u003d \"D | \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"1 | \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"0 | \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formattedTask +\u003d description + \" | \" + dateTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return formattedTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns a string representation of a deadline task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task\u0027s status icon and description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + this.description + \" (\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                    this.dateTime + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 49
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a delete command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a DeleteCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskNumber The position number of the task in the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the delete command; deletes the task from the task list,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and prints the deleted message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ArrayList\u003cTask\u003e arrayList \u003d taskList.getArrayList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Task task \u003d arrayList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList.deleteTask(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ui.printDeletedMessage(task, taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 35
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a done command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a DoneCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskNumber The position number of the task in the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the done command; marks the task as done from the task list,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and prints the done message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ArrayList\u003cTask\u003e arrayList \u003d taskList.getArrayList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Task task \u003d arrayList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList.setTaskAsDone(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ui.printDoneMessage(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 35
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Handles the details of the Duke System,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * receiving user input and displaying the"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * appropriate information as per requested."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a Duke instance with the appropriate attributes."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param filePath The filepath to the text document for Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList \u003d storage.loadList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Runs the Duke System. This includes parser user inputs into"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * appropriate commands to be carried out."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a Duke instance to be run."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param args The inputs to be read from the command line."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "fabbbbbbyy": 47
    }
  },
  {
    "path": "src/main/java/DummyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a dummy command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * This is to be used to signify an error."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class DummyCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * A dummy execute method which does absolutely nothing."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 18
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates invalid user input errors. Specifically, empty descriptions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class EmptyDescriptionException extends InvalidInputException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public EmptyDescriptionException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates an event task for accessing and updating descriptions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * and done statuses."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates an Event instance with the appropriate attributes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the task in suitable String representation for"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * writing to file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String formattedTask \u003d \"E | \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"1 | \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"0 | \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formattedTask +\u003d description + \" | \" + dateTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return formattedTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns a string representation of an Event task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task\u0027s status icon and description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + this.description + \" (\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                this.dateTime + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 49
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a find command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String word;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a FindCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param word The word to be found."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public FindCommand(String word) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the find command; finds tasks with the word from the task list,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and prints the found message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ArrayList\u003cTask\u003e arrayList \u003d taskList.getArrayList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        TaskList foundList \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        for(Task task : arrayList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            if(task.getDescription().contains(word)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                foundList.addTask(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ui.printFoundMessage(foundList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 40
    }
  },
  {
    "path": "src/main/java/InputMismatchException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates invalid user input errors. Specifically, input mismatches."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class InputMismatchException extends InvalidInputException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public InputMismatchException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 12
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates invalid user input errors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public InvalidInputException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 12
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a list command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the list command; prints the contents of the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 18
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a system that parses user input into"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * commands for the Duke System."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Parsers user input into appropriate commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param fullCommand The user input in String format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The command to be carried out by Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Command returnCommand \u003d new DummyCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isBye(fullCommand)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d new ByeCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isList(fullCommand)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isDone(fullCommand)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d processDoneCommand(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isDelete(fullCommand)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d processDeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isFind(fullCommand)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d processFindCommand(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                returnCommand \u003d processAddCommand(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            } catch(InvalidInputException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                System.out.println(\"InvalidInputException occurred: \" + e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return returnCommand;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes a done command for a task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param fullCommand The user input for the done command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The done command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static Command processDoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Command doneCommand \u003d new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return doneCommand;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes a delete command for a task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param fullCommand The user input for the delete command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The delete command."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static Command processDeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Command deleteCommand \u003d new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return deleteCommand;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes an add command for a task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param fullCommand The user input for the add command."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The add command."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @throws InvalidInputException The exception to be thrown if the input is invalid."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static Command processAddCommand(String fullCommand) throws InvalidInputException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        // Block for catching input mismatch errors."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if (!fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            if (!fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                if (!fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                    throw new InputMismatchException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitInput \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        // Block for catching empty description errors."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if (splitInput.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            throw new EmptyDescriptionException(\"☹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if (isToDo(fullCommand)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskType \u003d \"todo\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDescription \u003d processTaskDescription(fullCommand);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Command addCommand \u003d new AddCommand(taskType, taskDescription);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return addCommand;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if (isDeadline(fullCommand)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String[] splitBySlash \u003d fullCommand.split(\"/\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskType \u003d \"deadline\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDateTime \u003d processDateTime(splitBySlash);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDescription \u003d processTaskDescription(splitBySlash[0]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Command addCommand \u003d new AddCommand(taskType, taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return addCommand;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String[] splitBySlash \u003d fullCommand.split(\"/\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskType \u003d \"event\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDateTime \u003d processDateTime(splitBySlash);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDescription \u003d processTaskDescription(splitBySlash[0]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Command addCommand \u003d new AddCommand(taskType, taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return addCommand;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes a find command for a word."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param fullCommand The user input for the find command."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The find command."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static Command processFindCommand(String fullCommand) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String word \u003d splitCommand[1];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Command findCommand \u003d new FindCommand(word);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return findCommand;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Splits the input String into appropriate format."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param input The user input."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The description of the action to be carried out."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static String processTaskDescription(String input) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int arrSize \u003d splitInput.length;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String returnString \u003d splitInput[1];"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        for (int i \u003d 2; i \u003c arrSize; i++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnString +\u003d \" \" + splitInput[i];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return returnString;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes the date time into appropriate format."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param splitBySlash The split input."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The appropriate date time format."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static String processDateTime(String[] splitBySlash) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String day \u003d splitBySlash[1];"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String month \u003d splitBySlash[2];"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitYearTime \u003d splitBySlash[3].split(\" \");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String year \u003d splitYearTime[0];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String time \u003d splitYearTime[1];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        DateTime dateTime \u003d new DateTime(day, month, year, time);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        dateTime.format();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return dateTime.toString();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isBye(String str) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.equals(\"bye\") || str.equals(\"Bye\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isList(String str) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.equals(\"list\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isDone(String str) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.startsWith(\"done\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isDelete(String str) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.startsWith(\"delete\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isToDo(String str) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.startsWith(\"todo\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isDeadline(String str) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.startsWith(\"deadline\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isFind(String str) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.startsWith(\"find\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 206
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a Storage instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param filePath The filepath to the storage text document."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Loads a list from the hard drive into a task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task list, loaded with information from the hard drive."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public TaskList loadList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        transferContentsToListWrapper(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Stores a task list into a file from the hard drive."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list to be stored into the hard drive."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void storeList(TaskList taskList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        writeContentsToFile(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Writes the current task list contents to the hard drive."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void writeContentsToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String formattedTask \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ArrayList\u003cTask\u003e arrayList \u003d taskList.getArrayList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        for(Task task : arrayList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d task.formatForFile() + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        writeToFileWrapper(formattedTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Hides the try catch block whilst executing the method"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * writeToFile."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param textToAdd The text to be added to the task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void writeToFileWrapper(String textToAdd) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            writeToFile(filePath, textToAdd);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Writes given input to given file path."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param filePath The path to the text file to be written to."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param textToAdd The text to be added to the text file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @throws IOException The IO Exception."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        fileWriter.write(textToAdd + \"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Hides the try catch block whilst executing the method"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * transferContentsToList."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void transferContentsToListWrapper(TaskList taskList) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            transferContentsToList(filePath, taskList);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Transfers the contents of the file to a static array list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param filePath The path to the source text file."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @throws FileNotFoundException The exception to be thrown if no such file is found."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void transferContentsToList(String filePath, TaskList taskList)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Scanner fileReader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        while (fileReader.hasNext()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            processNextLine(fileReader.nextLine(), taskList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes the next line into proper format."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param nextLine The line to be processed."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void processNextLine(String nextLine, TaskList taskList) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitString \u003d nextLine.split(\" \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String taskType \u003d splitString[0];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String doneStatus \u003d splitString[2];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDescription \u003d splitString[4];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            for(int i \u003d 5; i \u003c splitString.length; i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                taskDescription +\u003d \" \" + splitString[i];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            ToDo toDo \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            if(doneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                toDo.setDone();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            taskList.addTask(toDo);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            int counter \u003d 5;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDescription \u003d splitString[4];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            for(int i \u003d 5; i \u003c splitString.length \u0026\u0026 !splitString[i].equals(\"|\"); i++) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                taskDescription +\u003d \" \" + splitString[i];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String dateTime \u003d splitString[++counter];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            for(int j \u003d counter + 1; j \u003c splitString.length; j++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                dateTime +\u003d \" \" + splitString[j];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            if(taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                Deadline deadline \u003d new Deadline(taskDescription, dateTime);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                if(doneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                    deadline.setDone();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                taskList.addTask(deadline);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                Event event \u003d new Event(taskDescription, dateTime);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                if(doneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                    event.setDone();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                taskList.addTask(event);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 171
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a task for accessing and updating descriptions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * and done statuses."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a Task instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the status icon of a task, with ticks representing done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and crosses representing undone."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The status icon of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the task description in String format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Sets the status of a task to be done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the task in suitable String representation for"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * writing to file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public abstract String formatForFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns a string representation of a task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task\u0027s status icon and description."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 63
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates Duke\u0027s task list and handles operations such as"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * adding, removing and marking tasks as done."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a TaskList instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the size of a task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The size of the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the array list of a task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The array list of a task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public ArrayList getArrayList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be added to the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be deleted from the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void deleteTask(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Sets a task as done from the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be set as done from the task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void setTaskAsDone(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Lists all the tasks in the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int indexNumber \u003d 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            System.out.println((indexNumber++) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 70
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a to do task for accessing and updating descriptions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * and done statuses."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a ToDo instance with the appropriate attributes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the task in suitable String representation for"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * writing to file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String formattedTask \u003d \"T | \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"1 | \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"0 | \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formattedTask +\u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return formattedTask;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns a string representation of a ToDo task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task\u0027s status icon and description."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 45
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Handles the interaction with user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String indentLine \u003d \"---------------------------------------------\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String introMessage \u003d \"Hello! I\u0027m Duke!\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String goodbyeMessage \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String addedMessage \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String deletedMessage \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String doneMessage \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a Ui instance with the appropriate attributes."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Reads the next line of user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The user input, in String representation."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Prints the Duke welcome message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(introMessage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Prints the Duke goodbye message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(goodbyeMessage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Prints the Duke added message."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list to be added to."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void printAddedMessage(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(addedMessage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int numTasks \u003d taskList.getSize();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if (numTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            System.out.println(\"Now you have \" + numTasks + \" task in the list.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            System.out.println(\"Now you have \" + numTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Prints the Duke deleted message."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be deleted."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list to be deleted from."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void printDeletedMessage(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(deletedMessage);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int numTasks \u003d taskList.getSize();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if (numTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            System.out.println(\"Now you have \" + numTasks + \" task in the list.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            System.out.println(\"Now you have \" + numTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Prints the Duke done message."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be set as done."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void printDoneMessage(Task task) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(doneMessage);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Prints the contents of a found list."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param foundList The found list to be printed."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void printFoundMessage(TaskList foundList) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        foundList.listTasks();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Prints the contents of a task list."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list to be printed."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void printTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList.listTasks();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println(indentLine);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 190
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 10
    }
  }
]
