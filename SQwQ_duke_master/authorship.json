[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public AddCommand(Task t) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.task \u003d t;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        tasks.addTask(this.task);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showAddedTask(this.task, tasks.getListSize());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 12
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Deadline(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String unprocessed \u003d super.toString();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        boolean isFirst \u003d true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (unprocessed.contains(\"/\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (int i \u003d 0; i \u003c unprocessed.length(); i++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                char c \u003d unprocessed.charAt(i);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                if (c \u003d\u003d \u0027/\u0027 \u0026\u0026 isFirst) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(\"(by:\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    i +\u003d 2;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    isFirst \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(c);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                //Process char"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + temp.append(\u0027)\u0027).toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + unprocessed;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 31
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    int id;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DeleteCommand(int i) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.id \u003d i;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Task t \u003d tasks.getTask(id);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        tasks.deleteTask(this.id);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showDelete(t, tasks.getListSize());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 13
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    int id;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.id \u003d i;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        tasks.completeTask(this.id);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showComplete(tasks.getTask(this.id));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        new Duke(\"C:/Users/User/Documents/GitHub/duke/src/main/tasks.txt\").run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 38,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Event(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String unprocessed \u003d super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        boolean isFirst \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (unprocessed.contains(\"/\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (int i \u003d 0; i \u003c unprocessed.length(); i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                char c \u003d unprocessed.charAt(i);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                if (c \u003d\u003d \u0027/\u0027 \u0026\u0026 isFirst) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(\"(at:\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    i +\u003d 2;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    isFirst \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(c);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                //Process char"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + temp.append(\u0027)\u0027).toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + unprocessed;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 31
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        storage.updateSaveFile(tasks.getAllTasks());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 17
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showList(tasks.getAllTasks());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(\"done \")){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                int id \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new DoneCommand(id);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch  (NumberFormatException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Invalid index provided!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                int id \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new DeleteCommand(id);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch  (NumberFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Invalid index provided!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new AddCommand(new Todo(command));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (!command.contains(\"/by \")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please follow format e.g deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new AddCommand(new Deadline(formatTime(command)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (!command.contains(\"/at \")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please follow format e.g event project meeting /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new AddCommand(new Event(formatTime(command)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String formatTime(String input) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        boolean flag \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cString\u003e formatStrings \u003d Arrays.asList(\"d/M/y HHmm\", \"d/M/y\", \"d/M\" );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cString\u003e outputFormats \u003d Arrays.asList(\"MMMMM dd, yyyy, h:mm a\", \"MMMMM dd, yyyy\", \"MMMMM dd\" );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            char c \u003d input.charAt(i);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (flag) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                temp.append(c);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                result.append(c);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (c \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                flag \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (int i \u003d 0; i \u003c formatStrings.size(); i++)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DateFormat df \u003d new SimpleDateFormat(formatStrings.get(i));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                df.setLenient(false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                date \u003d df.parse(temp.toString().substring(3));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DateFormat formatter \u003d new SimpleDateFormat(outputFormats.get(i));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                result.append(\"   \").append(formatter.format(date));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                //System.out.println(\"!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"Time format not acceptable!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return result.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 92
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Storage(String s) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.filePath \u003d s;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public LinkedList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        LinkedList\u003cTask\u003e result \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"File not found!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                List\u003cString\u003e temp \u003d Files.lines(file.toPath())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        .collect(Collectors.toList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                for (String s : temp) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    Task curr \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    if (s.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr \u003d new Todo(s.substring(7));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    } else if (s.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr \u003d new Deadline(s.substring(7));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    } else if (s.contains(\"[E]\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr \u003d new Event(s.substring(7));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    if (s.contains(\"[✓]\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    result.add(curr);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"File not found!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void updateSaveFile(LinkedList\u003cTask\u003e tasks) throws DukeException{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            FileWriter fw \u003d new FileWriter(saveFile, false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                fw.write(t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"Save failed\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 66
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 23
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    LinkedList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks \u003d new LinkedList\u003cTask\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks \u003d lst;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Task getTask(int id) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.tasks.get(id-1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public LinkedList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void deleteTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            this.tasks.remove(i-1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such task exist!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void completeTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            this.tasks.get(i-1).markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such task exist!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 43
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Todo(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 9
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\\n\" + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showList(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            System.out.println(i + \". \" + t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showDelete(Task t, int i) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Now you have \" + i + \" tasks in the list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showComplete(Task t) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showAddedTask(Task t, int i) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Now you have \" + i + \" tasks in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"-----------------------------------------------------------------------------------\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 57
    }
  }
]
