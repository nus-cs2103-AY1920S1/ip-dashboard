[
  {
    "path": "src/main/Data/Duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "todo pending make money"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "todo pending get money"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "todo pending make money"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "todo pending cash"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "todo pending make some cash"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "event pending make some money"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "event pending make some cash"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "monday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "todo pending make some money"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "todo pending get some cash"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "event pending play along with friends"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "12th of December 1999, 5.30pm"
      }
    ],
    "authorContributionMap": {
      "robytanama": 13
    }
  },
  {
    "path": "src/main/java/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected int day;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected int month;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected String dayOutput;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected String monthOutput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected String yearOutput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected boolean validFormat \u003d true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Date(int day, int month, int year) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String dayString \u003d String.valueOf(day);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String monthString \u003d String.valueOf(month);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String yearString \u003d String.valueOf(year);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (dayString.length() \u003e 2 || monthString.length() \u003e 2 || yearString.length() !\u003d 4) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            validFormat \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        switch (day) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                dayOutput \u003d \"1st\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                dayOutput \u003d \"2nd\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 3 :"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                dayOutput \u003d \"3rd\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            default :"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                dayOutput \u003d dayString + \"th\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 1 :"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"January\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 2 :"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"February\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 3 :"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"March\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 4 :"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"April\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 5 :"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"May\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 6 :"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"June\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 7 :"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"July\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 8 :"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"August\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 9 :"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"September\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 10 :"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"October\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 11 :"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"November\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            case 12 :"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                monthOutput \u003d \"December\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            default :"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                throw new DukeException(\"     Invalid month entered!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        yearOutput \u003d yearString;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (day \u003c 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            throw new DukeException(\"     Negative date does not exist!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (monthOutput.equals(\"February\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (day \u003e 28) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                throw new DukeException(\"     February only has 28 days!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else if (monthOutput.equals(\"April\") || monthOutput.equals(\"June\") || monthOutput.equals(\"September\") ||"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                   monthOutput.equals(\"November\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (day \u003e 30) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                throw new DukeException(\"     That month only has 30 days!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (day \u003e 31) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                throw new DukeException(\"     That month only has 31 days!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public boolean isValid() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return validFormat;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return this.dayOutput + \" of \" + monthOutput + \" \" + yearOutput;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 99
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Deadline(String description, String extraInfo) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.extraInfo \u003d extraInfo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.extraInfo + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String lines \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(lines);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(lines);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        FileReader fr \u003d new FileReader(\"../Data/Duke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        BufferedReader brFile \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        ArrayList\u003cTask\u003e inputList \u003d obtainTasks(brFile);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        boolean programRunning \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        while (programRunning) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String[] inputMessage \u003d br.readLine().split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String taskCount \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (inputList.size() \u003e 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                taskCount \u003d \"tasks\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                taskCount \u003d \"task\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                switch (inputMessage[0]) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        if (inputList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            throw new DukeException(\"     The list is empty!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        for (int i \u003d 1; i \u003c\u003d inputList.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            System.out.println(\"     \" + i + \". \" + inputList.get(i - 1));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(lines);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(lines);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.exit(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        int index \u003d Integer.parseInt(inputMessage[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        if (index \u003e inputList.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            throw new DukeException(\"     Such task does not exist!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        inputList.get(index - 1).completeTask();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        writeToFile(inputList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"       \" + inputList.get(index - 1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(lines);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        if (inputMessage.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            throw new DukeException(\"     OOPS!! The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        String item \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        for (int i \u003d 1; i \u003c inputMessage.length; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            if (i \u003d\u003d inputMessage.length - 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                item +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                item +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                item +\u003d \" \";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        inputList.add(new Todo(item));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        writeToFile(inputList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"       \" + inputList.get(inputList.size() - 1));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"     Now you have \" + inputList.size() + \" \" + taskCount + \" in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(lines);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        String input \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        int marker \u003d 0;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        for (int i \u003d 1; i \u003c inputMessage.length; i++)  {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            if (i + 1 \u003e\u003d inputMessage.length) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                throw new DukeException(\"     Please provide more information\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            if (inputMessage[i + 1].equals(\"/by\") || inputMessage[i + 1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                input +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                marker \u003d i + 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                input +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                input +\u003d \" \";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        String extraInfo \u003d \"\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        String tempInfo \u003d \"\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        for (int i \u003d marker + 1; i \u003c inputMessage.length; i ++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            if (i \u003d\u003d inputMessage.length - 1) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                tempInfo +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                tempInfo +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                tempInfo +\u003d \" \";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        String[] dateAndTime \u003d tempInfo.split(\" \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        String[] date \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        if (date.length !\u003d 3 || dateAndTime.length \u003c 2) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            throw new DukeException(\"     Invalid date and time format!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        if (date[0].equals(\"\") || date[1].equals(\"\") || date[2].equals(\"\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            throw new DukeException(\"     Invalid date and time format!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        int day \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        Date inputDate \u003d new Date(day, month, year);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        Time inputTime \u003d new Time(Integer.parseInt(dateAndTime[1]));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        if (!inputDate.isValid()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            throw new DukeException(\"     Sorry! Invalid date format\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        if (!inputTime.isValid()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            throw new DukeException(\"     Sorry! Invalid time format\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        extraInfo \u003d inputDate + \", \" + inputTime;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        if (extraInfo.equals(\"\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            throw new DukeException(\"     Please provide more information\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        if (inputMessage[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            if (!inputMessage[marker].equals(\"/by\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                throw new DukeException(\"     Wrong syntax, should be using /by for deadline\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            inputList.add(new Deadline(input, extraInfo));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        } else if (inputMessage[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            if (!inputMessage[marker].equals(\"/at\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                                throw new DukeException(\"     Wrong syntax, should be using /at for event\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            inputList.add(new Event(input, extraInfo));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        writeToFile(inputList);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"       \" + inputList.get(inputList.size() - 1));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"     Now you have \" + inputList.size() + \" \" + taskCount + \" in the list.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(lines);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    case \"delete\" :"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        int indexToDelete \u003d Integer.parseInt(inputMessage[1]);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        if(indexToDelete \u003e inputList.size() || indexToDelete \u003c\u003d 0) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            throw new DukeException(\"     Such task does not exist!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        Task toBeDeleted \u003d inputList.get(indexToDelete - 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        inputList.remove(indexToDelete - 1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"       \" + toBeDeleted);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        if (inputList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            taskCount \u003d \"task\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                            taskCount \u003d \"tasks\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        writeToFile(inputList);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(\"     Now you have \" + inputList.size() + \" \" + taskCount + \" in the list.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println(lines);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                        throw new DukeException(\"     OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                System.out.println(error);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                System.out.println(lines);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } catch (Exception error) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                System.out.println(\"     Something went wrong\" + error.getMessage());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                System.out.println(lines);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public static ArrayList\u003cTask\u003e obtainTasks(BufferedReader reader) throws Exception {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String next \u003d reader.readLine();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        while(next !\u003d null) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String[] input \u003d next.split(\" \");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String status \u003d input[1];"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String type \u003d input[0];"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String extraInfo \u003d \"\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            for (int i \u003d 2; i \u003c input.length; i ++) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                if (i \u003d\u003d input.length - 1) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    description +\u003d input[i];"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    description +\u003d input[i];"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    description +\u003d \" \";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output.add(new Todo(description));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else if (type.equals(\"event\")){"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                extraInfo \u003d reader.readLine();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output.add(new Event(description, extraInfo));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                extraInfo \u003d reader.readLine();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output.add(new Deadline(description, extraInfo));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (status.equals(\"done\")) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output.get(output.size() - 1).completeTask();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            next \u003d reader.readLine();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public static void writeToFile(ArrayList\u003cTask\u003e input) throws Exception {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"../Data/Duke.txt\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (Task task : input) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String status \u003d \"\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (task.getStatus()) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                status \u003d \"done\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                status \u003d \"pending\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (task.getClass().getName().equals(\"Todo\")) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output \u003d \"todo \" + status + \" \" + task.getDescription();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                fw.write(output + \"\\n\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else if (task.getClass().getName().equals(\"Event\")){"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output \u003d \"event \" + status + \" \" + task.getDescription();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                fw.write(output + \"\\n\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                fw.write(task.getExtraInfo() + \"\\n\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output \u003d \"deadline \" + status + \" \" + task.getDescription();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                fw.write(output + \"\\n\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                fw.write(task.getExtraInfo() + \"\\n\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 236,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Event(String description, String extraInfo) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.extraInfo \u003d extraInfo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.extraInfo + \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 11
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected String extraInfo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.extraInfo \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String getExtraInfo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return this.extraInfo;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return (isDone ? \"V\" : \"X\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 35
    }
  },
  {
    "path": "src/main/java/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected String outputTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected boolean validFormat \u003d true;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Time(int time) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String timeString \u003d String.valueOf(time);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (timeString.length() !\u003d 4) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            validFormat \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String format \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (time \u003e\u003d 1200) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            format \u003d \"pm\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            format \u003d \"am\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int hours \u003d time / 100;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        hours \u003d hours % 12;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (minutes \u003e 60) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            throw new DukeException(\"     Invalid minute format!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String hour \u003d String.valueOf(hours);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String minute \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (minutes !\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            minute \u003d \".\" + minutes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        outputTime \u003d hour + minute + format;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public boolean isValid() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return validFormat;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return outputTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 37
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 10
    }
  },
  {
    "path": "src/main/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "todo eat food"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "todo wash clothes"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "deadline get money /by tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "deadline get item /by sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "event breakinus welcome tea /at tuesday 2pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "robytanama": 9
    }
  },
  {
    "path": "src/main/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "robytanama": 21
    }
  }
]
