[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "seedu.duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for seedu.duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "nordic96": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "version \u00270.3.2\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    mainClassName \u003d \"seedu.duke.core.Launcher\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "run {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nordic96"
        },
        "content": "test {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nordic96"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    archiveVersion \u003d \"0.3.2\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 55,
      "-": 14
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "T,0,pay Zhao En for dinner"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": "E,0,project meeting test,13/09/0019 14:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "D,0,report 2 submission,12/09/0019 11:59"
      }
    ],
    "authorContributionMap": {
      "nordic96": 3
    }
  },
  {
    "path": "data/duke_test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "E,0,project meeting,28/08/0019 12:00"
      }
    ],
    "authorContributionMap": {
      "nordic96": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "# Christopher v0.2.0 User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "## Christopher\u0027s Amazing Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "### Task Management"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "* Christopher can store and manage tasks by categorizing the tasks into 3 types;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    * `Todo` is a type of task which you do not need a specific time limit."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    * `Deadline` is a type of task where you need to complete by a specific time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    * `Event` is a type of task which is happening in the future at a specific time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "* Christopher allows the user to display the list of all tasks that the user have inserted inside the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "It both temporarily stores the task list in the program while running, and also updating the task list in a text file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "* Christopher will also load the tasks from the text file which contains all the saved tasks in the beginning of the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "### CLI (Command Line Interface) Structure"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "* Christopher handles all commands by a formatted sentence structure. Following are the legal commands that are available in Christopher."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    1. **Inserting** a task: `[task_type] [task_description] /[time_regex] [dd/MM/YY HH:MM]`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    1. **Displaying** the list of tasks `list`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    1. **Marking** the task as \u0027Done\u0027 `done [task_list_index]`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    1. **Deleting** a specific task from the task list. `delete [task_list_index]`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    1. **Searching** a specific task(s) from the task list by providing single or multiple keyword(s)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        `find [task_key_word]`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    1. **Updating** a certain task from the task list by providing a new task description, time and task list index."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    `update [task_list_index] [new_task_description] [new_time_specified]` (User must at least specify either new task description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    or new time)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "### `Add task` - Inserting a task(Todo, Event, Deadline) into the task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "When creating a \u0027Todo\u0027 task, user must only specify the task description whereas when creating \u0027Deadline\u0027 and \u0027Event\u0027 type tasks,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "user must specify both task description and time (dd/MM/YY HH:MM). "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "`[task_type] [task_description] /[time_regex] [dd/MM/YY HH:MM]`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Example of usage**: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "`Todo Buy bread`, `Event project meeting /at 18/09/19 12:00`, `deadline submit report /by 19/09/19 11:59`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![event_outcome](./event.PNG)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Christopher will return the formatted task once saving is complete. [E] represents that the task is an Event type."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "[✘] shows that the task has not been marked as completed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "### `Delete task` - Inserting a task(Todo, Event, Deadline) into the task list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": "User must specify the task list index within the bound of the list size. If index that is out of list bound,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Christopher will return an error statement."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": "`delete [task_list_index]`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Example of usage**: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![delete_outcome](./delete.PNG)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Christopher returns the full detail of the deleted task once deletion is complete."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![delete_eror_outcome](./delete_error.PNG)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nordic96"
        },
        "content": "If user enters an task list index which is out of the list size, "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Christopher will return an error statement with an exception."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nordic96"
        },
        "content": "### `Update task` - Updating a task(Todo, Event, Deadline) from the task list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nordic96"
        },
        "content": "User can update the task which is stored inside the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nordic96"
        },
        "content": "1. If user wants to update a \u0027Todo\u0027 type task, user can only specify the task description."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nordic96"
        },
        "content": "   `update [task_list_index] [new_task_description]`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nordic96"
        },
        "content": "1. For updating \u0027Event\u0027 and \u0027Deadline\u0027 type tasks, user must update either 1; task description or"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nordic96"
        },
        "content": "time or both."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    `update [task_list_index] [new_task_description] [new_time]`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Example of usage**: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nordic96"
        },
        "content": "`update 2 report 2 test`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![update_outcome](./update.PNG)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nordic96"
        },
        "content": "### `Display Task` - Displaying the list of task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nordic96"
        },
        "content": "User can use \u0027list\u0027 command to display all tasks that are stored in the text file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Syntax: `list`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Example of usage**: "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nordic96"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![list_outcome](./list.PNG)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nordic96"
        },
        "content": "### `Marking Task as Done` - Marking the task as done/completed"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nordic96"
        },
        "content": "User can mark the task as done if the task is completed for reference. Christopher will "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nordic96"
        },
        "content": "display a \u0027tick\u0027 icon if the task is marked as done. ([✓] if task is completed. [✘] by default)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Syntax: `done [task_list_index]`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Example of usage**:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nordic96"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![done_outcome](./done.PNG)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nordic96"
        },
        "content": "### `Searching a specific task` - Searching a task from the Task List"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nordic96"
        },
        "content": "User can search for a specific task from the task list by providing a specific keyword. Keyword can be single or multiple. (Minumum 1 keyword for search)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Syntax: `find [...keyword]`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Example of usage**:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nordic96"
        },
        "content": "`find 2`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nordic96"
        },
        "content": "**Expected of usage**:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![find_outcome](./find.PNG)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Christopher displays task that contains a keyword \u00272\u0027."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![find_eror_outcome](./find_empty.PNG)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nordic96"
        },
        "content": "If user provides a keyword that does not include in any of the task list, Christopher will"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nordic96"
        },
        "content": "return empty list message."
      }
    ],
    "authorContributionMap": {
      "nordic96": 105,
      "-": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.core.DialogBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.core.DukeController;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.core.Parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.core.Storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.core.Ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "//Proper JavaFX implementation needed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private static String DIRECTORY_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private static String FILEPATH \u003d DIRECTORY_PATH + \"/duke.txt\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private ScrollPane scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private VBox dialogContainer \u003d new VBox(10);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private TextField userInput \u003d new TextField();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private Image duke \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            .getResourceAsStream(\"/images/duke.jpg\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private Image user \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            .getResourceAsStream(\"/images/cat_user.jpg\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private DukeController dukeController \u003d new DukeController();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void start(Stage stage) throws IOException, ParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        storage.initFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        stage \u003d initStage(stage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        scrollPane \u003d initScrollPane(scrollPane);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        initAnchorPane();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        List\u003cTask\u003e list \u003d storage.loadTask(FILEPATH);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        activateSendButtonEvent(dukeController, ui, list, storage, parser);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        activateUserInputAction(dukeController, ui, list, storage, parser);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        AnchorPane mainLayout \u003d initMainLayout();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private boolean handleUserInput(DukeController controller, Ui ui,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                                    List\u003cTask\u003e list, Storage storage, Parser parser)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String userInputText \u003d userInput.getText();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        Label userText \u003d new Label(userInputText);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        Label dukeText \u003d new Label();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        boolean isTerminate \u003d false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (userInputText.equals(\"bye\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            dukeText \u003d ui.printByeMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            isTerminate \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            dukeText \u003d new Label(getResponse(controller,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    userInputText, ui, list, storage, parser));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return isTerminate;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private String getResponse(DukeController controller, String input, Ui ui,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                               List\u003cTask\u003e list, Storage storage, Parser parser)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return controller.executeFx(ui, list, storage, parser, input);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private Stage initStage(Stage stage) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        stage.setTitle(\"seedu.duke.Duke\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return stage;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private AnchorPane initMainLayout() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        mainLayout.setPrefSize(500.0, 600.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return mainLayout;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private ScrollPane initScrollPane(ScrollPane scrollPane) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        scrollPane.setPrefSize(495, 568.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return scrollPane;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private void initAnchorPane() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        dialogContainer.getChildren().add(ui.showWelcome());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        dialogContainer.heightProperty()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                .addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        userInput.setPrefWidth(425.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private void activateUserInputAction(DukeController controller, Ui ui,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                                    List\u003cTask\u003e list, Storage storage, Parser parser) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                boolean isTerminate \u003d handleUserInput(controller, ui, list, storage, parser);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                if (isTerminate) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    assert isTerminate \u003d true;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    //delay time for 1 second"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    TimeUnit.SECONDS.sleep(1);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    //closes the window"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            } catch (IOException | InterruptedException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private void activateSendButtonEvent(DukeController controller, Ui ui,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                                         List\u003cTask\u003e list, Storage storage, Parser parser) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                handleUserInput(controller, ui, list, storage, parser);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nordic96": 166,
      "-": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/core/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private Circle clip;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private HBox textBox \u003d new HBox();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Subclass of HBox, which contains 2 dialogs in a single box."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param text String value that will be displayed in the label."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param iv ImageView object which displays the profile image."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public DialogBox(Label text, ImageView iv) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        super(10);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        textBox.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        textBox.getChildren().add(text);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        displayPicture.setFitHeight(70);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        displayPicture.setFitWidth(70);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        clip \u003d new Circle(35, 35, 35);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.setStyle(\"-fx-background-color: #CCCCCC\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.setPadding(new Insets(10, 10, 10, 10));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.getChildren().addAll(textBox, displayPicture);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * returns Duke dialog which profile image will be in located in the opposite from User dialog."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param label label component of the HBox, which contains text value for display."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param imageView ImageView component of HBox, which displays profile image of Duke."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @return DialogBox, which is a component of javaFX GUI."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public static DialogBox getDukeDialog(Label label, ImageView imageView) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        var db \u003d new DialogBox(label, imageView);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                .observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 66
    }
  },
  {
    "path": "src/main/java/seedu/duke/core/DukeController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class DukeController {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Handles the first level execution such as receiving the input string from Scanner and send the input to"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param ui UI of the system."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param list task List (ArrayList) where all tasks are stored."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param storage handles saving and updating the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param parser handles parsing the input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws IOException when file is corrupted or cannot be opened."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String executeFx(Ui ui, List\u003cTask\u003e list, Storage storage, Parser parser,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                          String input) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String[] parsedInputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String cmd \u003d parsedInputs[0]; //command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (parsedInputs.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            description \u003d parsedInputs[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d parser.parseCommand(input, cmd, description, list, storage, ui).getMsg();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d e.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d e.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/core/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        Application.launch(seedu.duke.Duke.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.Cmd;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.CmdDelete;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.CmdDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.CmdList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.CmdUpdate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Parses the command input from Scanner object and executes accordingly."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param input single line input which includes all necessary command and details."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param cmd cmd which is already parsed from input string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param list task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param ui UI object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param storage storage unit which handles saving and updating the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws DukeException when user does not write full command input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws ParseException when user inputs the date in incorrect format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws IOException when file is not found or cannot be opened."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Cmd parseCommand(String input, String cmd, String description,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                               List\u003cTask\u003e list, Storage storage, Ui ui) throws DukeException,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            ParseException, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        Cmd command \u003d new Cmd();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            command \u003d new CmdList(list, output);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (cmd.equals(\"delete\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            command \u003d new CmdDelete(description, list, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (cmd.equals(\"todo\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            command.setMsg(storage.addTask(output, list, cmd,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    description, \"__dummy__\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (cmd.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            command.setMsg(handleEventOrDeadline(description, cmd, \" /by \", list, storage));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (cmd.equals(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            command.setMsg(handleEventOrDeadline(description, cmd, \" /at \", list, storage));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (cmd.equals(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            command \u003d new CmdDone(description, list, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (cmd.equals(\"find\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            command.setMsg(ui.displayList(output, storage.searchTask(list, description.split(\" \"))));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (cmd.equals(\"update\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            command \u003d new CmdUpdate(list, description, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Handles creating Event or Deadline task object adding tasks to the storage."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param cmd type of Task (Event/Deadline)."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param regex split indicator (/by or /at)."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param taskList task list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param storage storage unit which handles saving and loading of the tasks created/modified."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @return String output after handling the event/deadline creation."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws DukeException when user does not write full command input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws ParseException when user inputs the date in incorrect format."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws IOException when file is not found or cannot be opened."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String handleEventOrDeadline(String description, String cmd,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                              String regex, List\u003cTask\u003e taskList,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                              Storage storage) throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String[] arr1 \u003d description.split(regex, 2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        validateTime(arr1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String desc \u003d arr1[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String by \u003d arr1[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        output +\u003d storage.addTask(output, taskList, cmd, desc, by);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * validates whether user input correctly specified the time and description."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param arr string array which includes both description and /at or /by for Event and Deadline objects."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws DukeException when user inputs empty task description or does not specify after /at or /by."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void validateTime(String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (arr[0].equals(\"\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throw new DukeException(\"Oops! please specify task description\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (!arr[0].equals(\"\") \u0026\u0026 arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throw new DukeException(\"Oops! please specify time (/at, /by ...\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 96
    }
  },
  {
    "path": "src/main/java/seedu/duke/core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.exception.TaskListEmptyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private static String DIRECTORY_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private static String FILEPATH \u003d DIRECTORY_PATH + \"/duke.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Initialises external text file configuration."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @return text file which stores the task list and is created if not exists."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws IOException when file cannot be created."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public File initFile() throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        assert DIRECTORY_PATH !\u003d null \u0026\u0026 FILEPATH !\u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        new File(DIRECTORY_PATH).mkdir();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        //System.out.println(FILEPATH);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        File textFile \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        boolean isFileCreated \u003d textFile.createNewFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        assert isFileCreated;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return textFile;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Saves task in both task list (ArrayList) and updates in the external duke.txt file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param list Task List (ArrayList) where all tasks are stored."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws IOException when file cannot be opened or modified."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void saveTask(List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        assert FILEPATH !\u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(FILEPATH, false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        PrintWriter printWriter \u003d new PrintWriter(fileWriter);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            printWriter.println(t.toTextFileString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        printWriter.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    //Future exception implementation required"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * loads tasks from external text file, duke.txt."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param filePath file path of external text file, duke.txt."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @return Task list (ArrayList) which includes all tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws IOException when file cannot be opened or loaded."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws ParseException when date written in duke.txt has incorrect format."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public List\u003cTask\u003e loadTask(String filePath) throws IOException, ParseException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        assert filePath !\u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        FileReader fileReader \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            String[] arr \u003d line.split(\",\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            Task t \u003d new Task(\"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            String type \u003d arr[0];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            String desc \u003d arr[2];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            int status \u003d Integer.valueOf(arr[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                t \u003d new Todo(desc, status);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                String by \u003d arr[3];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                t \u003d new Deadline(desc, by, status);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                String at \u003d arr[3];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                t \u003d new Event(desc, at, status);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            list.add(t);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Adds task into the task list to both ArrayList and text file, duke.txt."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param list Task List (ArrayList), which includes all tasks."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param cmd command string input, which determines which type of task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param desc task description."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param time specified time for Event and Deadline objects."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @return Task object for tracking purpose."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws DukeException when user enters empty input for either cmd, desc or time."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws IOException when file is corrupted or cannot be opened."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws ParseException when date entered from the user is in incorrect date format."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String addTask(String output, List\u003cTask\u003e list, String cmd, String desc, String time) throws DukeException,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            IOException, ParseException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        Task task \u003d new Task();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (cmd \u003d\u003d null || desc \u003d\u003d null || time \u003d\u003d null) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throw new DukeException(\"oops! cmd/desc/time is null..\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (cmd.equals(\"\") || desc.equals(\"\") || time.equals(\"\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throw new DukeException(\"oops! you entered cmd/desc/time empty..\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            if (cmd.equals(\"todo\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                task \u003d new Todo(desc);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            } else if (cmd.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                task \u003d new Deadline(desc, time);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            } else if (cmd.equals(\"event\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                task \u003d new Event(desc, time);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            saveTask(list);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d \"  \" + task + \"\\n\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d \"Now you have \" + list.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * searches any given keyword from the task description in the task list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param list Task List (ArrayList) that contains all tasks."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @return Task List (ArrayList) based on the search keyword."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public ArrayList\u003cTask\u003e searchTask(List\u003cTask\u003e list, String...description) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        HashSet\u003cTask\u003e searchResultList \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            String[] arr \u003d t.getDescription().split(\" \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            for (String word : arr) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                for (String descWord : description) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    if (word.equals(descWord)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                        searchResultList.add(t);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return new ArrayList\u003cTask\u003e(searchResultList);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * removes the task from the task list and from text file, duke.txt."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param list Task List (ArrayList) which includes all tasks."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param index index number that user wants to remove from the task list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws TaskListEmptyException when task list is empty but user inputs an index regardless of the index."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws DukeException when user enters index that is out of boundaries of the list index."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws IOException when text file cannot be opened or modified."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String removeTask(String output, List\u003cTask\u003e list, int index) throws TaskListEmptyException,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            DukeException, IOException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throw new TaskListEmptyException(\"list is empty\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (index \u003c 0 || list.size() \u003c index  + 1) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throw new DukeException(\"Entered index is out of bound: \" + index);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d \"Noted. I\u0027ve removed this task: \\n\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            Task t \u003d list.get(index);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d \"  \" + t + \"\\n\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            list.remove(index);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            saveTask(list);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d \"Now you have \" + list.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 179
    }
  },
  {
    "path": "src/main/java/seedu/duke/core/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.Properties;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private Properties prop;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private static String LOGO \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                      \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private static String GREETINGMSG \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            \"________________________________________________________________________________________________ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            + \"What can I  do for you?\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            + \"________________________________________________________________________________________________\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Constructor for Ui which handles all user interface and loads properties by default."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        prop \u003d new Properties();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            InputStream inputStream \u003d new FileInputStream(\"data/duke.properties\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            prop.load(inputStream);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Label showWelcome() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return new Label(GREETINGMSG);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Label printByeMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return new Label(prop.getProperty(\"msg.bye\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Prints all the tasks inside task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param list Task list (ArrayList) where all tasks are stored."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String displayList(String output, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d prop.getProperty(\"cmd.list.empty\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d prop.getProperty(\"cmd.list\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d IntStream.rangeClosed(1, list.size())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    .mapToObj(index -\u003e (String)(index + \".\" + list.get(index - 1)))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Prints only the specified task from task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param list Task list (ArrayList) where all tasks are stored"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param index index of which task user want to print out."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String displayTask(String output, List\u003cTask\u003e list, int index) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        boolean isValidIndex \u003d index \u003e\u003d 0"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                \u0026\u0026 index + 1 \u003c\u003d list.size();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (isValidIndex) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output \u003d new StringBuilder(output)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    .append(list.get(index) + \"\\n\").toString();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 85
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/TaskListEmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class TaskListEmptyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public TaskListEmptyException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/Cmd.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class Cmd {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private String msg \u003d \"\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Cmd(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    //void constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Cmd() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String getMsg() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void setMsg(String msg) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/CmdDelete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.exception.TaskListEmptyException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class CmdDelete extends Cmd {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Subclass of Cmd, which handles delete action command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param description task description for creating task object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param taskList task list (ArrayList) which contains all tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param storage storage unit which handles removing the task from the text file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws IOException catches error if there is any corruption in the text file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public CmdDelete(String description, List\u003cTask\u003e taskList, Storage storage)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            if (description.equals(\"\") || description \u003d\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                throw new DukeException(\"Entered index empty..\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                int index \u003d Integer.valueOf(description) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                output +\u003d storage.removeTask(output, taskList, index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } catch (TaskListEmptyException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d e;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            output +\u003d e;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.setMsg(output);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/CmdDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class CmdDone extends Cmd {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Subclass of Cmd, which is a type of action command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param description task description for creating task object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param taskList task list (Array List)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param ui handles displaying the task in the fx GUI."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param storage handles saving the task in the text file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws DukeException catches error if list index is not entered."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws IOException catches error if there is any corruption in loading the text file (duke.txt)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public CmdDone(String description, List\u003cTask\u003e taskList,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                   Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (description.equals(\"\") || description \u003d\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throw new DukeException(\"Oops! list index not entered for \u0027done\u0027\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            boolean isValidIndex \u003d validateIndex(taskList, description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            if (isValidIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                int index \u003d Integer.valueOf(description) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                taskList.get(index).markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                storage.saveTask(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                        + ui.displayTask(this.getMsg(), taskList, index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                this.setMsg(message);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private boolean validateIndex(List\u003cTask\u003e taskList, String description) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        boolean isValidIndex \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            int index \u003d Integer.valueOf(description) - 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            if (index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                isValidIndex \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                throw new DukeException(\"Index out of bound.. please enter a valid index!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } catch (NumberFormatException | DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            this.setMsg(e.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return isValidIndex;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 56
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/CmdList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.core.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class CmdList extends Cmd {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Subclass of Cmd, which is handles list action command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param taskList task list (Array List)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param output string which will be appended with the action result."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public CmdList(List\u003cTask\u003e taskList, String output) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.setMsg(ui.displayList(output, taskList));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/CmdUpdate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class CmdUpdate extends Cmd {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Update command action that performs updating the task in the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param taskList list of tasks (Array List)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param input raw user input after the command action word \u0027update\u0027."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param storage Storage unit which handles saving and loading the task list from duke.txt."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws DukeException handles catching empty description/time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public CmdUpdate(List\u003cTask\u003e taskList, String input, Storage storage)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (processInput(input, taskList, storage)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            this.setMsg(\"Update successful!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private boolean processInput(String input, List\u003cTask\u003e taskList, Storage storage)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String[] inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        boolean isUpdated \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            int index \u003d Integer.valueOf(inputs[0]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            boolean isValidIndex \u003d validateIndex(taskList, index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            boolean isEmpty \u003d checkEmpty(inputs);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            if (isValidIndex \u0026\u0026 !isEmpty) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                //validate Todo or Deadline/Event"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                boolean isTodo \u003d checkIfTodo(index, taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                boolean isEvent \u003d checkIfEvent(index, taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                if (isTodo) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    taskList \u003d handleTodoUpdate(inputs, index, taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                } else if (isEvent) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    taskList \u003d handleEventUpdate(inputs, index, taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    taskList \u003d handleDeadlineUpdate(inputs, index, taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                storage.saveTask(taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                isUpdated \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                throw new DukeException(\"Invalid index! please enter valid index..\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } catch (NumberFormatException | IOException | ParseException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            this.setMsg(e.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return isUpdated;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private List\u003cTask\u003e handleTodoUpdate(String[] inputs, int index, List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String description \u003d inputs[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        taskList.set(index, new Todo(description));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private List\u003cTask\u003e handleEventUpdate(String[] inputs, int index, List\u003cTask\u003e taskList)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throws ParseException, DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String[] descAndTime \u003d inputs[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        int arrayLength \u003d descAndTime.length;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (arrayLength \u003d\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            String newDescription \u003d descAndTime[0];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            Event updatedEvent \u003d (Event) taskList.get(index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            updatedEvent.setDescription(newDescription);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            taskList.set(index, updatedEvent);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (arrayLength \u003d\u003d 2) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            String updatedDescription \u003d descAndTime[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            String updatedTime \u003d descAndTime[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            taskList.set(index, new Event(updatedDescription, updatedTime));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throw new DukeException(\"You entered empty update fields.. \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    + \"please enter description/time to update!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private List\u003cTask\u003e handleDeadlineUpdate(String[] inputs, int index, List\u003cTask\u003e taskList)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throws ParseException, DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        String[] descAndTime \u003d inputs[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        int arrayLength \u003d descAndTime.length;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        if (arrayLength \u003d\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            //only updates description."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            String newDescription \u003d descAndTime[0];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            Deadline deadline \u003d (Deadline) taskList.get(index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            deadline.setDescription(newDescription);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            taskList.set(index, deadline);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else if (arrayLength \u003d\u003d 2) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            String description \u003d descAndTime[0];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            String time \u003d descAndTime[1];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            taskList.set(index, new Deadline(description, time));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throw new DukeException(\"You entered empty update fields.. \""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                    + \"please enter description/time to update!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private boolean checkIfTodo(int index, List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return taskList.get(index) instanceof Todo;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private boolean checkIfEvent(int index, List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return taskList.get(index) instanceof Event;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private boolean validateIndex(List\u003cTask\u003e taskList, int index) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return index \u003e\u003d 0 \u0026\u0026 index \u003c\u003d taskList.size() - 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private boolean checkEmpty(String[] inputs) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return inputs.length \u003d\u003d 1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 122
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/dto/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.model.dto;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Creates a Deadline object which extends Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param by specified time for the deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws ParseException when by has incorrect date format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Deadline(String description, String by)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.by \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Creates a Deadline object with desc, by and task status."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param by time specified for the deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param status task status whether it is cleared."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws ParseException when by has incorrect date format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Deadline(String description, String by, int status)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        super(description, status);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.by \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(by);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void setBy(Date by) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String toTextFileString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return super.toTextFileString() + \",\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                + new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").format(by);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 56
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/dto/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.model.dto;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Creates a Event object which extends Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param at time specified for the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws ParseException when date \u0027at\u0027 is in incorrect date format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.at \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(at);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Creates a Event object which extends task, specifying whether if the task is cleared."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param at time specified for the event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param status task status whether it is cleared or not."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @throws ParseException when date \u0027at\u0027 is in incorrect date format."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Event(String description, String at, int status) throws ParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        super(description, status);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.at \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(at);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Date getAt() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void setAt(Date at) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String toTextFileString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return super.toTextFileString()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                + \",\" + new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").format(at);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 53
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/dto/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.model.dto;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    protected String errorMsg;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Creates an empty Task object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.type \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.errorMsg \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Creates a Task object with description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.type \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Task(String description, int status) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.isDone \u003d (status \u003d\u003d 1 ? true : false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        setDone(true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✘]\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String toTextFileString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        int status \u003d (isDone ? 1 : 0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return type + \",\" + status + \",\" + description;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void setErrorMsg(String errorMsg) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String getErrorMsg() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return errorMsg;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 83
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/dto/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.model.dto;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/model/dto/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.model.dto;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public Todo(String description, int status) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        super(description, status);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        return \"[T]\" +  super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/core/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    void addTask() throws IOException, DukeException, ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        assertEquals(\"E\", new Storage().addTask(\"\", new ArrayList\u003cTask\u003e(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "                \"event\", \"project meeting\", \"28/08/19 12:00\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    void loadTask() throws IOException, ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        //create a new text file with dummy task values. then load it and then assertEqual with the"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        // first element of the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        List\u003cTask\u003e list \u003d new Storage().loadTask(\"data/duke_test.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        assertEquals(false, list.get(0).getIsDone());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 28
    }
  },
  {
    "path": "src/test/java/seedu/duke/core/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void displayTask() throws ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        taskList.add(new Todo(\"buy bread\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        taskList.add(new Deadline(\"submit CS2101 report\", \"20/09/19 23:59\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        assertEquals(\"\", ui.displayTask(\"\", taskList, 2));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 24
    }
  },
  {
    "path": "src/test/java/seedu/duke/model/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "package seedu.duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import seedu.duke.model.dto.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    void deadline() throws ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        Deadline d \u003d new Deadline(\"return book\", \"28/08/19 18:00\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        assertEquals(\"D\", d.getType());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        //assertEquals(\"[D][✘] return book (by: Mon Aug 28 18:00:00 SGT 19)\", d);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nordic96": 17
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "1.[T][✓] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "2.[T][✘] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "3.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "4.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "seedu.duke.exception.DukeException: Entered index is out of bound: 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "  [T][✘] borrow book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": "  [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "  [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nordic96"
        },
        "content": "seedu.duke.exception.DukeException: OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nordic96"
        },
        "content": "1.[T][✓] borrow book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nordic96"
        },
        "content": "2.[T][✘] borrow book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "3.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nordic96"
        },
        "content": "4.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nordic96"
        },
        "content": "5.[T][✘] borrow book"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nordic96"
        },
        "content": "6.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nordic96"
        },
        "content": "7.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nordic96"
        },
        "content": "[T][✓] borrow book"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nordic96"
        },
        "content": "1.[T][✓] borrow book"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nordic96"
        },
        "content": "2.[T][✘] borrow book"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nordic96"
        },
        "content": "3.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "4.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nordic96"
        },
        "content": "5.[T][✘] borrow book"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": "6.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": "7.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nordic96"
        },
        "content": "  [T][✘] borrow book"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nordic96"
        },
        "content": "1.[T][✓] borrow book"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nordic96"
        },
        "content": "2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nordic96"
        },
        "content": "3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nordic96"
        },
        "content": "4.[T][✘] borrow book"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nordic96"
        },
        "content": "5.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nordic96"
        },
        "content": "6.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nordic96"
        },
        "content": "  [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nordic96"
        },
        "content": "seedu.duke.exception.DukeException: Entered index is out of bound: -1"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nordic96"
        },
        "content": "1.[T][✓] borrow book"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nordic96"
        },
        "content": "2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nordic96"
        },
        "content": "3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nordic96"
        },
        "content": "4.[T][✘] borrow book"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nordic96"
        },
        "content": "5.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nordic96"
        },
        "content": "seedu.duke.exception.DukeException: Oops! please specify task description"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nordic96"
        },
        "content": "seedu.duke.exception.DukeException: Oops! please specify time (/at, /by ..."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nordic96"
        },
        "content": "seedu.duke.exception.DukeException: Oops! please specify task description"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nordic96"
        },
        "content": "seedu.duke.exception.DukeException: Oops! please specify time (/at, /by ..."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nordic96"
        },
        "content": "seedu.duke.exception.DukeException: oops! you entered cmd/desc/time empty.."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nordic96"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "nordic96": 105
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "deadline return book /by 28/08/19 18:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "event project meeting /at 23/09/19 12:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "asdafs"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "deadline finish assignment"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "todo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nordic96": 20
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nordic96"
        },
        "content": "REM if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nordic96"
        },
        "content": "cd ../"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nordic96"
        },
        "content": "call gradlew shadowJar"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nordic96"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nordic96"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nordic96"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nordic96"
        },
        "content": "REM compile the code into the bin folder "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "REM javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\seedu.duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nordic96"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nordic96"
        },
        "content": ")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nordic96"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nordic96"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "java -jar ..\\build\\libs\\duke-0.1.3.jar \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nordic96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nordic96"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nordic96"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "nordic96": 27
    }
  },
  {
    "path": "tutorials/gradleTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle is a _build automation tool_ used to automate build processes. There are many ways of integrating Gradle into a project. In this guide, we will be using the _Gradle wrapper_."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* [Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Gradle Support to Your Project](#adding-gradle-support-to-your-project)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Plugins](#adding-plugins)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [CheckStyle](#checkstyle)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Shadow](#shadow)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Dependencies](#adding-dependencies)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [JUnit](#junit)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Further Reading](#further-reading)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "As a developer, you write a _build file_ that describes the project. A build file mainly consists of _plugins_, _tasks_ and _properties_. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* **Plugins** extend the functionality of Gradle. For example, the `java` plugin adds support for `Java` projects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* **Tasks** are reusable blocks of logic.  For example, the task `clean` simply deletes the project build directory. Tasks can be composed of other tasks or be dependent on another task. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* **Properties** change the behavior of tasks. For instance, `mainClassName` of the `application` plugin is a compulsory property which tells Gradle which class is the entrypoint to your application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  As Gradle favors [_convention over configuration_](https://en.wikipedia.org/wiki/Convention_over_configuration), there is not much to you need to configure if you follow the recommended directory structure."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Gradle Support to Your Project "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Pull the branch named `gradle`. Merge it to the `master` branch. This will add the Gradle wrapper to your project."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout --track origin/gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout master"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   git merge gradle"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open the `build.gradle` file in an editor. Update the following code block to point to the main class (i.e., the one containing the `main` method) of your application. The code below assumes your main class is `seedu.duke.Duke`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   ```groovy"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "       mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "1. To check if Gradle has been added to the project correctly, open a terminal window, navigate to the root directory of your project and run the command `gradlew run`. This should result in Gradle running the main method of your project."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Simply run the command `gradlew {taskName}` in the terminal and Gradle will run the task! Here are some example commands:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew tasks` (or `gradlew tasks --all`): shows a list of tasks available"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew run`: runs the main class of your project"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Some plugins may add more helpful tasks so be sure to check their documentation!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "#### Using Gradle from within Intellij"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. After adding support for Gradle, Intellij might automatically ask you (via a pop-up at the bottom right corner of the Window) whether to import the project as a Gradle project. In that case, go ahead and say yes."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t happen, import the Gradle project by `Help \u003e Find Action \u003e Import Gradle Project`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Import Gradle](assets/ImportGradle.png)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t work either, close Intellij, delete the Intellij project files (i.e., `.idea` folder and `*.iml` files), and set up the project again, but instead of choosing `Create project from existing sources`, choose `Import project from external model` -\u003e `Gradle`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "After this, IntelliJ IDEA will identify your project as a Gradle project and you will gain access to the `Gradle Toolbar`. Through the toolbar, you run Gradle tasks and view your project\u0027s dependencies."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "You can click on the Gradle icon in the Gradle toolbar and create a new run configuration for running Gradle tasks without needing to type a `gradlew` command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "![Gradle icon](assets/GradleIcon.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Plugins"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle plugins are reusable units of build logic. Most common build tasks are provided as core plugins by Gradle. Given below are instructions on how to use some useful plugins:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "### CheckStyle"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "To add support for _Checkstyle_ (a tool to check if your code complies with a set of style rules), which comes as a core plugin, simply add the line `id \u0027checkstyle\u0027` into the `plugins` block."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Your build file should look something like this now:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "// ..."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Checkstyle expects configuration files for checkstyle to be in `./config/checkstyle/` by convention."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "A sample checkstyle rule configuration is provided in the branch."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin adds a few _tasks_ to your project. Run `gradlew checkstyleMain checkstyleTest` to verify that you have set up Checkstyle properly (the command will check your main code and test code against the style rules)."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for CheckStyle plugin](https://docs.gradle.org/current/userguide/checkstyle_plugin.html)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "### Shadow"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Shadow is a plugin that packages an application into an executable jar file. To use it, first add the following line to your Gradle build file:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin can be configured by setting some properties. Let\u0027s try to produce a jar file with the name in format of `{baseName}-{version}.jar`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following block to your build file:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Now you can run the command `gradlew shadowJar`.It publishes an executable jar to `./build/libs/`. You should be able to able to execute the created jar file by double-clicking it or using the command `java -jar {jarName}`?"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for Shadow plugin](https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* [More about the Shadow plugin](https://imperceptiblethoughts.com/shadow/introduction/)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Dependencies"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle can automate the management of dependencies to third-party libraries. Given below are some examples."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "JUnit is a testing framework for Java. It allows developers to write tests and run them. To manage JUnit dependency via Gradle, add the following to your build file:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Then, configure Gradle to use JUnit by adding the following block to your build file:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "By convention, java tests belong in `src/test/java` folder. Create a new `test/java` folder in under `src`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "src"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "├─main"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "│  └─java"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nordic96"
        },
        "content": "│     └─seedu/duke/seedu.duke.Duke.java"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "└─test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    └─java"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        └─seedu/duke/DukeTest.java"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "If you have imported your Gradle project into IntelliJ IDEA, you will notice that IDEA is able to mark the test directory as the _Test root_ (colored in green by default) automatically."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "You can now write a test (e.g., `test/java/seedu/duke/DukeTest.java`) and run it with `gradlew test`."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "## Further Reading"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Now that you have a general idea of how to accomplish basic tasks with Gradle, here\u0027s a list of material you can read to further your understanding."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* [Official Gradle Documentation](https://docs.gradle.org/current/userguide/userguide.html)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "----------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "nordic96": 1,
      "-": 169
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart1.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial Part 1 – Introduction"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## JavaFX lifecycle of an application"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Imagine yourself as a director of a play. First you provision the props that you will feature in your play. These can be hand props for your actors to interact with or even set dressings just to liven up the background. You then decide where to layout the props for every scene. With a proper script in hand, you can finally approach a theatre and request for a stage. There on, it’s just a matter of pulling the curtains on your masterpiece."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![Hierarchy of Objects in JavaFX](assets/JavaFxHierarchy.png)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "A JavaFX application is like a play you are directing. Instead of creating props, you create `Nodes` (`Nodes` are the fundamental building blocks of a JavaFX application), and place them onto a `Scene` (a scene is a graph of `Node`s). Then, you set your `Scene` on a `Stage` provided by JavaFX. When you call `Stage#show()` method, JavaFX renders a window with your `Stage` on it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up Java FX"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "### If you are not using Gradle"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Download the [JavaFX 11 SDK](https://gluonhq.com/products/javafx/) and unzip it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the `libs` folder from the SDK into your project (note: `JAVAFX_HOME` is the directory in which you have unzipped the JavaFX SDK). "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   `File` \u003e `Project Structure` \u003e `Libraries` \u003e `+` \u003e `Java` \u003e `{JAVAFX_HOME}/lib`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. From `Run` \u003e `Edit Configurations`, add the following line into your `VM options` for each of the `main` classes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   `--module-path {JAVAFX_HOME}/lib --add-modules javafx.controls,javafx.fxml`\u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   e.g., `--module-path C:/javafx-sdk-11.0.2/lib --add-modules javafx.controls,javafx.fxml`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "### If you are using Gradle"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Update your `build.gradle` to include the following lines:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Writing your first program"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "As customary, let’s start off with a simple “Hello World” program. Modify your `seedu.duke.Duke` class to extend `javafx.application.Application`. This requires you to override the `Application#start()` method and provide a concrete implementation. Notice that the method signature for `Application#start()` has a parameter `Stage`. This is the _primary stage_ that JavaFX provides."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class seedu.duke.Duke extends Application {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Note how we have created a `Label` to contain the text that we want to show. We then create the `Scene` and set its content. Finally, we set the stage and show it. "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "Next, we create another Java class, `Launcher`, as an entry point to our application."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "The `Launcher` class is reproduced below in its entirety."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        Application.launch(seedu.duke.Duke.class, args);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "Run `Launcher` and you should see something like this:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "![Hello World](assets/HelloWorld.png) "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! You have created your first GUI application!"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "1. We mentioned that `Node`s are the fundamental building blocks of JavaFX and used a `Label` as our root node in the HelloWorld application."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What are some of the other types of `Node`s?"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   1. How does JavaFX group them?"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "1. `Node`s can be interacted with like Plain Old Java Objects (POJO)."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What properties of a `Label` can you change programmatically?"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Try changing the `Label` to have a font of Arial at size 50."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "1. You’ve learnt that a `Stage` can be thought of as a window. "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Can you have more than one `Stage` an application?"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Try creating another stage and showing it! What happens?"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "nordic96": 3,
      "-": 107
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart2.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nordic96"
        },
        "content": "# JavaFX Tutorial Part 2 - Creating a GUI for seedu.duke.Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nordic96"
        },
        "content": "In this tutorial, we will be creating a GUI for seedu.duke.Duke from scratch based on the following mockup."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![Mockup for seedu.duke.Duke](assets/DukeMockup.png)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## JavaFX controls"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Controls are reusable UI elements. Refer to the [JavaFX\u0027s official documentation](https://openjfx.io/javadoc/11/javafx.controls/javafx/scene/control/package-summary.html) for a list of controls available."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "From the mockup above, can you identify the controls that we will need to use? "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Mockup | Control "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "------ | :---: |"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "![ImageView](assets/MockupImageView.png) | ImageView"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "![Label](assets/MockupLabel.png) | Label"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "![Button](assets/MockupButton.png) | Button"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "![TextField](assets/MockupTextField.png) | TextField"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "![ScrollPane](assets/MockupScrollPane.png) | ScrollPane"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "## Designing the Layout"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Now that we know what controls we need to implement our UI, let’s start programming! We quickly run into a problem: how do we show all of them on the screen at once? "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "Each scene is initialized with a root `Node`. In the previous tutorial, our root `Node` was a `Label`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "What happens when we need to display more than one `Node` on the `Scene`? For that, we need to understand the JavaFX hierarchy. Recall from the previous tutorial:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "![Hierarchy of Objects in JavaFX](assets/JavaFxHierarchy.png)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "From the diagram, you see that the root `Node` can contain many other `Nodes` and similarly, each of those `Nodes` can contain many other `Nodes`. This means that if we can find a _container_ to set as our root `Node`, we can place all our other `Nodes` in it."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "But how do we get the exact layout we want in the UI? JavaFX provides that functionality in the form of **layout panes** in `javafx.scene.layouts`. Each layout pane follows a _layout policy_ to decide how to arrange its children. For example, the `VBox` lays out its children in a single vertical column and its counterpart, the `HBox` lays out its children in a single horizontal row. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: A comprehensive list of layouts and how they behave is available here from the [official documentation](https://openjfx.io/javadoc/11/javafx.graphics/javafx/scene/layout/package-summary.html)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "One way to obtain the layout in the mockup is as follows. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![seedu.duke.Duke\u0027s layout](assets/DukeSceneGraph.png) "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "To get that layout, we create a new `AnchorPane` and add our controls to it. Similarly, we create a new `VBox` to hold the contents of the `ScrollPane`. The code should look something like this:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class seedu.duke.Duke extends Application {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // ... "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "         //Step 1. Setting up required components"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "         "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "         scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "         dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "         scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "         userInput \u003d new TextField();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "         sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "         AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "         mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "         scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "         stage.setScene(scene);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "         stage.show();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application and you should see something like this:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![seedu.duke.Duke\u0027s raw layout](assets/RawLayout.png)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "That is not what we were expecting, what did we forget to do?"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "## Styling the Controls"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "Almost every JavaFX object offer properties that you can set to customize its look and feel. For example, the `Stage` allows you to set its preferred size and title. Again, refer to the official JavaFX documentation for a comprehensive list of properties that you can modify. Here’s how you can get the application to look like the mockup:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following code to the bottom of the `start` method. You\u0027ll have to add `import javafx.scene.layout.Region;` to the imports too."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        //Step 1. Formatting the window to look as expected."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "         "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        //..."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nordic96"
        },
        "content": "        stage.setTitle(\"seedu.duke.Duke\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this. "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application again. It should now look like this:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nordic96"
        },
        "content": "![seedu.duke.Duke\u0027s Final layout](assets/FinalLayout.png)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "1. In the tutorial, we used an `AnchorPane` to achieve the desired layout.  "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Can you find other ways to obtain a similar layout? "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What are the advantages and disadvantages of your layout?"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "1. Try interacting with the application"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What happens when you press the `Enter` key or left-click the send button?"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Why?"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "nordic96": 8,
      "-": 150
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart3.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 3 – Interacting with the user"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Picking up from where we left off last tutorial, we have successfully achieved the desired layout. Now let’s make the application respond to user input. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Rather than to do everything in one try, let’s iterate and build up towards our final goal. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 1 – Echoing the User"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "JavaFX has an _event-driven architecture style_. As such, we programmatically define _handler_ methods to execute as a response to certain _events_. When an event is detected, JavaFX will call the respective handlers."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nordic96"
        },
        "content": "For seedu.duke.Duke, there are two events that we want to respond to, namely the user pressing `Enter` in the `TextField` and left-clicking the `Button`. These are the `onAction` event for the `TextField` and the `onMouseClicked` event for the `Button`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "For now, let’s have the application add a new `Label` with the text from the `TextField`. Update the `Main` class as follows. You\u0027ll need to add an `import javafx.scene.control.Label;` too."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Step 1 code here"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 2 code here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 1:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * @param text String containing text to add"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    return textToAdd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and give it a whirl!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "![Echo not scrolling as intended](assets/EchoNotScrolling.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "At first glance everything appears to work perfectly. However, when the `VBox` stretches beyond the confines of the `ScrollPane`, the `ScrollPane` does not scroll down automatically as expected. We can remedy this by attaching a handler on the `VBox` to react to its own size changing and scrolling the `ScrollPane` down."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Update the `start` method as shown below."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    // current code ..."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Verify that the `ScrollPane` scrolls as intended."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 2 – Adding Dialog Boxes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "In the mockup of the UI, notice that the dialog boxes are composed of two different controls (`ImageView` and `Label`) and reused multiple times. In situations like this, it is often beneficial to create our own custom control."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s create our custom control `DialogBox`:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "We use the code in our main class just like any other control. Here are the steps to update the code to use the custom control in `Main.java`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "First, add these imports:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "Next, add two images to the `main/resources/images` folder."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nordic96"
        },
        "content": "For this tutorial, we have two images `DaUser.png` and `DaDuke.png` to represent the user avatar and seedu.duke.Duke\u0027s avatar respectively but you can use any image you want."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "Image|Filename"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "---|---"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "![DaDuke](assets/DaUser.png) | `DaUser.png`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "![DaUser](assets/DaDuke.png) | `DaDuke.png`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nordic96"
        },
        "content": "public class seedu.duke.Duke extends Application {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Add a new method to handle user input:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 2:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nordic96"
        },
        "content": " * Creates two dialog boxes, one echoing user input and the other containing seedu.duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": " * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": " * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": " * Replace this stub with your completed method."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "private String getResponse(String input) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    return \"seedu.duke.Duke heard: \" + input;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "Update the event handler code in the `start` method to use the new `handleUserInput` method:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and see how it works."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 2](assets/DialogBoxesIteration2.png) "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 3 – Adding custom behavior to DialogBox"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nordic96"
        },
        "content": "One additional benefit of defining a custom control is that we can add behavior specific to our `DialogBox`. Let’s add a method to flip a dialog box such that the image on the left to differentiate between user input and seedu.duke.Duke’s output."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": " * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "private void flip() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    db.flip();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    return db;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "You\u0027ll need to update the imports as follows:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "Now, we can go back to the `Main` class and change the event handler to use our new `DialogBox`. "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application and play around with it. "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 3](assets/DialogBoxesIteration3.png)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "nordic96"
        },
        "content": "You have successfully implemented a fully functional GUI for seedu.duke.Duke!  "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "1. While the GUI looks similar to the mockup, there are still parts that need to be refined. Try your hand at some of these tasks:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each DialogBox"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each ImageView and its Label"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "   * Clip the ImageView into a circle"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add background color to each dialog box"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "1. After attempting the changes, reflect critically on the following:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * What was the development workflow like?"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   * Is the code base well-organized?"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "nordic96": 7,
      "-": 236
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart4.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 4 – FXML "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "While we have produced a fully functional prototype, there are a few major problems with our application."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "1. The process of visually enhancing the GUI is long and painful:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   * Does the `TextField` need to be 330px or 325px wide? "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   * How much padding is enough padding to look good?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   Every small change requires us to rebuild and run the application.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Components are heavily dependent on each other:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   Why does `Main` need to know that `DialogBox` needs a `Label`? "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   What happens if we change the `Label` to a custom `ColoredLabel` in the future?  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    We need to minimize the amount of information each control needs to know about another."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    Otherwise, making changes in the future will break existing features."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. The code is untidy and long:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   Why is all the code in one place?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   The `Main` class attempts to do it all. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   Code for visual tweaks, listeners and even utility methods are all in one file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   This makes it difficult to find and make changes to existing code."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FXML is a XML-based language that allows us to define our user interface. Properties of JavaFX objects can be defined in the FXML file. For example:  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "The FXML snippet define a TextField similar to the one that we programmatically defined previous in Tutorial 2. Notice how concise FXML is compared to the plain Java version."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Let\u0027s return to seedu.duke.Duke and convert it to use FXML instead."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# Rebuilding the Scene using FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Scene Builder is a tool developed by Oracle and currently maintained by Gluon. It is a What-You-See-Is-What-You-Get GUI creation tool. [Download](https://gluonhq.com/products/scene-builder/#download) the appropriate version for your OS and install it."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Create the following files in `src/main/resources/view`:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.fxml**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.fxml**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s explore the provided FXML files in Scene Builder. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    Running the tool brings up the main screen."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    Select `Open Project` \u003e `src/main/resources/view/MainWindow.fxml`. Inspect each control and its properties."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   ![SceneBuilder opening MainWindow.fxml](assets/SceneBuilder.png)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the right accordion pane, you can modify the properties of the control that you have selected. Try changing the various settings and see what they do!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the left accordion, you can see that we have set the controller class to `MainWindow`. "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "We will get to that later."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Controller for MainWindow](assets/MainWindowController.png)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s repeat the process for `DialogBox`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   The main difference here is that DialogBox checks `Use fx:root construct` and _does not define a controller class_. "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Settings for DialogBox](assets/DialogBoxController.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "## Using Controllers"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nordic96"
        },
        "content": "As part of the effort to separate the code handling seedu.duke.Duke\u0027s logic and UI, let\u0027s _refactor_ the UI-related code to its own class."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "We call these UI classes _controllers_. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s implement the `MainWindow` controller class that we specified in `MainWindow.fxml`."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.java**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private seedu.duke.Duke duke;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    public void setDuke(seedu.duke.Duke d) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nordic96"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing seedu.duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "The `@FXML` annotation marks a `private` or `protected` member and makes it accessible to FXML despite its modifier."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "Without the annotation, we will have to make everything `public` and expose our UI to unwanted changes."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "The `FXMLLoader` will map the a control with a `fx:id` defined in FXML to a variable with the same name in its controller."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "Notice how in `MainWindow`, we can invoke `TextField#clear()` on `userInput` and access its content just as we did in the previous example."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Similarly, methods like private methods like `handleUserInput` can be used in FXML when annotated by `@FXML`. "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "## Using FXML in our application"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nordic96"
        },
        "content": "Let\u0027s create a new `Main` class as the bridge between the existing logic in `seedu.duke.Duke` and the UI in `MainWindow`."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "**Main.java**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nordic96"
        },
        "content": " * A GUI for seedu.duke.Duke using FXML."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nordic96"
        },
        "content": "    private seedu.duke.Duke duke \u003d new seedu.duke.Duke();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "Again, we can interact with the `AnchorPane` defined in the FXML as we would have if we created the `AnchorPane` ourselves."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "For our custom `DialogBox`, we did not define a controller so let\u0027s create a controller for it."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.java**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "When we create a new instance of `DialogBox`, we set both the controller and root Node to `DialogBox`. "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "From this point onwards we can interact with `DialogBox` as we have in the previous tutorials."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "The last change that we have to make is to point our `Launcher` class in the right direction:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "In `Launcher.java`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "//...    "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "[todo]: # (Discussion on the fx:root pattern.)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "1. Convert `MainWindow` to use the `fx:root` construct."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "1. Extend `MainWindow` to have a `Stage` as a root Node."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "1. Customize the appearance of the application further with CSS."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "nordic96": 8,
      "-": 286
    }
  },
  {
    "path": "tutorials/textUiTestingTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Text UI Testing Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "1. Create a folder `[project root]\\text-ui-test`"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add a `runtest.bat` (if you are on Windows) or `runtest.sh` (if you are on a *nix OS) into the folder, containing the script below.\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  `runtest.bat`:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   @ECHO OFF"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nordic96"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\seedu.duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nordic96"
        },
        "content": "   java -classpath ..\\bin seedu.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   `runtest.sh`:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   ```shell"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "       mkdir ../bin"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nordic96"
        },
        "content": "   if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/seedu.duke.Duke.java"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nordic96"
        },
        "content": "   java -classpath ../bin seedu.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   else"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "1. Update the `javac` and `java` commands in the script to match the name/location of your main class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `EXPECTED.txt` to the same folder, containing the expected output."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `input.txt` containing the input commands."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "1. Run the `.bat`/`.sh` file to execute the test."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: based on se-edu/addressbook-level2, adapted by Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "nordic96": 4,
      "-": 70
    }
  }
]
