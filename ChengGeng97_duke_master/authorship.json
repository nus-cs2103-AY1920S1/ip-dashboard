[
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class DeadlineTask implements Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final DukeDateTime doByDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public DeadlineTask(String description, String doByString) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String [] dateTimeStrings \u003d doByString.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.doByDateTime \u003d new DukeDateTime(dateTimeStrings[0], dateTimeStrings[1]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public DeadlineTask(String description, DukeDateTime doByDateTime, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.doByDateTime \u003d doByDateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns a copy of this task but with its completion status marked as done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public Task getTaskMarkedAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new DeadlineTask(description, doByDateTime, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns a copy of this task but with its completion status marked as undone"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public Task getTaskMarkedUndone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new DeadlineTask(description, doByDateTime, false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns a string representation of the Task, including its type, completion status, description and deadline"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\"[D][\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(Task.getStatusIcon(isDone));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\"] \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(this.description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\" (by: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(doByDateTime.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\")\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Converts the task into a computer-readable string"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String toSaveFileString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\"D\"); //Task Type"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(Task.DEMARCATOR_STRING);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(description); //Description"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(Task.DEMARCATOR_STRING);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(isDone ? 1 : 0); //Completion Status"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(Task.DEMARCATOR_STRING);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(doByString); //Deadline of Event"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 60
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.io.UnsupportedEncodingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static String helloMessage \u003d \"Heya! It\u0027s friendly neighbourhood Duke at your service!\\nWhat\u0027s the plan today?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static String goodbyeMessage \u003d \"Alright, see you again!\\nGood luck, and do your best!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static String taskAddedMessage \u003d \"Gotcha! I\u0027ve added a new task:\\n  %s\\nYou\u0027ve got %d tasks in your list.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static String taskDoneMessage \u003d \"Good job! I\u0027ve marked this task as done:\\n  %s\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static String taskDeletedMessage \u003d \"No problem! I\u0027ve deleted the task:\\n %s\\nYou\u0027ve got %d tasks in your list.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private DukeSaveLoad dukeSaveLoad \u003d new DukeSaveLoad();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Constructor for Duke"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        //If a pre-existing list exists, creates list data from it. Otherwise, an empty TaskList is initialised. "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        tasks \u003d dukeSaveLoad.createTaskListByReadingFromSaveFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Main method. Contains the interaction loop between Duke and the User."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static void main(String[] args) throws UnsupportedEncodingException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PrintStream printStream \u003d new PrintStream(System.out, true, \"UTF-8\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        printStream.print(duke.sayHi());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        while (true) { //Interaction loop with user. This will persist until shutdown."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                DukeReply dukeReply \u003d duke.processUserInput(userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                printStream.print(dukeReply.dukeReplyString);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                if(dukeReply.shouldExitLoop) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                printStream.print(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //returns Duke\u0027s helloMessage"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String sayHi() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return DukeTextFormatter.makeFormattedText(helloMessage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //returns a DukeReply to be printed out, or a throws an error if input cannot be parsed by Duke"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public DukeReply processUserInput(String userInputString) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        switch(identifyUserInputType(userInputString)){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        case Bye: //Duke will close down"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return new DukeReply(true, DukeTextFormatter.makeFormattedText(goodbyeMessage));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        case List: //Duke will return the full list of Tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                return new DukeReply(false, DukeTextFormatter.makeFormattedText(\"You\u0027ve got no tasks on your list!\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                return new DukeReply(false, DukeTextFormatter.makeFormattedText(this.tasks.toString()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        case Done: //Duke will mark one Task for completion"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            DukeReply doneReply \u003d processDoneCase(userInputString);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            dukeSaveLoad.writeTaskListToSaveFile(tasks); //Update the Save File"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return doneReply;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        case Delete:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            DukeReply deleteReply \u003d processDeleteCase(userInputString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            dukeSaveLoad.writeTaskListToSaveFile(tasks); //Update the Save File"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return deleteReply;            "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        case ToDo: //Duke will record a Todo Task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            DukeReply ToDoReply \u003d processTodoCase(userInputString);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            dukeSaveLoad.writeTaskListToSaveFile(tasks); //Update the Save File"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return ToDoReply;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        case Deadline: //Duke will record a Deadline Task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            DukeReply deadlineReply \u003d processDeadlineCase(userInputString);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            dukeSaveLoad.writeTaskListToSaveFile(tasks); //Update the Save File"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return deadlineReply;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        case Event: //Duke will record an Event Task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            DukeReply eventReply \u003d processEventCase(userInputString);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            dukeSaveLoad.writeTaskListToSaveFile(tasks); //Update the Save File"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return eventReply;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        case Invalid: //Something went wrong"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            throw new InvalidInputException(\"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        default: //Something went wrong"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            throw new InvalidInputException(\"\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Exists to make processUserInput a lot neater, by identifying the type of command the User issued."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private userInputType identifyUserInputType(String userInputString) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if(userInputString.toLowerCase().startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return userInputType.Bye;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else if (userInputString.toLowerCase().startsWith(\"list\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return userInputType.List;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else if (userInputString.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return userInputType.Done;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else if (userInputString.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return userInputType.Delete;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else if (userInputString.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return userInputType.ToDo;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else if (userInputString.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return userInputType.Deadline;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else if (userInputString.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return userInputType.Event;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return userInputType.Invalid;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Processes the Done case. Returns a Reply stating that this has been successful, and throws an Exception otherwise."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private DukeReply processDoneCase(String userInputString) throws IndexNotInRangeException, NoTaskDescriptionException, IndexNotANumberException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String [] splitString \u003d userInputString.split(\" \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        boolean indexExists \u003d splitString.length \u003e 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            if(indexExists) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                int userSpecifiedIndex \u003d Integer.parseInt(splitString[1]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                boolean indexIsInRange \u003d userSpecifiedIndex \u003e 0 \u0026\u0026 userSpecifiedIndex \u003c\u003d tasks.size();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                if(indexIsInRange) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    Task newlyFinishedTask \u003d tasks.markAsDone(userSpecifiedIndex);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    return new DukeReply(false, DukeTextFormatter.makeFormattedText(String.format(taskDoneMessage, newlyFinishedTask.toString(), tasks.size()))); "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    throw new IndexNotInRangeException(splitString[1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                throw new NoTaskDescriptionException(splitString[0]);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            throw new IndexNotANumberException(splitString[1]);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Processes the Delete case. Returns a Reply stating that this has been successful, and throws an Exception otherwise."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private DukeReply processDeleteCase(String userInputString) throws IndexNotInRangeException, NoTaskDescriptionException, IndexNotANumberException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String [] splitString \u003d userInputString.split(\" \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        boolean indexExists \u003d splitString.length \u003e 1;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            if(indexExists) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                int userSpecifiedIndex \u003d Integer.parseInt(splitString[1]);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                boolean indexIsInRange \u003d userSpecifiedIndex \u003e 0 \u0026\u0026 userSpecifiedIndex \u003c\u003d tasks.size();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                if(indexIsInRange) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    Task newlyDeletedTask \u003d tasks.deleteAt(userSpecifiedIndex);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    return new DukeReply(false, DukeTextFormatter.makeFormattedText(String.format(taskDeletedMessage, newlyDeletedTask.toString(), tasks.size()))); "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    throw new IndexNotInRangeException(splitString[1]);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                throw new NoTaskDescriptionException(splitString[0]);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            throw new IndexNotANumberException(splitString[1]);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Processes the Todo case. Returns a Reply stating that this has been successful, and throws an Exception otherwise."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private DukeReply processTodoCase(String userInputString) throws NoTaskDescriptionException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        //Retrieve relevant data from user input"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String taskDescription \u003d userInputString.substring(4).trim();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        boolean taskExists \u003d taskDescription.length() \u003e 0;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if(taskExists) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Intialise and record the new Task"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            Task newTask \u003d new ToDoTask(taskDescription);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return new DukeReply(false, DukeTextFormatter.makeFormattedText(String.format(taskAddedMessage, newTask.toString(), tasks.size())));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            throw new NoTaskDescriptionException(userInputString.trim());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Processes the Deadline case. Returns a Reply stating that this has been successful, and throws an Exception otherwise."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private DukeReply processDeadlineCase(String userInputString) throws IncompleteInputException {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        //Retrieve relevant data from user input"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        //Input is considered incomplete when there is no \u0027/by\u0027"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String [] splitString \u003d userInputString.split(\"/by\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        boolean inputIsComplete \u003d (splitString.length \u003d\u003d 2);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if(inputIsComplete) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            String taskDescription \u003d splitString[0].substring(8).trim(); //gets rid of the \"deadline\" at the start of the String"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            String doByString \u003d splitString[1].trim();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Initialise and record the new Task"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            Task newTask \u003d new DeadlineTask(taskDescription, doByString);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return new DukeReply(false, DukeTextFormatter.makeFormattedText(String.format(taskAddedMessage, newTask.toString(), tasks.size())));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            throw new IncompleteInputException(\"deadline\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Processes the Event case. Returns a Reply stating that this has been successful, and throws an Exception otherwise."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private DukeReply processEventCase(String userInputString) throws IncompleteInputException {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        //Retrieve relevant data from user input"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        //Input is considered incomplete when there is no \u0027/at\u0027"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String [] splitString \u003d userInputString.split(\"/at\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        boolean inputIsComplete \u003d (splitString.length \u003d\u003d 2);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if(inputIsComplete) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            String taskDescription \u003d splitString[0].substring(5).trim();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            String timingString \u003d splitString[1].trim();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            String [] startEndTimeStrings \u003d timingString.split(\"to\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //Initialise and record the new Task"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            Task newTask \u003d new EventTask(taskDescription, startEndTimeStrings[0].trim(), startEndTimeStrings[1].trim());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    "
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return new DukeReply(false, DukeTextFormatter.makeFormattedText(String.format(taskAddedMessage, newTask.toString(), tasks.size())));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            throw new IncompleteInputException(\"event\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Used to identify the type of command issued by the User"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private enum userInputType {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Bye, List, Done, Delete, ToDo, Deadline, Event, Invalid"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    };"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 232,
      "Jeffry Lum": 1,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class DukeDateTime {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final LocalTime time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Date should be received in DD/MM/YYYY format"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Time should be received in Military Time (HHMM)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public DukeDateTime (String dateString, String militaryTimeString) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        date \u003d parseDate(dateString);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        time \u003d parseMilitaryTime(militaryTimeString);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private LocalDate parseDate (String dateString) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String [] dateStringSplit \u003d dateString.split(\"/\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        LocalDate localDate \u003d LocalDate.of(Integer.parseInt(dateStringSplit[2]), "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                                           Integer.parseInt(dateStringSplit[1]),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                                           Integer.parseInt(dateStringSplit[0]));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return localDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private LocalTime parseMilitaryTime (String militaryTimeString) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        int hourOfDay \u003d Integer.parseInt(militaryTimeString.substring(0, 2));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        int minuteOfDay \u003d Integer.parseInt(militaryTimeString.substring(2, 4));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        LocalTime localTime \u003d LocalTime.of(hourOfDay, minuteOfDay);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return localTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String dateString \u003d date.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(dateString.substring(8, 10));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\"/\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(dateString.substring(5, 7));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\"/\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(dateString.substring(0, 4));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String timeString \u003d time.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(timeString.substring(0, 2));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(timeString.substring(3, 5));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 51
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 7
    }
  },
  {
    "path": "src/main/java/DukeReply.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class DukeReply {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final boolean shouldExitLoop;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final String dukeReplyString;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public DukeReply(boolean shouldExitLoop, String dukeReplyString) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.shouldExitLoop \u003d shouldExitLoop;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.dukeReplyString \u003d dukeReplyString;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 9
    }
  },
  {
    "path": "src/main/java/DukeSaveLoad.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class DukeSaveLoad {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final String SAVE_FILE_NAME \u003d \"SavedData.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final File saveFile;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public DukeSaveLoad () {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.saveFile \u003d new File(System.getProperty(\"user.dir\") + \"/\" + SAVE_FILE_NAME);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            if(!saveFile.exists()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Writes to SaveFile.txt the list data"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void writeTaskListToSaveFile(TaskList tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            String taskListSaveFileString \u003d tasks.toSaveFileString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(saveFile));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            bw.write(tasks.toSaveFileString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            bw.flush();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Creates and returns a TaskList generated by reading SaveFile.txt"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public TaskList createTaskListByReadingFromSaveFile () {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        TaskList newTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(saveFile));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //String line \u003d br.readLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            while((line \u003d br.readLine())!\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                newTaskList.add(Task.createTaskFromSaveFileString(line));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return newTaskList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 55
    }
  },
  {
    "path": "src/main/java/DukeTextFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class DukeTextFormatter {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String BAR \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String FOUR_SPACE \u003d \"    \";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String FIVE_SPACE \u003d \"     \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Formats a given String to appear neater when printed."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static String makeFormattedText(String inputString) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        //Splits the string into separate lines"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String [] splitString \u003d inputString.split(\"\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(FOUR_SPACE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(BAR);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        //Indents each line of the String to be formatted"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        for (String s : splitString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            sb.append(FIVE_SPACE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            sb.append(s);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            sb.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(FOUR_SPACE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(BAR);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 28
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class EventTask implements Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final DukeDateTime startDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final DukeDateTime endDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //User inputs Date as DD/MM/YYYY and in Military Time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public EventTask(String description, String startTimeString, String endTimeString) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String [] startTimeStrings \u003d startTimeString.split(\" \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        startDateTime \u003d new DukeDateTime(startTimeStrings[0], startTimeStrings[1]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String [] endTimeStrings \u003d endTimeString.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        endDateTime \u003d new DukeDateTime(endTimeStrings[0], endTimeStrings[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public EventTask(String description, DukeDateTime startDateTime, DukeDateTime endDateTime, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.endDateTime \u003d endDateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public Task getTaskMarkedAsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        //Returns a copy of this task but with its completion status marked as done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new EventTask(description, startDateTime, endDateTime, true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public Task getTaskMarkedUndone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        //Returns a copy of this task but with its completion status marked as undone"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new EventTask(description, startDateTime, endDateTime, false);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns a string representation of the Task, including its type, completion status, description and duration"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\"[E][\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(Task.getStatusIcon(isDone));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\"] \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(this.description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\" (at: \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(startDateTime.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\" to \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(endDateTime.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\")\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Converts the task into a computer-readable string"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String toSaveFileString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\"E\"); //Task Type"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(Task.DEMARCATOR_STRING);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(description); //Description"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(Task.DEMARCATOR_STRING);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(isDone ? 1 : 0); //Completion Status"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(Task.DEMARCATOR_STRING);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(timingString); //Timing of Event"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 68
    }
  },
  {
    "path": "src/main/java/IncompleteInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class IncompleteInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public IncompleteInputException (String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        super(DukeTextFormatter.makeFormattedText(String.format(\"You\u0027re lacking something in your \u0027%s\u0027 command, frendo.\", errorMessage)));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 5
    }
  },
  {
    "path": "src/main/java/IndexNotANumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class IndexNotANumberException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public IndexNotANumberException (String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        super(DukeTextFormatter.makeFormattedText(String.format(\"Sorry, but I need a numerical value, not whatever \\u0027%s\\u0027 is.\", errorMessage)));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 5
    }
  },
  {
    "path": "src/main/java/IndexNotInRangeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class IndexNotInRangeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public IndexNotInRangeException (String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        super(DukeTextFormatter.makeFormattedText(String.format(\"I\u0027m no good at math, but are you sure \u0027%s\u0027 is on your list?\", errorMessage)));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 5
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public InvalidInputException (String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        super(DukeTextFormatter.makeFormattedText(\"Hmm-? Ah, yes! Haha, I totally get it!\\n(Doesn\u0027t get it at all)\"));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 5
    }
  },
  {
    "path": "src/main/java/NoTaskDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NoTaskDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public NoTaskDescriptionException (String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        super(DukeTextFormatter.makeFormattedText(String.format(\"Open up a little, won\u0027tcha? Just \u0027%s\u0027 ain\u0027t enough!\", errorMessage)));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public interface Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    static final char UNICODE_TICK \u003d (char) 0x2713;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    static final char UNICODE_CROSS \u003d (char) 0x2718;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    static final String DEMARCATOR_STRING \u003d \":split:\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns the character for a Tick for true and a Cross for false"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    static char getStatusIcon(boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return isDone ? UNICODE_TICK : UNICODE_CROSS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns a copy of this task but with its completion status marked as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public Task getTaskMarkedAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns a copy of this task but with its completion status marked as undone"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public Task getTaskMarkedUndone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Converts the task into a computer-readable string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Strings should take the form \u003cTask-Type\u003e | \u003cDescription\u003e | \u003cCompletion Status\u003e | \u003cAdditional Timing Data\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String toSaveFileString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Converts a computer-readable string into a Task, and returns that Task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static Task createTaskFromSaveFileString(String saveFileString) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String [] splitString \u003d saveFileString.split(DEMARCATOR_STRING);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        switch(splitString[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                return new ToDoTask(splitString[1], Integer.parseInt(splitString[2]) \u003d\u003d 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            case \"E\": "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                return new EventTask(splitString[1], splitString[3], Integer.parseInt(splitString[2]) \u003d\u003d 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            case \"D\": "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                return new DeadlineTask(splitString[1], splitString[3], Integer.parseInt(splitString[2]) \u003d\u003d 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                throw new IOException(\"Unreadable Task Type \" + splitString[0] + \" in \" + saveFileString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 41
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Adds a task to the end of the TaskList"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Deletes the task at the specified index by decreasing the index of all subsequent entries by 1."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public Task deleteAt(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        int realIndex \u003d index - 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Task deletedTask \u003d tasks.get(realIndex);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        tasks.remove(realIndex);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Replaces the task at the specified index with a clone marked as done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public Task markAsDone(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        int realIndex \u003d index - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        tasks.set(realIndex, tasks.get(realIndex).getTaskMarkedAsDone());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return tasks.get(realIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns whether or not the TaskList is empty"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns the number of elements in the TaskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Converts the TaskList into a human-readable String"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        int iterator \u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            //For each Task t, print out one line of \"X.[\u003cStatus\u003e] Description\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            sb.append(iterator++);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            sb.append(\".\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            sb.append(t.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            sb.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //converts the TaskList into a computer-readable string"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String toSaveFileString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        for(Task t : tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            sb.append(t.toSaveFileString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 63
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class ToDoTask implements Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public ToDoTask(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public ToDoTask(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns a copy of this task but with its completion status marked as done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public Task getTaskMarkedAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new ToDoTask(description, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns a copy of this task but with its completion status marked as undone"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public Task getTaskMarkedUndone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new ToDoTask(description, false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Returns a string representation of the Task, including its type, completion status and description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\"[T][\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(Task.getStatusIcon(isDone));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\"] \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(this.description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    //Converts the task into a computer-readable string"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String toSaveFileString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(\"T\"); //Task Type"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(Task.DEMARCATOR_STRING);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(description); //Description"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(Task.DEMARCATOR_STRING);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        sb.append(isDone ? 1 : 0); //Completion Status"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 49
    }
  }
]
